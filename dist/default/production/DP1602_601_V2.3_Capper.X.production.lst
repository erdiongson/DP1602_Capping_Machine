

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jul 25 13:53:57 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F65J50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Version 2.40
    77                           ; Generated 04/07/2022 GMT
    78                           ; 
    79                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F65J50 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000000                     
   112                           	psect	idataCOMRAM
   113   00259C                     __pidataCOMRAM:
   114                           	callstack 0
   115                           
   116                           ;initializer for _error2counter
   117   00259C  001E               	dw	30
   118   00259E  0000               	dw	0
   119                           
   120                           ;initializer for _Old_Number
   121   0025A0  FFFF               	dw	65535
   122   0025A2  0000               	dw	0
   123                           
   124                           ;initializer for _FeederRotate2Time
   125   0025A4  0032               	dw	50
   126                           
   127                           ;initializer for _FeederRotate1Time
   128   0025A6  0032               	dw	50
   129                           
   130                           ;initializer for _digit
   131   0025A8  0001               	dw	1
   132                           
   133                           ;initializer for _error_number
   134   0025AA  30                 	db	48
   135                           
   136                           ;initializer for _OpMode
   137   0025AB  01                 	db	1
   138                           
   139                           	psect	idataBANK0
   140   00249E                     __pidataBANK0:
   141                           	callstack 0
   142                           
   143                           ;initializer for _error6counter
   144   00249E  001E               	dw	30
   145   0024A0  0000               	dw	0
   146                           
   147                           ;initializer for _error5counter
   148   0024A2  001E               	dw	30
   149   0024A4  0000               	dw	0
   150                           
   151                           ;initializer for _error4counter
   152   0024A6  001E               	dw	30
   153   0024A8  0000               	dw	0
   154                           
   155                           ;initializer for _error3counter
   156   0024AA  001E               	dw	30
   157   0024AC  0000               	dw	0
   158                           
   159                           ;initializer for _error1counter
   160   0024AE  0032               	dw	50
   161   0024B0  0000               	dw	0
   162                           
   163                           ;initializer for _LiftUpTime
   164   0024B2  0032               	dw	50
   165                           
   166                           ;initializer for _sw1counter
   167   0024B4  0014               	dw	20
   168                           
   169                           ;initializer for _LiftUpHoldCounter
   170   0024B6  0005               	dw	5
   171                           
   172                           ;initializer for _startup
   173   0024B8  0001               	dw	1
   174                           
   175                           ;initializer for _error_digit
   176   0024BA  0001               	dw	1
   177                           
   178                           ;initializer for _warning_number
   179   0024BC  30                 	db	48
   180   000000                     _RCREG2	set	4010
   181   000000                     _TXREG2	set	4009
   182   000000                     _SPBRG2	set	4011
   183   000000                     _SSP2STAT	set	3949
   184   000000                     _SSP2ADD	set	3950
   185                           
   186                           	psect	nvBANK0
   187   0000CD                     __pnvBANK0:
   188                           	callstack 0
   189   0000CD                     _TotalNumH:
   190                           	callstack 0
   191   0000CD                     	ds	4
   192   0000D1                     _TotalNumL:
   193                           	callstack 0
   194   0000D1                     	ds	4
   195   0000D5                     _number:
   196                           	callstack 0
   197   0000D5                     	ds	4
   198   0000D9                     _TotalNum_LowL:
   199                           	callstack 0
   200   0000D9                     	ds	2
   201   0000DB                     _TotalNum_LowH:
   202                           	callstack 0
   203   0000DB                     	ds	2
   204   0000DD                     _TotalNum_HighL:
   205                           	callstack 0
   206   0000DD                     	ds	2
   207   0000DF                     _TotalNum_HighH:
   208                           	callstack 0
   209   0000DF                     	ds	2
   210   0000E1                     _EAdd_Low:
   211                           	callstack 0
   212   0000E1                     	ds	2
   213   0000E3                     _EAdd_High:
   214                           	callstack 0
   215   0000E3                     	ds	2
   216   000000                     _LATAbits	set	3977
   217   000000                     _ANCON0bits	set	4033
   218   000000                     _INTCONbits	set	4082
   219   000000                     _ACKEN2	set	31580
   220   000000                     _ACKDT2	set	31581
   221   000000                     _RCEN2	set	31579
   222   000000                     _PEN2	set	31578
   223   000000                     _RSEN2	set	31577
   224   000000                     _SEN2	set	31576
   225   000000                     _TRISD6	set	31918
   226   000000                     _TRISD5	set	31917
   227   000000                     _TMR2IE	set	31977
   228   000000                     _TMR2IF	set	31985
   229   000000                     _TMR0IF	set	32658
   230   000000                     _SSP2CON2	set	3947
   231   000000                     _SSP2CON1	set	3948
   232   000000                     _PORTA	set	3968
   233   000000                     _PORTBbits	set	3969
   234   000000                     _PORTDbits	set	3971
   235   000000                     _PORTEbits	set	3972
   236   000000                     _IPR3bits	set	4005
   237   000000                     _RCONbits	set	4048
   238   000000                     _GIE	set	32663
   239   000000                     _TMR0	set	4054
   240   000000                     _T0CON	set	4053
   241   000000                     _TMR1	set	4046
   242   000000                     _TXSTA2bits	set	4008
   243   000000                     _RCSTA1bits	set	4012
   244   000000                     _LATA	set	3977
   245   000000                     _PORTFbits	set	3973
   246   000000                     _LATBbits	set	3978
   247   000000                     _LATCbits	set	3979
   248   000000                     _LATEbits	set	3981
   249   000000                     _LATFbits	set	3982
   250   000000                     _TRISA	set	3986
   251   000000                     _TMR1IF	set	31984
   252   000000                     _PIE3bits	set	4003
   253   000000                     _IPR1bits	set	3999
   254   000000                     _PIR3bits	set	4004
   255   000000                     _WDTCONbits	set	4032
   256   000000                     _ADCON1bits	set	4033
   257   000000                     _ADCON0bits	set	4034
   258   000000                     _T2CON	set	4042
   259   000000                     _T1CON	set	4045
   260   000000                     _RCSTA2bits	set	3996
   261   000000                     _TRISG	set	3992
   262   000000                     _TRISF	set	3991
   263   000000                     _TRISE	set	3990
   264   000000                     _TRISD	set	3989
   265   000000                     _TRISC	set	3988
   266   000000                     _TRISB	set	3987
   267   000000                     _TMR1IE	set	31976
   268   000000                     _PR2	set	4043
   269   000000                     _BAUDCON2bits	set	3964
   270   000000                     _SSP2BUF	set	3951
   271   000000                     _SPBRGH2	set	3965
   272                           
   273                           ; #config settings
   274                           
   275                           	psect	cinit
   276   0020DE                     __pcinit:
   277                           	callstack 0
   278   0020DE                     start_initialization:
   279                           	callstack 0
   280   0020DE                     __initialization:
   281                           	callstack 0
   282                           
   283                           ; Initialize objects allocated to BANK0 (31 bytes)
   284                           ; load TBLPTR registers with __pidataBANK0
   285   0020DE  0E9E               	movlw	low __pidataBANK0
   286   0020E0  6EF6               	movwf	tblptrl,c
   287   0020E2  0E24               	movlw	high __pidataBANK0
   288   0020E4  6EF7               	movwf	tblptrh,c
   289   0020E6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   290   0020E8  6EF8               	movwf	tblptru,c
   291   0020EA  EE00  F0AE         	lfsr	0,__pdataBANK0
   292   0020EE  EE10 F01F          	lfsr	1,31
   293   0020F2                     copy_data0:
   294   0020F2  0009               	tblrd		*+
   295   0020F4  CFF5 FFEE          	movff	tablat,postinc0
   296   0020F8  50E5               	movf	postdec1,w,c
   297   0020FA  50E1               	movf	fsr1l,w,c
   298   0020FC  E1FA               	bnz	copy_data0
   299                           
   300                           ; Initialize objects allocated to COMRAM (16 bytes)
   301                           ; load TBLPTR registers with __pidataCOMRAM
   302   0020FE  0E9C               	movlw	low __pidataCOMRAM
   303   002100  6EF6               	movwf	tblptrl,c
   304   002102  0E25               	movlw	high __pidataCOMRAM
   305   002104  6EF7               	movwf	tblptrh,c
   306   002106  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   307   002108  6EF8               	movwf	tblptru,c
   308   00210A  EE00  F047         	lfsr	0,__pdataCOMRAM
   309   00210E  EE10 F010          	lfsr	1,16
   310   002112                     copy_data1:
   311   002112  0009               	tblrd		*+
   312   002114  CFF5 FFEE          	movff	tablat,postinc0
   313   002118  50E5               	movf	postdec1,w,c
   314   00211A  50E1               	movf	fsr1l,w,c
   315   00211C  E1FA               	bnz	copy_data1
   316                           
   317                           ; Clear objects allocated to BANK1 (16 bytes)
   318   00211E  EE01  F021         	lfsr	0,__pbssBANK1
   319   002122  0E10               	movlw	16
   320   002124                     clear_0:
   321   002124  6AEE               	clrf	postinc0,c
   322   002126  06E8               	decf	wreg,f,c
   323   002128  E1FD               	bnz	clear_0
   324                           
   325                           ; Clear objects allocated to BANK0 (44 bytes)
   326   00212A  EE00  F060         	lfsr	0,__pbssBANK0
   327   00212E  0E2C               	movlw	44
   328   002130                     clear_1:
   329   002130  6AEE               	clrf	postinc0,c
   330   002132  06E8               	decf	wreg,f,c
   331   002134  E1FD               	bnz	clear_1
   332                           
   333                           ; Clear objects allocated to COMRAM (27 bytes)
   334   002136  EE00  F02C         	lfsr	0,__pbssCOMRAM
   335   00213A  0E1B               	movlw	27
   336   00213C                     clear_2:
   337   00213C  6AEE               	clrf	postinc0,c
   338   00213E  06E8               	decf	wreg,f,c
   339   002140  E1FD               	bnz	clear_2
   340   002142                     end_of_initialization:
   341                           	callstack 0
   342   002142                     __end_of__initialization:
   343                           	callstack 0
   344   002142  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   345   002144  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   346   002146  0E00               	movlw	low (__Lmediumconst shr (0+16))
   347   002148  6EF8               	movwf	tblptru,c
   348   00214A  0100               	movlb	0
   349   00214C  EFC0  F001         	goto	_main	;jump to C main() function
   350                           
   351                           	psect	bssCOMRAM
   352   00002C                     __pbssCOMRAM:
   353                           	callstack 0
   354   00002C                     _Temp:
   355                           	callstack 0
   356   00002C                     	ds	2
   357   00002E                     _Edigit:
   358                           	callstack 0
   359   00002E                     	ds	2
   360   000030                     _thousands:
   361                           	callstack 0
   362   000030                     	ds	2
   363   000032                     _hundreds:
   364                           	callstack 0
   365   000032                     	ds	2
   366   000034                     _tens:
   367                           	callstack 0
   368   000034                     	ds	2
   369   000036                     _units:
   370                           	callstack 0
   371   000036                     	ds	2
   372   000038                     _ETemp:
   373                           	callstack 0
   374   000038                     	ds	2
   375   00003A                     _Serial_Count:
   376                           	callstack 0
   377   00003A                     	ds	2
   378   00003C                     _edigit:
   379                           	callstack 0
   380   00003C                     	ds	2
   381   00003E                     _LifterFault:
   382                           	callstack 0
   383   00003E                     	ds	1
   384   00003F                     _FeederRotate2:
   385                           	callstack 0
   386   00003F                     	ds	1
   387   000040                     _FeederRotate1:
   388                           	callstack 0
   389   000040                     	ds	1
   390   000041                     _warning:
   391                           	callstack 0
   392   000041                     	ds	1
   393   000042                     _TMR1IF_triggered:
   394                           	callstack 0
   395   000042                     	ds	1
   396   000043                     _TMR0IF_triggered:
   397                           	callstack 0
   398   000043                     	ds	1
   399   000044                     _update_7seg:
   400                           	callstack 0
   401   000044                     	ds	1
   402   000045                     _Stop:
   403                           	callstack 0
   404   000045                     	ds	1
   405   000046                     _Serial_GData:
   406                           	callstack 0
   407   000046                     	ds	1
   408                           
   409                           	psect	dataCOMRAM
   410   000047                     __pdataCOMRAM:
   411                           	callstack 0
   412   000047                     _error2counter:
   413                           	callstack 0
   414   000047                     	ds	4
   415   00004B                     _Old_Number:
   416                           	callstack 0
   417   00004B                     	ds	4
   418   00004F                     _FeederRotate2Time:
   419                           	callstack 0
   420   00004F                     	ds	2
   421   000051                     _FeederRotate1Time:
   422                           	callstack 0
   423   000051                     	ds	2
   424   000053                     _digit:
   425                           	callstack 0
   426   000053                     	ds	2
   427   000055                     _error_number:
   428                           	callstack 0
   429   000055                     	ds	1
   430   000056                     _OpMode:
   431                           	callstack 0
   432   000056                     	ds	1
   433                           
   434                           	psect	bssBANK0
   435   000060                     __pbssBANK0:
   436                           	callstack 0
   437   000060                     _Serial_Buffer_Out:
   438                           	callstack 0
   439   000060                     	ds	16
   440   000070                     _Serial_Buffer:
   441                           	callstack 0
   442   000070                     	ds	16
   443   000080                     _TotalNum:
   444                           	callstack 0
   445   000080                     	ds	4
   446   000084                     _TempNum:
   447                           	callstack 0
   448   000084                     	ds	2
   449   000086                     _Lifter_Use:
   450                           	callstack 0
   451   000086                     	ds	1
   452   000087                     _lifter:
   453                           	callstack 0
   454   000087                     	ds	1
   455   000088                     _error:
   456                           	callstack 0
   457   000088                     	ds	1
   458   000089                     _TMR2IF_triggered:
   459                           	callstack 0
   460   000089                     	ds	1
   461   00008A                     _Busy:
   462                           	callstack 0
   463   00008A                     	ds	1
   464   00008B                     _Serial_Flag:
   465                           	callstack 0
   466   00008B                     	ds	1
   467                           
   468                           	psect	dataBANK0
   469   0000AE                     __pdataBANK0:
   470                           	callstack 0
   471   0000AE                     _error6counter:
   472                           	callstack 0
   473   0000AE                     	ds	4
   474   0000B2                     _error5counter:
   475                           	callstack 0
   476   0000B2                     	ds	4
   477   0000B6                     _error4counter:
   478                           	callstack 0
   479   0000B6                     	ds	4
   480   0000BA                     _error3counter:
   481                           	callstack 0
   482   0000BA                     	ds	4
   483   0000BE                     _error1counter:
   484                           	callstack 0
   485   0000BE                     	ds	4
   486   0000C2                     _LiftUpTime:
   487                           	callstack 0
   488   0000C2                     	ds	2
   489   0000C4                     _sw1counter:
   490                           	callstack 0
   491   0000C4                     	ds	2
   492   0000C6                     _LiftUpHoldCounter:
   493                           	callstack 0
   494   0000C6                     	ds	2
   495   0000C8                     _startup:
   496                           	callstack 0
   497   0000C8                     	ds	2
   498   0000CA                     _error_digit:
   499                           	callstack 0
   500   0000CA                     	ds	2
   501   0000CC                     _warning_number:
   502                           	callstack 0
   503   0000CC                     	ds	1
   504                           
   505                           	psect	bssBANK1
   506   000121                     __pbssBANK1:
   507                           	callstack 0
   508   000121                     _Serial_Temp_Buffer:
   509                           	callstack 0
   510   000121                     	ds	16
   511                           
   512                           	psect	cstackBANK1
   513   000100                     __pcstackBANK1:
   514                           	callstack 0
   515   000100                     main@cap_success:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x0
   519   000100                     	ds	2
   520   000102                     main@counter:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x2
   524   000102                     	ds	2
   525   000104                     main@counter_1244:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x4
   529   000104                     	ds	2
   530   000106                     main@counter_1261:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x6
   534   000106                     	ds	2
   535   000108                     main@counter_1262:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x8
   539   000108                     	ds	2
   540   00010A                     main@counter_1263:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0xA
   544   00010A                     	ds	2
   545   00010C                     main@FirstRun:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0xC
   549   00010C                     	ds	1
   550   00010D                     main@swcounterflag:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0xD
   554   00010D                     	ds	2
   555   00010F                     main@lifter_stop_delay_time:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0xF
   559   00010F                     	ds	2
   560   000111                     main@capin:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x11
   564   000111                     	ds	2
   565   000113                     main@sol_activation_on_time:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x13
   569   000113                     	ds	2
   570   000115                     main@sol_activation_off_time:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x15
   574   000115                     	ds	2
   575   000117                     main@start_capping:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x17
   579   000117                     	ds	1
   580   000118                     main@num1:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x18
   584   000118                     	ds	1
   585   000119                     main@num2:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x19
   589   000119                     	ds	1
   590   00011A                     main@num3:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x1A
   594   00011A                     	ds	1
   595   00011B                     main@num4:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x1B
   599   00011B                     	ds	1
   600   00011C                     main@i:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x1C
   604   00011C                     	ds	1
   605   00011D                     main@sol_on_time:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x1D
   609   00011D                     	ds	1
   610   00011E                     main@sol_off_time:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0x1E
   614   00011E                     	ds	1
   615   00011F                     main@lifter_up_position:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x1F
   619   00011F                     	ds	1
   620   000120                     main@lift_up_hold_time:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x20
   624   000120                     	ds	1
   625                           
   626                           	psect	cstackBANK0
   627   00008C                     __pcstackBANK0:
   628                           	callstack 0
   629   00008C                     ??_i2c_Wait:
   630   00008C                     ?___lmul:
   631                           	callstack 0
   632   00008C                     ?___almod:
   633                           	callstack 0
   634   00008C                     Write1USART@data:
   635                           	callstack 0
   636   00008C                     DelayTime_1ms@time:
   637                           	callstack 0
   638   00008C                     DelayTime_10ms@time:
   639                           	callstack 0
   640   00008C                     flushOut@i:
   641                           	callstack 0
   642   00008C                     displayno@digit:
   643                           	callstack 0
   644   00008C                     ___lmul@multiplier:
   645                           	callstack 0
   646   00008C                     ___almod@dividend:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0x0
   650   00008C                     	ds	1
   651   00008D                     ?_i2c_Read:
   652                           	callstack 0
   653   00008D                     i2c_Write@data:
   654                           	callstack 0
   655   00008D                     i2c_Address@mode:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x1
   659   00008D                     	ds	1
   660   00008E                     ??_DelayTime_1ms:
   661   00008E                     ??_DelayTime_10ms:
   662   00008E                     i2c_Address@address:
   663                           	callstack 0
   664   00008E                     displayno@number:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x2
   668   00008E                     	ds	1
   669   00008F                     i2c_Address@l_address:
   670                           	callstack 0
   671   00008F                     i2c_Read@ack:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x3
   675   00008F                     	ds	1
   676   000090                     ??_displayno:
   677   000090                     i2c_Read@i2cReadData:
   678                           	callstack 0
   679   000090                     ___lmul@multiplicand:
   680                           	callstack 0
   681   000090                     ___almod@divisor:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x4
   685   000090                     	ds	2
   686   000092                     ??_Display_Version:
   687                           
   688                           ; 1 bytes @ 0x6
   689   000092                     	ds	2
   690   000094                     ___almod@counter:
   691                           	callstack 0
   692   000094                     Display_Version@delay:
   693                           	callstack 0
   694   000094                     ___lmul@product:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x8
   698   000094                     	ds	1
   699   000095                     ___almod@sign:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x9
   703   000095                     	ds	1
   704   000096                     ?___aldiv:
   705                           	callstack 0
   706   000096                     Display_Version@loop:
   707                           	callstack 0
   708   000096                     ___aldiv@dividend:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0xA
   712   000096                     	ds	2
   713   000098                     Display_Version@repeat:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0xC
   717   000098                     	ds	2
   718   00009A                     Display_Version@cdigit:
   719                           	callstack 0
   720   00009A                     ___aldiv@divisor:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0xE
   724   00009A                     	ds	4
   725   00009E                     ___aldiv@counter:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x12
   729   00009E                     	ds	1
   730   00009F                     ___aldiv@sign:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x13
   734   00009F                     	ds	1
   735   0000A0                     ___aldiv@quotient:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x14
   739   0000A0                     	ds	4
   740   0000A4                     ?_read_i2c:
   741                           	callstack 0
   742   0000A4                     write_i2c@address:
   743                           	callstack 0
   744   0000A4                     read_i2c@address:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x18
   748   0000A4                     	ds	4
   749   0000A8                     write_i2c@data:
   750                           	callstack 0
   751   0000A8                     read_i2c@read_byte:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x1C
   755   0000A8                     	ds	2
   756   0000AA                     ??_main:
   757                           
   758                           ; 1 bytes @ 0x1E
   759   0000AA                     	ds	4
   760                           
   761                           	psect	cstackCOMRAM
   762   000001                     __pcstackCOMRAM:
   763                           	callstack 0
   764   000001                     ??i2_i2c_Wait:
   765   000001                     ?i2___almod:
   766                           	callstack 0
   767   000001                     Read1USART@result:
   768                           	callstack 0
   769   000001                     i2Write1USART@data:
   770                           	callstack 0
   771   000001                     i2displayno@digit:
   772                           	callstack 0
   773   000001                     i2___almod@dividend:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0x0
   777   000001                     	ds	1
   778   000002                     ?i2_i2c_Read:
   779                           	callstack 0
   780   000002                     i2i2c_Write@data:
   781                           	callstack 0
   782   000002                     i2i2c_Address@mode:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0x1
   786   000002                     	ds	1
   787   000003                     i2i2c_Address@address:
   788                           	callstack 0
   789   000003                     i2displayno@number:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x2
   793   000003                     	ds	1
   794   000004                     i2i2c_Address@l_address:
   795                           	callstack 0
   796   000004                     i2i2c_Read@ack:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x3
   800   000004                     	ds	1
   801   000005                     ??i2_displayno:
   802   000005                     i2i2c_Read@i2cReadData:
   803                           	callstack 0
   804   000005                     i2___almod@divisor:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0x4
   808   000005                     	ds	2
   809   000007                     Display_Error@enumber:
   810                           	callstack 0
   811   000007                     Display_Warning@enumber:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x6
   815   000007                     	ds	2
   816   000009                     ??_Display_Error:
   817   000009                     ??_Display_Warning:
   818   000009                     i2___almod@counter:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0x8
   822   000009                     	ds	1
   823   00000A                     i2___almod@sign:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x9
   827   00000A                     	ds	1
   828   00000B                     ?i2___aldiv:
   829                           	callstack 0
   830   00000B                     i2___aldiv@dividend:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0xA
   834   00000B                     	ds	4
   835   00000F                     i2___aldiv@divisor:
   836                           	callstack 0
   837                           
   838                           ; 4 bytes @ 0xE
   839   00000F                     	ds	4
   840   000013                     i2___aldiv@counter:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x12
   844   000013                     	ds	1
   845   000014                     i2___aldiv@sign:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0x13
   849   000014                     	ds	1
   850   000015                     i2___aldiv@quotient:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x14
   854   000015                     	ds	4
   855   000019                     ?i2_read_i2c:
   856                           	callstack 0
   857   000019                     i2write_i2c@address:
   858                           	callstack 0
   859   000019                     i2read_i2c@address:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x18
   863   000019                     	ds	4
   864   00001D                     i2write_i2c@data:
   865                           	callstack 0
   866   00001D                     i2read_i2c@read_byte:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x1C
   870   00001D                     	ds	2
   871   00001F                     ??_ISR_UpdateDisplay:
   872   00001F                     
   873                           ; 1 bytes @ 0x1E
   874   00001F                     	ds	8
   875   000027                     ??_high_isr:
   876                           
   877                           ; 1 bytes @ 0x26
   878   000027                     	ds	2
   879   000029                     high_isr@Temp:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x28
   883   000029                     	ds	1
   884   00002A                     high_isr@c:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0x29
   888   00002A                     	ds	1
   889   00002B                     high_isr@i:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x2A
   893   00002B                     	ds	1
   894                           
   895 ;;
   896 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   897 ;;
   898 ;; *************** function _main *****************
   899 ;; Defined at:
   900 ;;		line 117 in file "main.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  counter         2   10[BANK1 ] int 
   905 ;;  counter         2    4[BANK1 ] int 
   906 ;;  counter         2    8[BANK1 ] int 
   907 ;;  counter         2    6[BANK1 ] int 
   908 ;;  counter         2    2[BANK1 ] int 
   909 ;;  LTemp           4    0        long 
   910 ;;  sol_activati    2   21[BANK1 ] unsigned int 
   911 ;;  sol_activati    2   19[BANK1 ] unsigned int 
   912 ;;  capin           2   17[BANK1 ] int 
   913 ;;  lifter_stop_    2   15[BANK1 ] unsigned int 
   914 ;;  swcounterfla    2   13[BANK1 ] int 
   915 ;;  cap_success     2    0[BANK1 ] int 
   916 ;;  lift_up_hold    1   32[BANK1 ] volatile unsigned char 
   917 ;;  lifter_up_po    1   31[BANK1 ] volatile unsigned char 
   918 ;;  sol_off_time    1   30[BANK1 ] volatile unsigned char 
   919 ;;  sol_on_time     1   29[BANK1 ] volatile unsigned char 
   920 ;;  i               1   28[BANK1 ] unsigned char 
   921 ;;  start_cappin    1   23[BANK1 ] unsigned char 
   922 ;;  FirstRun        1   12[BANK1 ] unsigned char 
   923 ;;  num4            1   27[BANK1 ] volatile unsigned char 
   924 ;;  num3            1   26[BANK1 ] volatile unsigned char 
   925 ;;  num2            1   25[BANK1 ] volatile unsigned char 
   926 ;;  num1            1   24[BANK1 ] volatile unsigned char 
   927 ;;  j               1    0        unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Totals:         0       4      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;Total ram usage:       37 bytes
   942 ;; Hardware stack levels required when called: 8
   943 ;; This function calls:
   944 ;;		_DelayTime_10ms
   945 ;;		_DelayTime_1ms
   946 ;;		_Display_Version
   947 ;;		_Feeder_Rotate1
   948 ;;		_Feeder_Rotate2
   949 ;;		_Feeder_Stop
   950 ;;		_InitTimer0
   951 ;;		_InitTimer1
   952 ;;		_InitTimer2
   953 ;;		_Lifter_Brake
   954 ;;		_Lifter_Down
   955 ;;		_Lifter_Init
   956 ;;		_Lifter_Stop
   957 ;;		_Lifter_Up
   958 ;;		_Write1USART
   959 ;;		___aldiv
   960 ;;		___almod
   961 ;;		___lmul
   962 ;;		_displayinit
   963 ;;		_flushOut
   964 ;;		_i2c_Init
   965 ;;		_init
   966 ;;		_initUSART
   967 ;;		_read_i2c
   968 ;;		_write_i2c
   969 ;; This function is called by:
   970 ;;		Startup code after reset
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text0
   975   000380                     __ptext0:
   976                           	callstack 0
   977   000380                     _main:
   978                           	callstack 23
   979                           
   980                           ;main.c: 120: unsigned int sol_activation_off_time = 50;
   981                           
   982                           ;incstack = 0
   983   000380  0E00               	movlw	0
   984   000382  0101               	movlb	1	; () banked
   985   000384  6F16               	movwf	(main@sol_activation_off_time+1)& (0+255),b
   986   000386  0E32               	movlw	50
   987   000388  6F15               	movwf	main@sol_activation_off_time& (0+255),b
   988                           
   989                           ;main.c: 121: unsigned int lifter_stop_delay_time = 0;
   990   00038A  0E00               	movlw	0
   991   00038C  6F10               	movwf	(main@lifter_stop_delay_time+1)& (0+255),b
   992   00038E  0E00               	movlw	0
   993   000390  6F0F               	movwf	main@lifter_stop_delay_time& (0+255),b
   994                           
   995                           ;main.c: 122: volatile unsigned char sol_on_time;;main.c: 123: volatile unsigned char so
      +                          l_off_time;;main.c: 124: volatile unsigned char lift_up_hold_time;;main.c: 125: volatile
      +                           unsigned char lifter_up_position;;main.c: 126: volatile unsigned char num1;;main.c: 127
      +                          : volatile unsigned char num2;;main.c: 128: volatile unsigned char num3;;main.c: 129: vo
      +                          latile unsigned char num4;;main.c: 131: char start_capping = 0;
   996   000392  0E00               	movlw	0
   997   000394  6F17               	movwf	main@start_capping& (0+255),b
   998                           
   999                           ;main.c: 132: char FirstRun = 1;
  1000   000396  0E01               	movlw	1
  1001   000398  6F0C               	movwf	main@FirstRun& (0+255),b
  1002                           
  1003                           ;main.c: 133: long LTemp;;main.c: 134: char i, j;;main.c: 135: int cap_success = 0;
  1004   00039A  0E00               	movlw	0
  1005   00039C  6F01               	movwf	(main@cap_success+1)& (0+255),b
  1006   00039E  0E00               	movlw	0
  1007   0003A0  6F00               	movwf	main@cap_success& (0+255),b
  1008                           
  1009                           ;main.c: 136: int swcounterflag=0;
  1010   0003A2  0E00               	movlw	0
  1011   0003A4  6F0E               	movwf	(main@swcounterflag+1)& (0+255),b
  1012   0003A6  0E00               	movlw	0
  1013   0003A8  6F0D               	movwf	main@swcounterflag& (0+255),b
  1014                           
  1015                           ;main.c: 137: int capin = 1;
  1016   0003AA  0E00               	movlw	0
  1017   0003AC  6F12               	movwf	(main@capin+1)& (0+255),b
  1018   0003AE  0E01               	movlw	1
  1019   0003B0  6F11               	movwf	main@capin& (0+255),b
  1020                           
  1021                           ; BSR set to: 1
  1022                           ;main.c: 140: GIE = 0;
  1023   0003B2  9EF2               	bcf	4082,7,c	;volatile
  1024                           
  1025                           ; BSR set to: 1
  1026                           ;main.c: 141: init();
  1027   0003B4  EC15  F011         	call	_init	;wreg free
  1028                           
  1029                           ;main.c: 142: i2c_Init();
  1030   0003B8  EC91  F012         	call	_i2c_Init	;wreg free
  1031                           
  1032                           ;main.c: 143: displayinit();
  1033   0003BC  EC5F  F012         	call	_displayinit	;wreg free
  1034                           
  1035                           ;main.c: 144: initUSART();
  1036   0003C0  EC3E  F012         	call	_initUSART	;wreg free
  1037                           
  1038                           ;main.c: 147: RCONbits.IPEN = 1;
  1039   0003C4  8ED0               	bsf	208,7,c	;volatile
  1040                           
  1041                           ;main.c: 150: IPR3bits.RC2IP = 1;
  1042   0003C6  8AA5               	bsf	165,5,c	;volatile
  1043                           
  1044                           ;main.c: 153: INTCONbits.GIEH = 1;
  1045   0003C8  8EF2               	bsf	242,7,c	;volatile
  1046                           
  1047                           ;main.c: 154: INTCONbits.GIE=1;
  1048   0003CA  8EF2               	bsf	242,7,c	;volatile
  1049                           
  1050                           ;main.c: 162: EAdd_High = 0x0050;
  1051   0003CC  0E00               	movlw	0
  1052   0003CE  0100               	movlb	0	; () banked
  1053   0003D0  6FE4               	movwf	(_EAdd_High+1)& (0+255),b	;volatile
  1054   0003D2  0E50               	movlw	80
  1055   0003D4  6FE3               	movwf	_EAdd_High& (0+255),b	;volatile
  1056                           
  1057                           ; BSR set to: 0
  1058                           ;main.c: 163: EAdd_Low = 0x0060;
  1059   0003D6  0E00               	movlw	0
  1060   0003D8  6FE2               	movwf	(_EAdd_Low+1)& (0+255),b	;volatile
  1061   0003DA  0E60               	movlw	96
  1062   0003DC  6FE1               	movwf	_EAdd_Low& (0+255),b	;volatile
  1063                           
  1064                           ; BSR set to: 0
  1065                           ;main.c: 165: TotalNum_HighH = 0x0080;
  1066   0003DE  0E00               	movlw	0
  1067   0003E0  6FE0               	movwf	(_TotalNum_HighH+1)& (0+255),b	;volatile
  1068   0003E2  0E80               	movlw	128
  1069   0003E4  6FDF               	movwf	_TotalNum_HighH& (0+255),b	;volatile
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;main.c: 166: TotalNum_HighL = 0x0070;
  1073   0003E6  0E00               	movlw	0
  1074   0003E8  6FDE               	movwf	(_TotalNum_HighL+1)& (0+255),b	;volatile
  1075   0003EA  0E70               	movlw	112
  1076   0003EC  6FDD               	movwf	_TotalNum_HighL& (0+255),b	;volatile
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;main.c: 168: TotalNum_LowH = 0x00A0;
  1080   0003EE  0E00               	movlw	0
  1081   0003F0  6FDC               	movwf	(_TotalNum_LowH+1)& (0+255),b	;volatile
  1082   0003F2  0EA0               	movlw	160
  1083   0003F4  6FDB               	movwf	_TotalNum_LowH& (0+255),b	;volatile
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 169: TotalNum_LowL = 0x0090;
  1087   0003F6  0E00               	movlw	0
  1088   0003F8  6FDA               	movwf	(_TotalNum_LowL+1)& (0+255),b	;volatile
  1089   0003FA  0E90               	movlw	144
  1090   0003FC  6FD9               	movwf	_TotalNum_LowL& (0+255),b	;volatile
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;main.c: 171: number = read_i2c(EAdd_High);
  1094   0003FE  C0E3  F0A4         	movff	_EAdd_High,read_i2c@address	;volatile
  1095   000402  C0E4  F0A5         	movff	_EAdd_High+1,read_i2c@address+1	;volatile
  1096   000406  0E00               	movlw	0
  1097   000408  BFA5               	btfsc	(read_i2c@address+1)& (0+255),7,b
  1098   00040A  0EFF               	movlw	-1
  1099   00040C  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  1100   00040E  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  1101   000410  ECA8  F010         	call	_read_i2c	;wreg free
  1102   000414  0100               	movlb	0	; () banked
  1103   000416  C0A4  F0D5         	movff	?_read_i2c,_number	;volatile
  1104   00041A  C0A5  F0D6         	movff	?_read_i2c+1,_number+1	;volatile
  1105   00041E  0E00               	movlw	0
  1106   000420  BFD6               	btfsc	(_number+1)& (0+255),7,b	;volatile
  1107   000422  0EFF               	movlw	-1
  1108   000424  6FD7               	movwf	(_number+2)& (0+255),b	;volatile
  1109   000426  6FD8               	movwf	(_number+3)& (0+255),b	;volatile
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;main.c: 172: number *= 0x100;
  1113   000428  C0D7  F0D8         	movff	_number+2,_number+3	;volatile
  1114   00042C  C0D6  F0D7         	movff	_number+1,_number+2	;volatile
  1115   000430  C0D5  F0D6         	movff	_number,_number+1	;volatile
  1116   000434  6BD5               	clrf	_number& (0+255),b	;volatile
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;main.c: 173: number += read_i2c(EAdd_Low);
  1120   000436  C0E1  F0A4         	movff	_EAdd_Low,read_i2c@address	;volatile
  1121   00043A  C0E2  F0A5         	movff	_EAdd_Low+1,read_i2c@address+1	;volatile
  1122   00043E  0E00               	movlw	0
  1123   000440  BFA5               	btfsc	(read_i2c@address+1)& (0+255),7,b
  1124   000442  0EFF               	movlw	-1
  1125   000444  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  1126   000446  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  1127   000448  ECA8  F010         	call	_read_i2c	;wreg free
  1128   00044C  0100               	movlb	0	; () banked
  1129   00044E  C0A4  F0AA         	movff	?_read_i2c,??_main
  1130   000452  C0A5  F0AB         	movff	?_read_i2c+1,??_main+1
  1131   000456  0E00               	movlw	0
  1132   000458  BFAB               	btfsc	(??_main+1)& (0+255),7,b
  1133   00045A  0EFF               	movlw	255
  1134   00045C  6FAC               	movwf	(??_main+2)& (0+255),b
  1135   00045E  6FAD               	movwf	(??_main+3)& (0+255),b
  1136   000460  51AA               	movf	??_main& (0+255),w,b
  1137   000462  27D5               	addwf	_number& (0+255),f,b	;volatile
  1138   000464  51AB               	movf	(??_main+1)& (0+255),w,b
  1139   000466  23D6               	addwfc	(_number+1)& (0+255),f,b	;volatile
  1140   000468  51AC               	movf	(??_main+2)& (0+255),w,b
  1141   00046A  23D7               	addwfc	(_number+2)& (0+255),f,b	;volatile
  1142   00046C  51AD               	movf	(??_main+3)& (0+255),w,b
  1143   00046E  23D8               	addwfc	(_number+3)& (0+255),f,b	;volatile
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;main.c: 175: TotalNumL = read_i2c(TotalNum_LowH);
  1147   000470  C0DB  F0A4         	movff	_TotalNum_LowH,read_i2c@address	;volatile
  1148   000474  C0DC  F0A5         	movff	_TotalNum_LowH+1,read_i2c@address+1	;volatile
  1149   000478  0E00               	movlw	0
  1150   00047A  BFA5               	btfsc	(read_i2c@address+1)& (0+255),7,b
  1151   00047C  0EFF               	movlw	-1
  1152   00047E  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  1153   000480  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  1154   000482  ECA8  F010         	call	_read_i2c	;wreg free
  1155   000486  0100               	movlb	0	; () banked
  1156   000488  C0A4  F0D1         	movff	?_read_i2c,_TotalNumL	;volatile
  1157   00048C  C0A5  F0D2         	movff	?_read_i2c+1,_TotalNumL+1	;volatile
  1158   000490  0E00               	movlw	0
  1159   000492  BFD2               	btfsc	(_TotalNumL+1)& (0+255),7,b	;volatile
  1160   000494  0EFF               	movlw	-1
  1161   000496  6FD3               	movwf	(_TotalNumL+2)& (0+255),b	;volatile
  1162   000498  6FD4               	movwf	(_TotalNumL+3)& (0+255),b	;volatile
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;main.c: 176: TotalNumL *= 0x100;
  1166   00049A  C0D3  F0D4         	movff	_TotalNumL+2,_TotalNumL+3	;volatile
  1167   00049E  C0D2  F0D3         	movff	_TotalNumL+1,_TotalNumL+2	;volatile
  1168   0004A2  C0D1  F0D2         	movff	_TotalNumL,_TotalNumL+1	;volatile
  1169   0004A6  6BD1               	clrf	_TotalNumL& (0+255),b	;volatile
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;main.c: 177: TotalNumL += read_i2c(TotalNum_LowL);
  1173   0004A8  C0D9  F0A4         	movff	_TotalNum_LowL,read_i2c@address	;volatile
  1174   0004AC  C0DA  F0A5         	movff	_TotalNum_LowL+1,read_i2c@address+1	;volatile
  1175   0004B0  0E00               	movlw	0
  1176   0004B2  BFA5               	btfsc	(read_i2c@address+1)& (0+255),7,b
  1177   0004B4  0EFF               	movlw	-1
  1178   0004B6  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  1179   0004B8  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  1180   0004BA  ECA8  F010         	call	_read_i2c	;wreg free
  1181   0004BE  0100               	movlb	0	; () banked
  1182   0004C0  C0A4  F0AA         	movff	?_read_i2c,??_main
  1183   0004C4  C0A5  F0AB         	movff	?_read_i2c+1,??_main+1
  1184   0004C8  0E00               	movlw	0
  1185   0004CA  BFAB               	btfsc	(??_main+1)& (0+255),7,b
  1186   0004CC  0EFF               	movlw	255
  1187   0004CE  6FAC               	movwf	(??_main+2)& (0+255),b
  1188   0004D0  6FAD               	movwf	(??_main+3)& (0+255),b
  1189   0004D2  51AA               	movf	??_main& (0+255),w,b
  1190   0004D4  27D1               	addwf	_TotalNumL& (0+255),f,b	;volatile
  1191   0004D6  51AB               	movf	(??_main+1)& (0+255),w,b
  1192   0004D8  23D2               	addwfc	(_TotalNumL+1)& (0+255),f,b	;volatile
  1193   0004DA  51AC               	movf	(??_main+2)& (0+255),w,b
  1194   0004DC  23D3               	addwfc	(_TotalNumL+2)& (0+255),f,b	;volatile
  1195   0004DE  51AD               	movf	(??_main+3)& (0+255),w,b
  1196   0004E0  23D4               	addwfc	(_TotalNumL+3)& (0+255),f,b	;volatile
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;main.c: 179: TotalNumH = read_i2c(TotalNum_HighH);
  1200   0004E2  C0DF  F0A4         	movff	_TotalNum_HighH,read_i2c@address	;volatile
  1201   0004E6  C0E0  F0A5         	movff	_TotalNum_HighH+1,read_i2c@address+1	;volatile
  1202   0004EA  0E00               	movlw	0
  1203   0004EC  BFA5               	btfsc	(read_i2c@address+1)& (0+255),7,b
  1204   0004EE  0EFF               	movlw	-1
  1205   0004F0  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  1206   0004F2  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  1207   0004F4  ECA8  F010         	call	_read_i2c	;wreg free
  1208   0004F8  0100               	movlb	0	; () banked
  1209   0004FA  C0A4  F0CD         	movff	?_read_i2c,_TotalNumH	;volatile
  1210   0004FE  C0A5  F0CE         	movff	?_read_i2c+1,_TotalNumH+1	;volatile
  1211   000502  0E00               	movlw	0
  1212   000504  BFCE               	btfsc	(_TotalNumH+1)& (0+255),7,b	;volatile
  1213   000506  0EFF               	movlw	-1
  1214   000508  6FCF               	movwf	(_TotalNumH+2)& (0+255),b	;volatile
  1215   00050A  6FD0               	movwf	(_TotalNumH+3)& (0+255),b	;volatile
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;main.c: 180: TotalNumH *= 0x100;
  1219   00050C  C0CF  F0D0         	movff	_TotalNumH+2,_TotalNumH+3	;volatile
  1220   000510  C0CE  F0CF         	movff	_TotalNumH+1,_TotalNumH+2	;volatile
  1221   000514  C0CD  F0CE         	movff	_TotalNumH,_TotalNumH+1	;volatile
  1222   000518  6BCD               	clrf	_TotalNumH& (0+255),b	;volatile
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;main.c: 181: TotalNumH += read_i2c(TotalNum_HighL);
  1226   00051A  C0DD  F0A4         	movff	_TotalNum_HighL,read_i2c@address	;volatile
  1227   00051E  C0DE  F0A5         	movff	_TotalNum_HighL+1,read_i2c@address+1	;volatile
  1228   000522  0E00               	movlw	0
  1229   000524  BFA5               	btfsc	(read_i2c@address+1)& (0+255),7,b
  1230   000526  0EFF               	movlw	-1
  1231   000528  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  1232   00052A  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  1233   00052C  ECA8  F010         	call	_read_i2c	;wreg free
  1234   000530  0100               	movlb	0	; () banked
  1235   000532  C0A4  F0AA         	movff	?_read_i2c,??_main
  1236   000536  C0A5  F0AB         	movff	?_read_i2c+1,??_main+1
  1237   00053A  0E00               	movlw	0
  1238   00053C  BFAB               	btfsc	(??_main+1)& (0+255),7,b
  1239   00053E  0EFF               	movlw	255
  1240   000540  6FAC               	movwf	(??_main+2)& (0+255),b
  1241   000542  6FAD               	movwf	(??_main+3)& (0+255),b
  1242   000544  51AA               	movf	??_main& (0+255),w,b
  1243   000546  27CD               	addwf	_TotalNumH& (0+255),f,b	;volatile
  1244   000548  51AB               	movf	(??_main+1)& (0+255),w,b
  1245   00054A  23CE               	addwfc	(_TotalNumH+1)& (0+255),f,b	;volatile
  1246   00054C  51AC               	movf	(??_main+2)& (0+255),w,b
  1247   00054E  23CF               	addwfc	(_TotalNumH+2)& (0+255),f,b	;volatile
  1248   000550  51AD               	movf	(??_main+3)& (0+255),w,b
  1249   000552  23D0               	addwfc	(_TotalNumH+3)& (0+255),f,b	;volatile
  1250                           
  1251                           ; BSR set to: 0
  1252                           ;main.c: 183: if (number > 9999)
  1253   000554  BFD8               	btfsc	(_number+3)& (0+255),7,b	;volatile
  1254   000556  D01D               	goto	l5714
  1255   000558  51D8               	movf	(_number+3)& (0+255),w,b	;volatile
  1256   00055A  11D7               	iorwf	(_number+2)& (0+255),w,b	;volatile
  1257   00055C  E106               	bnz	u4620
  1258   00055E  0E10               	movlw	16
  1259   000560  5DD5               	subwf	_number& (0+255),w,b	;volatile
  1260   000562  0E27               	movlw	39
  1261   000564  59D6               	subwfb	(_number+1)& (0+255),w,b	;volatile
  1262   000566  A0D8               	btfss	status,0,c
  1263   000568  D014               	goto	l5714
  1264   00056A                     u4620:
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;main.c: 184: {;main.c: 185: number = 0;
  1268   00056A  0E00               	movlw	0
  1269   00056C  6FD5               	movwf	_number& (0+255),b	;volatile
  1270   00056E  0E00               	movlw	0
  1271   000570  6FD6               	movwf	(_number+1)& (0+255),b	;volatile
  1272   000572  0E00               	movlw	0
  1273   000574  6FD7               	movwf	(_number+2)& (0+255),b	;volatile
  1274   000576  0E00               	movlw	0
  1275   000578  6FD8               	movwf	(_number+3)& (0+255),b	;volatile
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;main.c: 186: Old_Number = number+1;
  1279   00057A  0E01               	movlw	1
  1280   00057C  25D5               	addwf	_number& (0+255),w,b	;volatile
  1281   00057E  6E4B               	movwf	_Old_Number^0,c	;volatile
  1282   000580  0E00               	movlw	0
  1283   000582  21D6               	addwfc	(_number+1)& (0+255),w,b	;volatile
  1284   000584  6E4C               	movwf	(_Old_Number+1)^0,c	;volatile
  1285   000586  0E00               	movlw	0
  1286   000588  21D7               	addwfc	(_number+2)& (0+255),w,b	;volatile
  1287   00058A  6E4D               	movwf	(_Old_Number+2)^0,c	;volatile
  1288   00058C  0E00               	movlw	0
  1289   00058E  21D8               	addwfc	(_number+3)& (0+255),w,b	;volatile
  1290   000590  6E4E               	movwf	(_Old_Number+3)^0,c	;volatile
  1291   000592                     l5714:
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;main.c: 187: };main.c: 189: if (TotalNumL > 9999)
  1295   000592  BFD4               	btfsc	(_TotalNumL+3)& (0+255),7,b	;volatile
  1296   000594  D011               	goto	l5718
  1297   000596  51D4               	movf	(_TotalNumL+3)& (0+255),w,b	;volatile
  1298   000598  11D3               	iorwf	(_TotalNumL+2)& (0+255),w,b	;volatile
  1299   00059A  E106               	bnz	u4630
  1300   00059C  0E10               	movlw	16
  1301   00059E  5DD1               	subwf	_TotalNumL& (0+255),w,b	;volatile
  1302   0005A0  0E27               	movlw	39
  1303   0005A2  59D2               	subwfb	(_TotalNumL+1)& (0+255),w,b	;volatile
  1304   0005A4  A0D8               	btfss	status,0,c
  1305   0005A6  D008               	goto	l5718
  1306   0005A8                     u4630:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;main.c: 190: {;main.c: 191: TotalNumL = 0;
  1310   0005A8  0E00               	movlw	0
  1311   0005AA  6FD1               	movwf	_TotalNumL& (0+255),b	;volatile
  1312   0005AC  0E00               	movlw	0
  1313   0005AE  6FD2               	movwf	(_TotalNumL+1)& (0+255),b	;volatile
  1314   0005B0  0E00               	movlw	0
  1315   0005B2  6FD3               	movwf	(_TotalNumL+2)& (0+255),b	;volatile
  1316   0005B4  0E00               	movlw	0
  1317   0005B6  6FD4               	movwf	(_TotalNumL+3)& (0+255),b	;volatile
  1318   0005B8                     l5718:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;main.c: 192: };main.c: 194: if (TotalNumH > 9999)
  1322   0005B8  BFD0               	btfsc	(_TotalNumH+3)& (0+255),7,b	;volatile
  1323   0005BA  D011               	goto	l5722
  1324   0005BC  51D0               	movf	(_TotalNumH+3)& (0+255),w,b	;volatile
  1325   0005BE  11CF               	iorwf	(_TotalNumH+2)& (0+255),w,b	;volatile
  1326   0005C0  E106               	bnz	u4640
  1327   0005C2  0E10               	movlw	16
  1328   0005C4  5DCD               	subwf	_TotalNumH& (0+255),w,b	;volatile
  1329   0005C6  0E27               	movlw	39
  1330   0005C8  59CE               	subwfb	(_TotalNumH+1)& (0+255),w,b	;volatile
  1331   0005CA  A0D8               	btfss	status,0,c
  1332   0005CC  D008               	goto	l5722
  1333   0005CE                     u4640:
  1334                           
  1335                           ; BSR set to: 0
  1336                           ;main.c: 195: {;main.c: 196: TotalNumH = 0;
  1337   0005CE  0E00               	movlw	0
  1338   0005D0  6FCD               	movwf	_TotalNumH& (0+255),b	;volatile
  1339   0005D2  0E00               	movlw	0
  1340   0005D4  6FCE               	movwf	(_TotalNumH+1)& (0+255),b	;volatile
  1341   0005D6  0E00               	movlw	0
  1342   0005D8  6FCF               	movwf	(_TotalNumH+2)& (0+255),b	;volatile
  1343   0005DA  0E00               	movlw	0
  1344   0005DC  6FD0               	movwf	(_TotalNumH+3)& (0+255),b	;volatile
  1345   0005DE                     l5722:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;main.c: 197: };main.c: 199: TotalNum = (TotalNumH * 10000) + TotalNumL;
  1349   0005DE  C0CD  F08C         	movff	_TotalNumH,___lmul@multiplier	;volatile
  1350   0005E2  C0CE  F08D         	movff	_TotalNumH+1,___lmul@multiplier+1	;volatile
  1351   0005E6  C0CF  F08E         	movff	_TotalNumH+2,___lmul@multiplier+2	;volatile
  1352   0005EA  C0D0  F08F         	movff	_TotalNumH+3,___lmul@multiplier+3	;volatile
  1353   0005EE  0E10               	movlw	16
  1354   0005F0  6F90               	movwf	___lmul@multiplicand& (0+255),b
  1355   0005F2  0E27               	movlw	39
  1356   0005F4  6F91               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1357   0005F6  0E00               	movlw	0
  1358   0005F8  6F92               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1359   0005FA  0E00               	movlw	0
  1360   0005FC  6F93               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1361   0005FE  EC44  F011         	call	___lmul	;wreg free
  1362   000602  0100               	movlb	0	; () banked
  1363   000604  51D1               	movf	_TotalNumL& (0+255),w,b	;volatile
  1364   000606  258C               	addwf	?___lmul& (0+255),w,b
  1365   000608  6F80               	movwf	_TotalNum& (0+255),b	;volatile
  1366   00060A  51D2               	movf	(_TotalNumL+1)& (0+255),w,b	;volatile
  1367   00060C  218D               	addwfc	(?___lmul+1)& (0+255),w,b
  1368   00060E  6F81               	movwf	(_TotalNum+1)& (0+255),b	;volatile
  1369   000610  51D3               	movf	(_TotalNumL+2)& (0+255),w,b	;volatile
  1370   000612  218E               	addwfc	(?___lmul+2)& (0+255),w,b
  1371   000614  6F82               	movwf	(_TotalNum+2)& (0+255),b	;volatile
  1372   000616  51D4               	movf	(_TotalNumL+3)& (0+255),w,b	;volatile
  1373   000618  218F               	addwfc	(?___lmul+3)& (0+255),w,b
  1374   00061A  6F83               	movwf	(_TotalNum+3)& (0+255),b	;volatile
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;main.c: 201: DelayTime_1ms(100);
  1378   00061C  0E00               	movlw	0
  1379   00061E  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  1380   000620  0E64               	movlw	100
  1381   000622  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  1382   000624  EC04  F012         	call	_DelayTime_1ms	;wreg free
  1383                           
  1384                           ;main.c: 205: units = 0x30+(number%10);
  1385   000628  C0D5  F08C         	movff	_number,___almod@dividend	;volatile
  1386   00062C  C0D6  F08D         	movff	_number+1,___almod@dividend+1	;volatile
  1387   000630  C0D7  F08E         	movff	_number+2,___almod@dividend+2	;volatile
  1388   000634  C0D8  F08F         	movff	_number+3,___almod@dividend+3	;volatile
  1389   000638  0E0A               	movlw	10
  1390   00063A  0100               	movlb	0	; () banked
  1391   00063C  6F90               	movwf	___almod@divisor& (0+255),b
  1392   00063E  0E00               	movlw	0
  1393   000640  6F91               	movwf	(___almod@divisor+1)& (0+255),b
  1394   000642  0E00               	movlw	0
  1395   000644  6F92               	movwf	(___almod@divisor+2)& (0+255),b
  1396   000646  0E00               	movlw	0
  1397   000648  6F93               	movwf	(___almod@divisor+3)& (0+255),b
  1398   00064A  EC44  F00F         	call	___almod	;wreg free
  1399   00064E  0E30               	movlw	48
  1400   000650  0100               	movlb	0	; () banked
  1401   000652  258C               	addwf	?___almod& (0+255),w,b
  1402   000654  6E36               	movwf	_units^0,c	;volatile
  1403   000656  0E00               	movlw	0
  1404   000658  218D               	addwfc	(?___almod+1)& (0+255),w,b
  1405   00065A  6E37               	movwf	(_units+1)^0,c	;volatile
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;main.c: 206: tens = 0x30+((number%100)/10);
  1409   00065C  0E64               	movlw	100
  1410   00065E  6F90               	movwf	___almod@divisor& (0+255),b
  1411   000660  0E00               	movlw	0
  1412   000662  6F91               	movwf	(___almod@divisor+1)& (0+255),b
  1413   000664  0E00               	movlw	0
  1414   000666  6F92               	movwf	(___almod@divisor+2)& (0+255),b
  1415   000668  0E00               	movlw	0
  1416   00066A  6F93               	movwf	(___almod@divisor+3)& (0+255),b
  1417   00066C  C0D5  F08C         	movff	_number,___almod@dividend	;volatile
  1418   000670  C0D6  F08D         	movff	_number+1,___almod@dividend+1	;volatile
  1419   000674  C0D7  F08E         	movff	_number+2,___almod@dividend+2	;volatile
  1420   000678  C0D8  F08F         	movff	_number+3,___almod@dividend+3	;volatile
  1421   00067C  EC44  F00F         	call	___almod	;wreg free
  1422   000680  C08C  F096         	movff	?___almod,___aldiv@dividend
  1423   000684  C08D  F097         	movff	?___almod+1,___aldiv@dividend+1
  1424   000688  C08E  F098         	movff	?___almod+2,___aldiv@dividend+2
  1425   00068C  C08F  F099         	movff	?___almod+3,___aldiv@dividend+3
  1426   000690  0E0A               	movlw	10
  1427   000692  0100               	movlb	0	; () banked
  1428   000694  6F9A               	movwf	___aldiv@divisor& (0+255),b
  1429   000696  0E00               	movlw	0
  1430   000698  6F9B               	movwf	(___aldiv@divisor+1)& (0+255),b
  1431   00069A  0E00               	movlw	0
  1432   00069C  6F9C               	movwf	(___aldiv@divisor+2)& (0+255),b
  1433   00069E  0E00               	movlw	0
  1434   0006A0  6F9D               	movwf	(___aldiv@divisor+3)& (0+255),b
  1435   0006A2  EC77  F00E         	call	___aldiv	;wreg free
  1436   0006A6  0E30               	movlw	48
  1437   0006A8  0100               	movlb	0	; () banked
  1438   0006AA  2596               	addwf	?___aldiv& (0+255),w,b
  1439   0006AC  6E34               	movwf	_tens^0,c	;volatile
  1440   0006AE  0E00               	movlw	0
  1441   0006B0  2197               	addwfc	(?___aldiv+1)& (0+255),w,b
  1442   0006B2  6E35               	movwf	(_tens+1)^0,c	;volatile
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;main.c: 207: hundreds = 0x30+((number%1000)/100);
  1446   0006B4  0EE8               	movlw	232
  1447   0006B6  6F90               	movwf	___almod@divisor& (0+255),b
  1448   0006B8  0E03               	movlw	3
  1449   0006BA  6F91               	movwf	(___almod@divisor+1)& (0+255),b
  1450   0006BC  0E00               	movlw	0
  1451   0006BE  6F92               	movwf	(___almod@divisor+2)& (0+255),b
  1452   0006C0  0E00               	movlw	0
  1453   0006C2  6F93               	movwf	(___almod@divisor+3)& (0+255),b
  1454   0006C4  C0D5  F08C         	movff	_number,___almod@dividend	;volatile
  1455   0006C8  C0D6  F08D         	movff	_number+1,___almod@dividend+1	;volatile
  1456   0006CC  C0D7  F08E         	movff	_number+2,___almod@dividend+2	;volatile
  1457   0006D0  C0D8  F08F         	movff	_number+3,___almod@dividend+3	;volatile
  1458   0006D4  EC44  F00F         	call	___almod	;wreg free
  1459   0006D8  C08C  F096         	movff	?___almod,___aldiv@dividend
  1460   0006DC  C08D  F097         	movff	?___almod+1,___aldiv@dividend+1
  1461   0006E0  C08E  F098         	movff	?___almod+2,___aldiv@dividend+2
  1462   0006E4  C08F  F099         	movff	?___almod+3,___aldiv@dividend+3
  1463   0006E8  0E64               	movlw	100
  1464   0006EA  0100               	movlb	0	; () banked
  1465   0006EC  6F9A               	movwf	___aldiv@divisor& (0+255),b
  1466   0006EE  0E00               	movlw	0
  1467   0006F0  6F9B               	movwf	(___aldiv@divisor+1)& (0+255),b
  1468   0006F2  0E00               	movlw	0
  1469   0006F4  6F9C               	movwf	(___aldiv@divisor+2)& (0+255),b
  1470   0006F6  0E00               	movlw	0
  1471   0006F8  6F9D               	movwf	(___aldiv@divisor+3)& (0+255),b
  1472   0006FA  EC77  F00E         	call	___aldiv	;wreg free
  1473   0006FE  0E30               	movlw	48
  1474   000700  0100               	movlb	0	; () banked
  1475   000702  2596               	addwf	?___aldiv& (0+255),w,b
  1476   000704  6E32               	movwf	_hundreds^0,c	;volatile
  1477   000706  0E00               	movlw	0
  1478   000708  2197               	addwfc	(?___aldiv+1)& (0+255),w,b
  1479   00070A  6E33               	movwf	(_hundreds+1)^0,c	;volatile
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;main.c: 208: thousands = 0x30+(number/1000);
  1483   00070C  C0D5  F096         	movff	_number,___aldiv@dividend	;volatile
  1484   000710  C0D6  F097         	movff	_number+1,___aldiv@dividend+1	;volatile
  1485   000714  C0D7  F098         	movff	_number+2,___aldiv@dividend+2	;volatile
  1486   000718  C0D8  F099         	movff	_number+3,___aldiv@dividend+3	;volatile
  1487   00071C  0EE8               	movlw	232
  1488   00071E  6F9A               	movwf	___aldiv@divisor& (0+255),b
  1489   000720  0E03               	movlw	3
  1490   000722  6F9B               	movwf	(___aldiv@divisor+1)& (0+255),b
  1491   000724  0E00               	movlw	0
  1492   000726  6F9C               	movwf	(___aldiv@divisor+2)& (0+255),b
  1493   000728  0E00               	movlw	0
  1494   00072A  6F9D               	movwf	(___aldiv@divisor+3)& (0+255),b
  1495   00072C  EC77  F00E         	call	___aldiv	;wreg free
  1496   000730  0E30               	movlw	48
  1497   000732  0100               	movlb	0	; () banked
  1498   000734  2596               	addwf	?___aldiv& (0+255),w,b
  1499   000736  6E30               	movwf	_thousands^0,c	;volatile
  1500   000738  0E00               	movlw	0
  1501   00073A  2197               	addwfc	(?___aldiv+1)& (0+255),w,b
  1502   00073C  6E31               	movwf	(_thousands+1)^0,c	;volatile
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;main.c: 210: Display_Version();
  1506   00073E  ECF0  F00D         	call	_Display_Version	;wreg free
  1507                           
  1508                           ;main.c: 212: InitTimer0();
  1509   000742  EC9C  F012         	call	_InitTimer0	;wreg free
  1510                           
  1511                           ;main.c: 213: InitTimer1();
  1512   000746  EC85  F012         	call	_InitTimer1	;wreg free
  1513                           
  1514                           ;main.c: 214: InitTimer2();
  1515   00074A  ECB1  F012         	call	_InitTimer2	;wreg free
  1516   00074E                     l5742:
  1517                           
  1518                           ;main.c: 217: {;main.c: 218: Lifter_Init();
  1519   00074E  EC2C  F012         	call	_Lifter_Init	;wreg free
  1520                           
  1521                           ;main.c: 219: if(error5counter == 0)
  1522   000752  0100               	movlb	0	; () banked
  1523   000754  51B2               	movf	_error5counter& (0+255),w,b	;volatile
  1524   000756  11B3               	iorwf	(_error5counter+1)& (0+255),w,b	;volatile
  1525   000758  11B4               	iorwf	(_error5counter+2)& (0+255),w,b	;volatile
  1526   00075A  11B5               	iorwf	(_error5counter+3)& (0+255),w,b	;volatile
  1527   00075C  B4D8               	btfsc	status,2,c
  1528   00075E  D002               	goto	u4660
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;main.c: 222: };main.c: 223: }while(PORTEbits.RE7);
  1532   000760  BE84               	btfsc	132,7,c	;volatile
  1533   000762  D7F5               	goto	l5742
  1534   000764                     u4660:
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;main.c: 225: LATBbits.LATB3 = 0;
  1538   000764  968A               	bcf	138,3,c	;volatile
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;main.c: 226: Feeder_Stop();
  1542   000766  EC14  F013         	call	_Feeder_Stop	;wreg free
  1543                           
  1544                           ;main.c: 229: TMR0IF_triggered = !1;
  1545   00076A  0E00               	movlw	0
  1546   00076C  6E43               	movwf	_TMR0IF_triggered^0,c	;volatile
  1547                           
  1548                           ;main.c: 230: TMR1IF_triggered = !1;
  1549   00076E  0E00               	movlw	0
  1550   000770  6E42               	movwf	_TMR1IF_triggered^0,c	;volatile
  1551                           
  1552                           ;main.c: 231: TMR2IF_triggered = !1;
  1553   000772  0E00               	movlw	0
  1554   000774  0100               	movlb	0	; () banked
  1555   000776  6F89               	movwf	_TMR2IF_triggered& (0+255),b	;volatile
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;main.c: 236: INTCONbits.GIE=0;
  1559   000778  9EF2               	bcf	242,7,c	;volatile
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;main.c: 237: sol_on_time = read_i2c(0x0010);
  1563   00077A  0E10               	movlw	16
  1564   00077C  6FA4               	movwf	read_i2c@address& (0+255),b
  1565   00077E  0E00               	movlw	0
  1566   000780  6FA5               	movwf	(read_i2c@address+1)& (0+255),b
  1567   000782  0E00               	movlw	0
  1568   000784  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  1569   000786  0E00               	movlw	0
  1570   000788  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  1571   00078A  ECA8  F010         	call	_read_i2c	;wreg free
  1572   00078E  0100               	movlb	0	; () banked
  1573   000790  51A4               	movf	?_read_i2c& (0+255),w,b
  1574   000792  0101               	movlb	1	; () banked
  1575   000794  6F1D               	movwf	main@sol_on_time& (0+255),b	;volatile
  1576                           
  1577                           ; BSR set to: 1
  1578                           ;main.c: 238: sol_off_time = read_i2c(0x0020);
  1579   000796  0E20               	movlw	32
  1580   000798  0100               	movlb	0	; () banked
  1581   00079A  6FA4               	movwf	read_i2c@address& (0+255),b
  1582   00079C  0E00               	movlw	0
  1583   00079E  6FA5               	movwf	(read_i2c@address+1)& (0+255),b
  1584   0007A0  0E00               	movlw	0
  1585   0007A2  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  1586   0007A4  0E00               	movlw	0
  1587   0007A6  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  1588   0007A8  ECA8  F010         	call	_read_i2c	;wreg free
  1589   0007AC  0100               	movlb	0	; () banked
  1590   0007AE  51A4               	movf	?_read_i2c& (0+255),w,b
  1591   0007B0  0101               	movlb	1	; () banked
  1592   0007B2  6F1E               	movwf	main@sol_off_time& (0+255),b	;volatile
  1593                           
  1594                           ; BSR set to: 1
  1595                           ;main.c: 239: lift_up_hold_time = read_i2c(0x0030);
  1596   0007B4  0E30               	movlw	48
  1597   0007B6  0100               	movlb	0	; () banked
  1598   0007B8  6FA4               	movwf	read_i2c@address& (0+255),b
  1599   0007BA  0E00               	movlw	0
  1600   0007BC  6FA5               	movwf	(read_i2c@address+1)& (0+255),b
  1601   0007BE  0E00               	movlw	0
  1602   0007C0  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  1603   0007C2  0E00               	movlw	0
  1604   0007C4  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  1605   0007C6  ECA8  F010         	call	_read_i2c	;wreg free
  1606   0007CA  0100               	movlb	0	; () banked
  1607   0007CC  51A4               	movf	?_read_i2c& (0+255),w,b
  1608   0007CE  0101               	movlb	1	; () banked
  1609   0007D0  6F20               	movwf	main@lift_up_hold_time& (0+255),b	;volatile
  1610                           
  1611                           ; BSR set to: 1
  1612                           ;main.c: 240: lifter_up_position = read_i2c(0x0040);
  1613   0007D2  0E40               	movlw	64
  1614   0007D4  0100               	movlb	0	; () banked
  1615   0007D6  6FA4               	movwf	read_i2c@address& (0+255),b
  1616   0007D8  0E00               	movlw	0
  1617   0007DA  6FA5               	movwf	(read_i2c@address+1)& (0+255),b
  1618   0007DC  0E00               	movlw	0
  1619   0007DE  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  1620   0007E0  0E00               	movlw	0
  1621   0007E2  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  1622   0007E4  ECA8  F010         	call	_read_i2c	;wreg free
  1623   0007E8  0100               	movlb	0	; () banked
  1624   0007EA  51A4               	movf	?_read_i2c& (0+255),w,b
  1625   0007EC  0101               	movlb	1	; () banked
  1626   0007EE  6F1F               	movwf	main@lifter_up_position& (0+255),b	;volatile
  1627                           
  1628                           ; BSR set to: 1
  1629                           ;main.c: 241: INTCONbits.GIE=1;
  1630   0007F0  8EF2               	bsf	242,7,c	;volatile
  1631                           
  1632                           ; BSR set to: 1
  1633                           ;main.c: 246: if(sol_on_time > 0xC8)
  1634   0007F2  0EC8               	movlw	200
  1635   0007F4  651D               	cpfsgt	main@sol_on_time& (0+255),b	;volatile
  1636   0007F6  D017               	goto	l257
  1637                           
  1638                           ; BSR set to: 1
  1639                           ;main.c: 247: {;main.c: 248: sol_on_time = 0x1E;
  1640   0007F8  0E1E               	movlw	30
  1641   0007FA  6F1D               	movwf	main@sol_on_time& (0+255),b	;volatile
  1642                           
  1643                           ;main.c: 249: sol_activation_on_time=30;
  1644   0007FC  0E00               	movlw	0
  1645   0007FE  6F14               	movwf	(main@sol_activation_on_time+1)& (0+255),b
  1646   000800  0E1E               	movlw	30
  1647   000802  6F13               	movwf	main@sol_activation_on_time& (0+255),b
  1648                           
  1649                           ; BSR set to: 1
  1650                           ;main.c: 250: INTCONbits.GIE=0;
  1651   000804  9EF2               	bcf	242,7,c	;volatile
  1652                           
  1653                           ; BSR set to: 1
  1654                           ;main.c: 251: write_i2c(0x0010, sol_on_time);
  1655   000806  0E10               	movlw	16
  1656   000808  0100               	movlb	0	; () banked
  1657   00080A  6FA4               	movwf	write_i2c@address& (0+255),b
  1658   00080C  0E00               	movlw	0
  1659   00080E  6FA5               	movwf	(write_i2c@address+1)& (0+255),b
  1660   000810  0E00               	movlw	0
  1661   000812  6FA6               	movwf	(write_i2c@address+2)& (0+255),b
  1662   000814  0E00               	movlw	0
  1663   000816  6FA7               	movwf	(write_i2c@address+3)& (0+255),b
  1664   000818  C11D  F0A8         	movff	main@sol_on_time,write_i2c@data	;volatile
  1665   00081C  6BA9               	clrf	(write_i2c@data+1)& (0+255),b
  1666   00081E  EC70  F011         	call	_write_i2c	;wreg free
  1667                           
  1668                           ;main.c: 252: INTCONbits.GIE=1;
  1669   000822  8EF2               	bsf	242,7,c	;volatile
  1670                           
  1671                           ;main.c: 253: }
  1672   000824  D003               	goto	l5778
  1673   000826                     l257:
  1674                           
  1675                           ; BSR set to: 1
  1676                           ;main.c: 254: else;main.c: 255: {;main.c: 256: sol_activation_on_time=sol_on_time;
  1677   000826  C11D  F113         	movff	main@sol_on_time,main@sol_activation_on_time	;volatile
  1678   00082A  6B14               	clrf	(main@sol_activation_on_time+1)& (0+255),b
  1679   00082C                     l5778:
  1680                           
  1681                           ;main.c: 257: };main.c: 262: if(sol_off_time > 0xC8)
  1682   00082C  0EC8               	movlw	200
  1683   00082E  0101               	movlb	1	; () banked
  1684   000830  651E               	cpfsgt	main@sol_off_time& (0+255),b	;volatile
  1685   000832  D017               	goto	l259
  1686                           
  1687                           ; BSR set to: 1
  1688                           ;main.c: 263: {;main.c: 264: sol_off_time = 0x32;
  1689   000834  0E32               	movlw	50
  1690   000836  6F1E               	movwf	main@sol_off_time& (0+255),b	;volatile
  1691                           
  1692                           ;main.c: 265: sol_activation_off_time=50;
  1693   000838  0E00               	movlw	0
  1694   00083A  6F16               	movwf	(main@sol_activation_off_time+1)& (0+255),b
  1695   00083C  0E32               	movlw	50
  1696   00083E  6F15               	movwf	main@sol_activation_off_time& (0+255),b
  1697                           
  1698                           ; BSR set to: 1
  1699                           ;main.c: 266: INTCONbits.GIE=0;
  1700   000840  9EF2               	bcf	242,7,c	;volatile
  1701                           
  1702                           ; BSR set to: 1
  1703                           ;main.c: 267: write_i2c(0x0020, sol_off_time);
  1704   000842  0E20               	movlw	32
  1705   000844  0100               	movlb	0	; () banked
  1706   000846  6FA4               	movwf	write_i2c@address& (0+255),b
  1707   000848  0E00               	movlw	0
  1708   00084A  6FA5               	movwf	(write_i2c@address+1)& (0+255),b
  1709   00084C  0E00               	movlw	0
  1710   00084E  6FA6               	movwf	(write_i2c@address+2)& (0+255),b
  1711   000850  0E00               	movlw	0
  1712   000852  6FA7               	movwf	(write_i2c@address+3)& (0+255),b
  1713   000854  C11E  F0A8         	movff	main@sol_off_time,write_i2c@data	;volatile
  1714   000858  6BA9               	clrf	(write_i2c@data+1)& (0+255),b
  1715   00085A  EC70  F011         	call	_write_i2c	;wreg free
  1716                           
  1717                           ;main.c: 268: INTCONbits.GIE=1;
  1718   00085E  8EF2               	bsf	242,7,c	;volatile
  1719                           
  1720                           ;main.c: 269: }
  1721   000860  D003               	goto	l5788
  1722   000862                     l259:
  1723                           
  1724                           ; BSR set to: 1
  1725                           ;main.c: 270: else;main.c: 271: {;main.c: 272: sol_activation_off_time=sol_off_time;
  1726   000862  C11E  F115         	movff	main@sol_off_time,main@sol_activation_off_time	;volatile
  1727   000866  6B16               	clrf	(main@sol_activation_off_time+1)& (0+255),b
  1728   000868                     l5788:
  1729                           
  1730                           ;main.c: 273: };main.c: 278: if(lift_up_hold_time > 0xC8)
  1731   000868  0EC8               	movlw	200
  1732   00086A  0101               	movlb	1	; () banked
  1733   00086C  6520               	cpfsgt	main@lift_up_hold_time& (0+255),b	;volatile
  1734   00086E  D017               	goto	l261
  1735                           
  1736                           ; BSR set to: 1
  1737                           ;main.c: 279: {;main.c: 280: lift_up_hold_time = 0x05;
  1738   000870  0E05               	movlw	5
  1739   000872  6F20               	movwf	main@lift_up_hold_time& (0+255),b	;volatile
  1740                           
  1741                           ;main.c: 281: LiftUpHoldCounter=5;
  1742   000874  0E00               	movlw	0
  1743   000876  0100               	movlb	0	; () banked
  1744   000878  6FC7               	movwf	(_LiftUpHoldCounter+1)& (0+255),b
  1745   00087A  0E05               	movlw	5
  1746   00087C  6FC6               	movwf	_LiftUpHoldCounter& (0+255),b
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;main.c: 282: INTCONbits.GIE=0;
  1750   00087E  9EF2               	bcf	242,7,c	;volatile
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;main.c: 283: write_i2c(0x0030, lift_up_hold_time);
  1754   000880  0E30               	movlw	48
  1755   000882  6FA4               	movwf	write_i2c@address& (0+255),b
  1756   000884  0E00               	movlw	0
  1757   000886  6FA5               	movwf	(write_i2c@address+1)& (0+255),b
  1758   000888  0E00               	movlw	0
  1759   00088A  6FA6               	movwf	(write_i2c@address+2)& (0+255),b
  1760   00088C  0E00               	movlw	0
  1761   00088E  6FA7               	movwf	(write_i2c@address+3)& (0+255),b
  1762   000890  C120  F0A8         	movff	main@lift_up_hold_time,write_i2c@data	;volatile
  1763   000894  6BA9               	clrf	(write_i2c@data+1)& (0+255),b
  1764   000896  EC70  F011         	call	_write_i2c	;wreg free
  1765                           
  1766                           ;main.c: 284: INTCONbits.GIE=1;
  1767   00089A  8EF2               	bsf	242,7,c	;volatile
  1768                           
  1769                           ;main.c: 285: }
  1770   00089C  D004               	goto	l5798
  1771   00089E                     l261:
  1772                           
  1773                           ; BSR set to: 1
  1774                           ;main.c: 286: else;main.c: 287: {;main.c: 288: LiftUpHoldCounter=lift_up_hold_time;
  1775   00089E  C120  F0C6         	movff	main@lift_up_hold_time,_LiftUpHoldCounter	;volatile
  1776   0008A2  0100               	movlb	0	; () banked
  1777   0008A4  6BC7               	clrf	(_LiftUpHoldCounter+1)& (0+255),b
  1778   0008A6                     l5798:
  1779                           
  1780                           ;main.c: 289: };main.c: 294: if(lifter_up_position > 0xC8)
  1781   0008A6  0EC8               	movlw	200
  1782   0008A8  0101               	movlb	1	; () banked
  1783   0008AA  651F               	cpfsgt	main@lifter_up_position& (0+255),b	;volatile
  1784   0008AC  D017               	goto	l263
  1785                           
  1786                           ; BSR set to: 1
  1787                           ;main.c: 295: {;main.c: 296: lifter_up_position = 0x00;
  1788   0008AE  0E00               	movlw	0
  1789   0008B0  6F1F               	movwf	main@lifter_up_position& (0+255),b	;volatile
  1790                           
  1791                           ;main.c: 297: lifter_stop_delay_time=0;
  1792   0008B2  0E00               	movlw	0
  1793   0008B4  6F10               	movwf	(main@lifter_stop_delay_time+1)& (0+255),b
  1794   0008B6  0E00               	movlw	0
  1795   0008B8  6F0F               	movwf	main@lifter_stop_delay_time& (0+255),b
  1796                           
  1797                           ; BSR set to: 1
  1798                           ;main.c: 298: INTCONbits.GIE=0;
  1799   0008BA  9EF2               	bcf	242,7,c	;volatile
  1800                           
  1801                           ; BSR set to: 1
  1802                           ;main.c: 299: write_i2c(0x0040, lifter_up_position);
  1803   0008BC  0E40               	movlw	64
  1804   0008BE  0100               	movlb	0	; () banked
  1805   0008C0  6FA4               	movwf	write_i2c@address& (0+255),b
  1806   0008C2  0E00               	movlw	0
  1807   0008C4  6FA5               	movwf	(write_i2c@address+1)& (0+255),b
  1808   0008C6  0E00               	movlw	0
  1809   0008C8  6FA6               	movwf	(write_i2c@address+2)& (0+255),b
  1810   0008CA  0E00               	movlw	0
  1811   0008CC  6FA7               	movwf	(write_i2c@address+3)& (0+255),b
  1812   0008CE  C11F  F0A8         	movff	main@lifter_up_position,write_i2c@data	;volatile
  1813   0008D2  6BA9               	clrf	(write_i2c@data+1)& (0+255),b
  1814   0008D4  EC70  F011         	call	_write_i2c	;wreg free
  1815                           
  1816                           ;main.c: 300: INTCONbits.GIE=1;
  1817   0008D8  8EF2               	bsf	242,7,c	;volatile
  1818                           
  1819                           ;main.c: 301: }
  1820   0008DA  D003               	goto	l5808
  1821   0008DC                     l263:
  1822                           
  1823                           ; BSR set to: 1
  1824                           ;main.c: 302: else;main.c: 303: {;main.c: 304: lifter_stop_delay_time = lifter_up_positi
      +                          on;
  1825   0008DC  C11F  F10F         	movff	main@lifter_up_position,main@lifter_stop_delay_time	;volatile
  1826   0008E0  6B10               	clrf	(main@lifter_stop_delay_time+1)& (0+255),b
  1827   0008E2                     l5808:
  1828                           
  1829                           ;main.c: 305: };main.c: 307: Serial_Buffer_Out[0] = 0x51;
  1830   0008E2  0E51               	movlw	81
  1831   0008E4  0100               	movlb	0	; () banked
  1832   0008E6  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;main.c: 308: Serial_Buffer_Out[1] = sol_on_time ;
  1836   0008E8  C11D  F061         	movff	main@sol_on_time,_Serial_Buffer_Out+1	;volatile
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;main.c: 309: Serial_Buffer_Out[2] = sol_off_time ;
  1840   0008EC  C11E  F062         	movff	main@sol_off_time,_Serial_Buffer_Out+2	;volatile
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;main.c: 310: Serial_Buffer_Out[3] = lift_up_hold_time;
  1844   0008F0  C120  F063         	movff	main@lift_up_hold_time,_Serial_Buffer_Out+3	;volatile
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;main.c: 311: Serial_Buffer_Out[4] = lifter_up_position;
  1848   0008F4  C11F  F064         	movff	main@lifter_up_position,_Serial_Buffer_Out+4	;volatile
  1849   0008F8  D111               	goto	l266
  1850   0008FA                     l267:
  1851                           
  1852                           ; BSR set to: 1
  1853                           ;main.c: 319: {;main.c: 320: if(PORTDbits.RD3 == 0)
  1854   0008FA  B683               	btfsc	131,3,c	;volatile
  1855   0008FC  D003               	goto	l5820
  1856                           
  1857                           ; BSR set to: 1
  1858                           ;main.c: 321: {;main.c: 322: Feeder_Rotate1();
  1859   0008FE  EC1A  F013         	call	_Feeder_Rotate1	;wreg free
  1860                           
  1861                           ;main.c: 323: }
  1862   000902  D002               	goto	l5822
  1863   000904                     l5820:
  1864                           
  1865                           ; BSR set to: 1
  1866                           ;main.c: 324: else;main.c: 325: {;main.c: 326: Feeder_Stop();
  1867   000904  EC14  F013         	call	_Feeder_Stop	;wreg free
  1868   000908                     l5822:
  1869                           
  1870                           ;main.c: 327: };main.c: 329: if(PORTEbits.RE6 == 0)
  1871   000908  BC84               	btfsc	132,6,c	;volatile
  1872   00090A  D023               	goto	l5842
  1873                           
  1874                           ;main.c: 330: {;main.c: 331: for (int counter=1; counter<=5; counter++){
  1875   00090C  0E00               	movlw	0
  1876   00090E  0101               	movlb	1	; () banked
  1877   000910  6F03               	movwf	(main@counter+1)& (0+255),b
  1878   000912  0E01               	movlw	1
  1879   000914  6F02               	movwf	main@counter& (0+255),b
  1880   000916                     l5826:
  1881                           
  1882                           ; BSR set to: 1
  1883   000916  BF03               	btfsc	(main@counter+1)& (0+255),7,b
  1884   000918  D006               	goto	l5830
  1885   00091A  5103               	movf	(main@counter+1)& (0+255),w,b
  1886   00091C  E10F               	bnz	l5836
  1887   00091E  0E06               	movlw	6
  1888   000920  5D02               	subwf	main@counter& (0+255),w,b
  1889   000922  B0D8               	btfsc	status,0,c
  1890   000924  D00B               	goto	l5836
  1891   000926                     l5830:
  1892                           
  1893                           ; BSR set to: 1
  1894                           ;main.c: 332: DelayTime_1ms(1000);
  1895   000926  0E03               	movlw	3
  1896   000928  0100               	movlb	0	; () banked
  1897   00092A  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  1898   00092C  0EE8               	movlw	232
  1899   00092E  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  1900   000930  EC04  F012         	call	_DelayTime_1ms	;wreg free
  1901   000934  0101               	movlb	1	; () banked
  1902   000936  4B02               	infsnz	main@counter& (0+255),f,b
  1903   000938  2B03               	incf	(main@counter+1)& (0+255),f,b
  1904   00093A  D7ED               	goto	l5826
  1905   00093C                     l5836:
  1906                           
  1907                           ; BSR set to: 1
  1908                           ;main.c: 333: };main.c: 334: Feeder_Rotate2();
  1909   00093C  EC17  F013         	call	_Feeder_Rotate2	;wreg free
  1910                           
  1911                           ;main.c: 335: DelayTime_1ms(300);
  1912   000940  0E01               	movlw	1
  1913   000942  0100               	movlb	0	; () banked
  1914   000944  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  1915   000946  0E2C               	movlw	44
  1916   000948  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  1917   00094A  EC04  F012         	call	_DelayTime_1ms	;wreg free
  1918                           
  1919                           ;main.c: 336: Feeder_Stop();
  1920   00094E  EC14  F013         	call	_Feeder_Stop	;wreg free
  1921   000952                     l5842:
  1922                           
  1923                           ;main.c: 337: };main.c: 339: LATBbits.LATB3 = 0;
  1924   000952  968A               	bcf	138,3,c	;volatile
  1925   000954                     l5844:
  1926                           
  1927                           ;main.c: 344: {;main.c: 345: warning = 1;
  1928   000954  0E01               	movlw	1
  1929   000956  6E41               	movwf	_warning^0,c	;volatile
  1930                           
  1931                           ;main.c: 346: warning_number = '0';
  1932   000958  0E30               	movlw	48
  1933   00095A  0100               	movlb	0	; () banked
  1934   00095C  6FCC               	movwf	_warning_number& (0+255),b	;volatile
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;main.c: 347: }while(PORTDbits.RD2 == 0);
  1938   00095E  A483               	btfss	131,2,c	;volatile
  1939   000960  D7F9               	goto	l5844
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;main.c: 349: warning = 0;
  1943   000962  0E00               	movlw	0
  1944   000964  6E41               	movwf	_warning^0,c	;volatile
  1945   000966                     l276:
  1946   000966  A483               	btfss	131,2,c	;volatile
  1947   000968  D7FE               	goto	l276
  1948                           
  1949                           ;main.c: 353: DelayTime_1ms(100);
  1950   00096A  0E00               	movlw	0
  1951   00096C  0100               	movlb	0	; () banked
  1952   00096E  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  1953   000970  0E64               	movlw	100
  1954   000972  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  1955   000974  EC04  F012         	call	_DelayTime_1ms	;wreg free
  1956   000978                     l279:
  1957   000978  A483               	btfss	131,2,c	;volatile
  1958   00097A  D7FE               	goto	l279
  1959                           
  1960                           ;main.c: 357: }while(PORTDbits.RD2==0);
  1961   00097C  A483               	btfss	131,2,c	;volatile
  1962   00097E  D7EA               	goto	l5844
  1963                           
  1964                           ;main.c: 359: LATBbits.LATB3 = 1;
  1965   000980  868A               	bsf	138,3,c	;volatile
  1966                           
  1967                           ;main.c: 360: DelayTime_1ms(100);
  1968   000982  0E00               	movlw	0
  1969   000984  0100               	movlb	0	; () banked
  1970   000986  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  1971   000988  0E64               	movlw	100
  1972   00098A  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  1973   00098C  EC04  F012         	call	_DelayTime_1ms	;wreg free
  1974                           
  1975                           ;main.c: 362: if(PORTDbits.RD1==0)
  1976   000990  B283               	btfsc	131,1,c	;volatile
  1977   000992  D072               	goto	l5914
  1978                           
  1979                           ;main.c: 363: {;main.c: 364: error3counter = 30;
  1980   000994  0E1E               	movlw	30
  1981   000996  0100               	movlb	0	; () banked
  1982   000998  6FBA               	movwf	_error3counter& (0+255),b	;volatile
  1983   00099A  0E00               	movlw	0
  1984   00099C  6FBB               	movwf	(_error3counter+1)& (0+255),b	;volatile
  1985   00099E  0E00               	movlw	0
  1986   0009A0  6FBC               	movwf	(_error3counter+2)& (0+255),b	;volatile
  1987   0009A2  0E00               	movlw	0
  1988   0009A4  6FBD               	movwf	(_error3counter+3)& (0+255),b	;volatile
  1989   0009A6                     l5860:
  1990                           
  1991                           ;main.c: 367: if(PORTDbits.RD3 == 0)
  1992   0009A6  A683               	btfss	131,3,c	;volatile
  1993                           
  1994                           ;main.c: 368: {;main.c: 369: Feeder_Rotate1();
  1995   0009A8  EC1A  F013         	call	_Feeder_Rotate1	;wreg free
  1996                           
  1997                           ;main.c: 370: };main.c: 371: if(PORTEbits.RE6 == 0)
  1998   0009AC  BC84               	btfsc	132,6,c	;volatile
  1999   0009AE  D023               	goto	l5884
  2000                           
  2001                           ;main.c: 372: {;main.c: 373: for (int counter=1; counter<=5; counter++){
  2002   0009B0  0E00               	movlw	0
  2003   0009B2  0101               	movlb	1	; () banked
  2004   0009B4  6F05               	movwf	(main@counter_1244+1)& (0+255),b
  2005   0009B6  0E01               	movlw	1
  2006   0009B8  6F04               	movwf	main@counter_1244& (0+255),b
  2007   0009BA                     l5868:
  2008                           
  2009                           ; BSR set to: 1
  2010   0009BA  BF05               	btfsc	(main@counter_1244+1)& (0+255),7,b
  2011   0009BC  D006               	goto	l5872
  2012   0009BE  5105               	movf	(main@counter_1244+1)& (0+255),w,b
  2013   0009C0  E10F               	bnz	l5878
  2014   0009C2  0E06               	movlw	6
  2015   0009C4  5D04               	subwf	main@counter_1244& (0+255),w,b
  2016   0009C6  B0D8               	btfsc	status,0,c
  2017   0009C8  D00B               	goto	l5878
  2018   0009CA                     l5872:
  2019                           
  2020                           ; BSR set to: 1
  2021                           ;main.c: 374: DelayTime_1ms(1000);
  2022   0009CA  0E03               	movlw	3
  2023   0009CC  0100               	movlb	0	; () banked
  2024   0009CE  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  2025   0009D0  0EE8               	movlw	232
  2026   0009D2  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  2027   0009D4  EC04  F012         	call	_DelayTime_1ms	;wreg free
  2028   0009D8  0101               	movlb	1	; () banked
  2029   0009DA  4B04               	infsnz	main@counter_1244& (0+255),f,b
  2030   0009DC  2B05               	incf	(main@counter_1244+1)& (0+255),f,b
  2031   0009DE  D7ED               	goto	l5868
  2032   0009E0                     l5878:
  2033                           
  2034                           ; BSR set to: 1
  2035                           ;main.c: 375: };main.c: 376: Feeder_Rotate2();
  2036   0009E0  EC17  F013         	call	_Feeder_Rotate2	;wreg free
  2037                           
  2038                           ;main.c: 377: DelayTime_1ms(300);
  2039   0009E4  0E01               	movlw	1
  2040   0009E6  0100               	movlb	0	; () banked
  2041   0009E8  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  2042   0009EA  0E2C               	movlw	44
  2043   0009EC  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  2044   0009EE  EC04  F012         	call	_DelayTime_1ms	;wreg free
  2045                           
  2046                           ;main.c: 378: Feeder_Stop();
  2047   0009F2  EC14  F013         	call	_Feeder_Stop	;wreg free
  2048   0009F6                     l5884:
  2049                           
  2050                           ;main.c: 379: };main.c: 380: if(PORTBbits.RB0 == 1)
  2051   0009F6  B081               	btfsc	129,0,c	;volatile
  2052                           
  2053                           ;main.c: 381: {;main.c: 382: Feeder_Stop();
  2054   0009F8  EC14  F013         	call	_Feeder_Stop	;wreg free
  2055                           
  2056                           ;main.c: 383: };main.c: 385: if(error3counter <= 0)
  2057   0009FC  0100               	movlb	0	; () banked
  2058   0009FE  BFBD               	btfsc	(_error3counter+3)& (0+255),7,b	;volatile
  2059   000A00  D007               	goto	u4830
  2060   000A02  51BD               	movf	(_error3counter+3)& (0+255),w,b	;volatile
  2061   000A04  11BC               	iorwf	(_error3counter+2)& (0+255),w,b	;volatile
  2062   000A06  11BB               	iorwf	(_error3counter+1)& (0+255),w,b	;volatile
  2063   000A08  E107               	bnz	l5892
  2064   000A0A  05BA               	decf	_error3counter& (0+255),w,b	;volatile
  2065   000A0C  B0D8               	btfsc	status,0,c
  2066   000A0E  D004               	goto	l5892
  2067   000A10                     u4830:
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;main.c: 386: {;main.c: 387: warning = 1;
  2071   000A10  0E01               	movlw	1
  2072   000A12  6E41               	movwf	_warning^0,c	;volatile
  2073                           
  2074                           ;main.c: 388: warning_number = '3';
  2075   000A14  0E33               	movlw	51
  2076   000A16  6FCC               	movwf	_warning_number& (0+255),b	;volatile
  2077   000A18                     l5892:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;main.c: 389: };main.c: 391: LATBbits.LATB3 = 1;
  2081   000A18  868A               	bsf	138,3,c	;volatile
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;main.c: 392: DelayTime_1ms(100);
  2085   000A1A  0E00               	movlw	0
  2086   000A1C  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  2087   000A1E  0E64               	movlw	100
  2088   000A20  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  2089   000A22  EC04  F012         	call	_DelayTime_1ms	;wreg free
  2090                           
  2091                           ;main.c: 394: LATEbits.LATE5 = 1;
  2092   000A26  8A8D               	bsf	141,5,c	;volatile
  2093                           
  2094                           ;main.c: 396: DelayTime_10ms(sol_activation_on_time);
  2095   000A28  C113  F08C         	movff	main@sol_activation_on_time,DelayTime_10ms@time
  2096   000A2C  C114  F08D         	movff	main@sol_activation_on_time+1,DelayTime_10ms@time+1
  2097   000A30  EC18  F012         	call	_DelayTime_10ms	;wreg free
  2098                           
  2099                           ;main.c: 398: LATEbits.LATE5 = 0;
  2100   000A34  9A8D               	bcf	141,5,c	;volatile
  2101                           
  2102                           ;main.c: 400: DelayTime_10ms(sol_activation_off_time);
  2103   000A36  C115  F08C         	movff	main@sol_activation_off_time,DelayTime_10ms@time
  2104   000A3A  C116  F08D         	movff	main@sol_activation_off_time+1,DelayTime_10ms@time+1
  2105   000A3E  EC18  F012         	call	_DelayTime_10ms	;wreg free
  2106                           
  2107                           ;main.c: 403: } while(PORTDbits.RD1 == 0 && PORTDbits.RD2 == 1);
  2108   000A42  B283               	btfsc	131,1,c	;volatile
  2109   000A44  D002               	goto	u4850
  2110   000A46  B483               	btfsc	131,2,c	;volatile
  2111   000A48  D7AE               	goto	l5860
  2112   000A4A                     u4850:
  2113                           
  2114                           ;main.c: 405: if(PORTDbits.RD1 == 1)
  2115   000A4A  A283               	btfss	131,1,c	;volatile
  2116   000A4C  D01A               	goto	l5916
  2117                           
  2118                           ;main.c: 406: {;main.c: 407: capin = 1;
  2119   000A4E  0E00               	movlw	0
  2120   000A50  0101               	movlb	1	; () banked
  2121   000A52  6F12               	movwf	(main@capin+1)& (0+255),b
  2122   000A54  0E01               	movlw	1
  2123   000A56  6F11               	movwf	main@capin& (0+255),b
  2124                           
  2125                           ; BSR set to: 1
  2126                           ;main.c: 409: if(warning_number == '3')
  2127   000A58  0E33               	movlw	51
  2128   000A5A  0100               	movlb	0	; () banked
  2129   000A5C  19CC               	xorwf	_warning_number& (0+255),w,b	;volatile
  2130   000A5E  A4D8               	btfss	status,2,c
  2131   000A60  D010               	goto	l5916
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;main.c: 410: {;main.c: 411: warning = 0;
  2135   000A62  0E00               	movlw	0
  2136   000A64  6E41               	movwf	_warning^0,c	;volatile
  2137                           
  2138                           ;main.c: 412: error3counter = 30;
  2139   000A66  0E1E               	movlw	30
  2140   000A68  6FBA               	movwf	_error3counter& (0+255),b	;volatile
  2141   000A6A  0E00               	movlw	0
  2142   000A6C  6FBB               	movwf	(_error3counter+1)& (0+255),b	;volatile
  2143   000A6E  0E00               	movlw	0
  2144   000A70  6FBC               	movwf	(_error3counter+2)& (0+255),b	;volatile
  2145   000A72  0E00               	movlw	0
  2146   000A74  6FBD               	movwf	(_error3counter+3)& (0+255),b	;volatile
  2147   000A76  D005               	goto	l5916
  2148   000A78                     l5914:
  2149                           
  2150                           ;main.c: 418: else;main.c: 419: {;main.c: 420: capin = 1;
  2151   000A78  0E00               	movlw	0
  2152   000A7A  0101               	movlb	1	; () banked
  2153   000A7C  6F12               	movwf	(main@capin+1)& (0+255),b
  2154   000A7E  0E01               	movlw	1
  2155   000A80  6F11               	movwf	main@capin& (0+255),b
  2156   000A82                     l5916:
  2157                           
  2158                           ;main.c: 421: };main.c: 423: LATBbits.LATB3 = 0;
  2159   000A82  968A               	bcf	138,3,c	;volatile
  2160                           
  2161                           ;main.c: 425: FirstRun=!1;
  2162   000A84  0E00               	movlw	0
  2163   000A86  0101               	movlb	1	; () banked
  2164   000A88  6F0C               	movwf	main@FirstRun& (0+255),b
  2165                           
  2166                           ; BSR set to: 1
  2167                           ;main.c: 427: if(!PORTDbits.RD3)
  2168   000A8A  A683               	btfss	131,3,c	;volatile
  2169                           
  2170                           ; BSR set to: 1
  2171                           ;main.c: 428: {;main.c: 429: Feeder_Rotate1();
  2172   000A8C  EC1A  F013         	call	_Feeder_Rotate1	;wreg free
  2173                           
  2174                           ;main.c: 430: };main.c: 431: if(PORTEbits.RE6 == 0)
  2175   000A90  BC84               	btfsc	132,6,c	;volatile
  2176   000A92  D024               	goto	l298
  2177                           
  2178                           ;main.c: 432: {;main.c: 433: for (int counter=1; counter<=5; counter++){
  2179   000A94  0E00               	movlw	0
  2180   000A96  0101               	movlb	1	; () banked
  2181   000A98  6F07               	movwf	(main@counter_1261+1)& (0+255),b
  2182   000A9A  0E01               	movlw	1
  2183   000A9C  6F06               	movwf	main@counter_1261& (0+255),b
  2184   000A9E                     l5926:
  2185                           
  2186                           ; BSR set to: 1
  2187   000A9E  BF07               	btfsc	(main@counter_1261+1)& (0+255),7,b
  2188   000AA0  D006               	goto	l5930
  2189   000AA2  5107               	movf	(main@counter_1261+1)& (0+255),w,b
  2190   000AA4  E10F               	bnz	l5936
  2191   000AA6  0E06               	movlw	6
  2192   000AA8  5D06               	subwf	main@counter_1261& (0+255),w,b
  2193   000AAA  B0D8               	btfsc	status,0,c
  2194   000AAC  D00B               	goto	l5936
  2195   000AAE                     l5930:
  2196                           
  2197                           ; BSR set to: 1
  2198                           ;main.c: 434: DelayTime_1ms(1000);
  2199   000AAE  0E03               	movlw	3
  2200   000AB0  0100               	movlb	0	; () banked
  2201   000AB2  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  2202   000AB4  0EE8               	movlw	232
  2203   000AB6  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  2204   000AB8  EC04  F012         	call	_DelayTime_1ms	;wreg free
  2205   000ABC  0101               	movlb	1	; () banked
  2206   000ABE  4B06               	infsnz	main@counter_1261& (0+255),f,b
  2207   000AC0  2B07               	incf	(main@counter_1261+1)& (0+255),f,b
  2208   000AC2  D7ED               	goto	l5926
  2209   000AC4                     l5936:
  2210                           
  2211                           ; BSR set to: 1
  2212                           ;main.c: 435: };main.c: 436: Feeder_Rotate2();
  2213   000AC4  EC17  F013         	call	_Feeder_Rotate2	;wreg free
  2214                           
  2215                           ;main.c: 437: DelayTime_1ms(300);
  2216   000AC8  0E01               	movlw	1
  2217   000ACA  0100               	movlb	0	; () banked
  2218   000ACC  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  2219   000ACE  0E2C               	movlw	44
  2220   000AD0  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  2221   000AD2  EC04  F012         	call	_DelayTime_1ms	;wreg free
  2222                           
  2223                           ;main.c: 438: Feeder_Stop();
  2224   000AD6  EC14  F013         	call	_Feeder_Stop	;wreg free
  2225                           
  2226                           ;main.c: 439: }
  2227   000ADA  D017               	goto	l5950
  2228   000ADC                     l298:
  2229                           
  2230                           ;main.c: 440: else if (PORTBbits.RB0==1)
  2231   000ADC  A081               	btfss	129,0,c	;volatile
  2232   000ADE  D015               	goto	l5950
  2233                           
  2234                           ;main.c: 441: {;main.c: 442: _delay((unsigned long)((50)*(8000000/4000.0)));
  2235   000AE0  0E82               	movlw	130
  2236   000AE2  0100               	movlb	0	; () banked
  2237   000AE4  6FAA               	movwf	??_main& (0+255),b
  2238   000AE6  0EDD               	movlw	221
  2239   000AE8                     u5977:
  2240   000AE8  2EE8               	decfsz	wreg,f,c
  2241   000AEA  D7FE               	bra	u5977
  2242   000AEC  2FAA               	decfsz	??_main& (0+255),f,b
  2243   000AEE  D7FC               	bra	u5977
  2244   000AF0  D000               	nop2	
  2245                           
  2246                           ;main.c: 443: if(PORTBbits.RB0 == 1)
  2247   000AF2  B081               	btfsc	129,0,c	;volatile
  2248                           
  2249                           ;main.c: 444: {;main.c: 445: Feeder_Stop();
  2250   000AF4  EC14  F013         	call	_Feeder_Stop	;wreg free
  2251                           
  2252                           ;main.c: 446: };main.c: 447: error1counter = 50;
  2253   000AF8  0E32               	movlw	50
  2254   000AFA  0100               	movlb	0	; () banked
  2255   000AFC  6FBE               	movwf	_error1counter& (0+255),b	;volatile
  2256   000AFE  0E00               	movlw	0
  2257   000B00  6FBF               	movwf	(_error1counter+1)& (0+255),b	;volatile
  2258   000B02  0E00               	movlw	0
  2259   000B04  6FC0               	movwf	(_error1counter+2)& (0+255),b	;volatile
  2260   000B06  0E00               	movlw	0
  2261   000B08  6FC1               	movwf	(_error1counter+3)& (0+255),b	;volatile
  2262   000B0A                     l5950:
  2263                           
  2264                           ;main.c: 448: };main.c: 450: if(FirstRun==!1){
  2265   000B0A  0101               	movlb	1	; () banked
  2266   000B0C  510C               	movf	main@FirstRun& (0+255),w,b
  2267   000B0E  A4D8               	btfss	status,2,c
  2268   000B10  D005               	goto	l266
  2269                           
  2270                           ; BSR set to: 1
  2271                           ;main.c: 451: sw1counter=0;
  2272   000B12  0E00               	movlw	0
  2273   000B14  0100               	movlb	0	; () banked
  2274   000B16  6FC5               	movwf	(_sw1counter+1)& (0+255),b	;volatile
  2275   000B18  0E00               	movlw	0
  2276   000B1A  6FC4               	movwf	_sw1counter& (0+255),b	;volatile
  2277   000B1C                     l266:
  2278   000B1C  0101               	movlb	1	; () banked
  2279   000B1E  510C               	movf	main@FirstRun& (0+255),w,b
  2280   000B20  A4D8               	btfss	status,2,c
  2281   000B22  D6EB               	goto	l267
  2282                           
  2283                           ; BSR set to: 1
  2284                           ;main.c: 453: };main.c: 454: };main.c: 457: if (PORTEbits.RE3 == 1)
  2285   000B24  A684               	btfss	132,3,c	;volatile
  2286   000B26  D002               	goto	l5956
  2287                           
  2288                           ; BSR set to: 1
  2289                           ;main.c: 458: {;main.c: 460: Lifter_Use = 0;
  2290   000B28  0E00               	movlw	0
  2291   000B2A  D001               	goto	L1
  2292   000B2C                     l5956:
  2293                           
  2294                           ; BSR set to: 1
  2295                           ;main.c: 462: else;main.c: 463: {;main.c: 464: Lifter_Use = 1;
  2296   000B2C  0E01               	movlw	1
  2297   000B2E                     L1:
  2298   000B2E  0100               	movlb	0	; () banked
  2299   000B30  6F86               	movwf	_Lifter_Use& (0+255),b
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;main.c: 465: };main.c: 467: if (Lifter_Use == 1)
  2303   000B32  0586               	decf	_Lifter_Use& (0+255),w,b
  2304   000B34  A4D8               	btfss	status,2,c
  2305   000B36  D003               	goto	l5962
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;main.c: 468: {;main.c: 469: start_capping = 1;
  2309   000B38  0E01               	movlw	1
  2310   000B3A  0101               	movlb	1	; () banked
  2311   000B3C  6F17               	movwf	main@start_capping& (0+255),b
  2312   000B3E                     l5962:
  2313                           
  2314                           ;main.c: 470: };main.c: 472: if ((PORTDbits.RD2) && (start_capping == 1) && (error == 0)
      +                          )
  2315   000B3E  A483               	btfss	131,2,c	;volatile
  2316   000B40  D00A               	goto	l309
  2317   000B42  0101               	movlb	1	; () banked
  2318   000B44  0517               	decf	main@start_capping& (0+255),w,b
  2319   000B46  A4D8               	btfss	status,2,c
  2320   000B48  D006               	goto	l309
  2321                           
  2322                           ; BSR set to: 1
  2323   000B4A  0100               	movlb	0	; () banked
  2324   000B4C  5188               	movf	_error& (0+255),w,b	;volatile
  2325   000B4E  A4D8               	btfss	status,2,c
  2326   000B50  D002               	goto	l309
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;main.c: 473: {;main.c: 474: LATBbits.LATB3 = 1;
  2330   000B52  868A               	bsf	138,3,c	;volatile
  2331                           
  2332                           ;main.c: 475: }
  2333   000B54  D019               	goto	l5982
  2334   000B56                     l309:
  2335                           
  2336                           ;main.c: 477: else if ((!PORTDbits.RD2) || (start_capping == 0) || (error == 1))
  2337   000B56  A483               	btfss	131,2,c	;volatile
  2338   000B58  D008               	goto	u5020
  2339   000B5A  0101               	movlb	1	; () banked
  2340   000B5C  5117               	movf	main@start_capping& (0+255),w,b
  2341   000B5E  B4D8               	btfsc	status,2,c
  2342   000B60  D004               	goto	u5020
  2343                           
  2344                           ; BSR set to: 1
  2345   000B62  0100               	movlb	0	; () banked
  2346   000B64  0588               	decf	_error& (0+255),w,b	;volatile
  2347   000B66  A4D8               	btfss	status,2,c
  2348   000B68  D00F               	goto	l5982
  2349   000B6A                     u5020:
  2350                           
  2351                           ;main.c: 478: {;main.c: 479: LATBbits.LATB3 = 0;
  2352   000B6A  968A               	bcf	138,3,c	;volatile
  2353                           
  2354                           ;main.c: 482: if(!PORTDbits.RD2 && lifter == standby)
  2355   000B6C  B483               	btfsc	131,2,c	;volatile
  2356   000B6E  D00C               	goto	l5982
  2357   000B70  0100               	movlb	0	; () banked
  2358   000B72  5187               	movf	_lifter& (0+255),w,b
  2359   000B74  A4D8               	btfss	status,2,c
  2360   000B76  D008               	goto	l5982
  2361   000B78                     u5040:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;main.c: 486: {;main.c: 487: warning = 1;
  2365   000B78  0E01               	movlw	1
  2366   000B7A  6E41               	movwf	_warning^0,c	;volatile
  2367                           
  2368                           ;main.c: 488: warning_number = '0';
  2369   000B7C  0E30               	movlw	48
  2370   000B7E  6FCC               	movwf	_warning_number& (0+255),b	;volatile
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;main.c: 489: }while(!PORTDbits.RD2);
  2374   000B80  A483               	btfss	131,2,c	;volatile
  2375   000B82  D7FA               	goto	u5040
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;main.c: 491: warning = 0;
  2379   000B84  0E00               	movlw	0
  2380   000B86  6E41               	movwf	_warning^0,c	;volatile
  2381   000B88                     l5982:
  2382                           
  2383                           ;main.c: 492: };main.c: 494: };main.c: 497: if(!PORTDbits.RD3)
  2384   000B88  B683               	btfsc	131,3,c	;volatile
  2385   000B8A  D019               	goto	l317
  2386                           
  2387                           ;main.c: 498: {;main.c: 499: Feeder_Rotate1();
  2388   000B8C  EC1A  F013         	call	_Feeder_Rotate1	;wreg free
  2389                           
  2390                           ;main.c: 501: if(error1counter <= 0)
  2391   000B90  0100               	movlb	0	; () banked
  2392   000B92  BFC1               	btfsc	(_error1counter+3)& (0+255),7,b	;volatile
  2393   000B94  D007               	goto	u5070
  2394   000B96  51C1               	movf	(_error1counter+3)& (0+255),w,b	;volatile
  2395   000B98  11C0               	iorwf	(_error1counter+2)& (0+255),w,b	;volatile
  2396   000B9A  11BF               	iorwf	(_error1counter+1)& (0+255),w,b	;volatile
  2397   000B9C  E156               	bnz	l6024
  2398   000B9E  05BE               	decf	_error1counter& (0+255),w,b	;volatile
  2399   000BA0  B0D8               	btfsc	status,0,c
  2400   000BA2  D053               	goto	l6024
  2401   000BA4                     u5070:
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;main.c: 502: {;main.c: 503: warning = 1;
  2405   000BA4  0E01               	movlw	1
  2406   000BA6  6E41               	movwf	_warning^0,c	;volatile
  2407                           
  2408                           ;main.c: 504: warning_number = '1';
  2409   000BA8  0E31               	movlw	49
  2410   000BAA  6FCC               	movwf	_warning_number& (0+255),b	;volatile
  2411                           
  2412                           ;main.c: 505: error1counter = 50;
  2413   000BAC  0E32               	movlw	50
  2414   000BAE  6FBE               	movwf	_error1counter& (0+255),b	;volatile
  2415   000BB0  0E00               	movlw	0
  2416   000BB2  6FBF               	movwf	(_error1counter+1)& (0+255),b	;volatile
  2417   000BB4  0E00               	movlw	0
  2418   000BB6  6FC0               	movwf	(_error1counter+2)& (0+255),b	;volatile
  2419   000BB8  0E00               	movlw	0
  2420   000BBA  6FC1               	movwf	(_error1counter+3)& (0+255),b	;volatile
  2421   000BBC  D046               	goto	l6024
  2422   000BBE                     l317:
  2423                           
  2424                           ;main.c: 508: else if (PORTDbits.RD3 == 1)
  2425   000BBE  A683               	btfss	131,3,c	;volatile
  2426   000BC0  D044               	goto	l6024
  2427                           
  2428                           ;main.c: 509: {;main.c: 510: if(PORTDbits.RD3)
  2429   000BC2  A683               	btfss	131,3,c	;volatile
  2430   000BC4  D00B               	goto	l5994
  2431                           
  2432                           ;main.c: 511: {;main.c: 512: error1counter = 50;
  2433   000BC6  0E32               	movlw	50
  2434   000BC8  0100               	movlb	0	; () banked
  2435   000BCA  6FBE               	movwf	_error1counter& (0+255),b	;volatile
  2436   000BCC  0E00               	movlw	0
  2437   000BCE  6FBF               	movwf	(_error1counter+1)& (0+255),b	;volatile
  2438   000BD0  0E00               	movlw	0
  2439   000BD2  6FC0               	movwf	(_error1counter+2)& (0+255),b	;volatile
  2440   000BD4  0E00               	movlw	0
  2441   000BD6  6FC1               	movwf	(_error1counter+3)& (0+255),b	;volatile
  2442                           
  2443                           ;main.c: 513: warning = 0;
  2444   000BD8  0E00               	movlw	0
  2445   000BDA  6E41               	movwf	_warning^0,c	;volatile
  2446   000BDC                     l5994:
  2447                           
  2448                           ;main.c: 514: };main.c: 515: if(PORTEbits.RE6 == 0)
  2449   000BDC  BC84               	btfsc	132,6,c	;volatile
  2450   000BDE  D023               	goto	l6014
  2451                           
  2452                           ;main.c: 516: {;main.c: 517: for (int counter=1; counter<=5; counter++){
  2453   000BE0  0E00               	movlw	0
  2454   000BE2  0101               	movlb	1	; () banked
  2455   000BE4  6F09               	movwf	(main@counter_1262+1)& (0+255),b
  2456   000BE6  0E01               	movlw	1
  2457   000BE8  6F08               	movwf	main@counter_1262& (0+255),b
  2458   000BEA                     l5998:
  2459                           
  2460                           ; BSR set to: 1
  2461   000BEA  BF09               	btfsc	(main@counter_1262+1)& (0+255),7,b
  2462   000BEC  D006               	goto	l6002
  2463   000BEE  5109               	movf	(main@counter_1262+1)& (0+255),w,b
  2464   000BF0  E10F               	bnz	l6008
  2465   000BF2  0E06               	movlw	6
  2466   000BF4  5D08               	subwf	main@counter_1262& (0+255),w,b
  2467   000BF6  B0D8               	btfsc	status,0,c
  2468   000BF8  D00B               	goto	l6008
  2469   000BFA                     l6002:
  2470                           
  2471                           ; BSR set to: 1
  2472                           ;main.c: 518: DelayTime_1ms(1000);
  2473   000BFA  0E03               	movlw	3
  2474   000BFC  0100               	movlb	0	; () banked
  2475   000BFE  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  2476   000C00  0EE8               	movlw	232
  2477   000C02  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  2478   000C04  EC04  F012         	call	_DelayTime_1ms	;wreg free
  2479   000C08  0101               	movlb	1	; () banked
  2480   000C0A  4B08               	infsnz	main@counter_1262& (0+255),f,b
  2481   000C0C  2B09               	incf	(main@counter_1262+1)& (0+255),f,b
  2482   000C0E  D7ED               	goto	l5998
  2483   000C10                     l6008:
  2484                           
  2485                           ; BSR set to: 1
  2486                           ;main.c: 519: };main.c: 520: Feeder_Rotate2();
  2487   000C10  EC17  F013         	call	_Feeder_Rotate2	;wreg free
  2488                           
  2489                           ;main.c: 521: DelayTime_1ms(300);
  2490   000C14  0E01               	movlw	1
  2491   000C16  0100               	movlb	0	; () banked
  2492   000C18  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  2493   000C1A  0E2C               	movlw	44
  2494   000C1C  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  2495   000C1E  EC04  F012         	call	_DelayTime_1ms	;wreg free
  2496                           
  2497                           ;main.c: 522: Feeder_Stop();
  2498   000C22  EC14  F013         	call	_Feeder_Stop	;wreg free
  2499   000C26                     l6014:
  2500                           
  2501                           ;main.c: 523: };main.c: 524: if((PORTBbits.RB0 == 1) && (Busy == 0))
  2502   000C26  A081               	btfss	129,0,c	;volatile
  2503   000C28  D010               	goto	l6024
  2504   000C2A  0100               	movlb	0	; () banked
  2505   000C2C  518A               	movf	_Busy& (0+255),w,b
  2506   000C2E  A4D8               	btfss	status,2,c
  2507   000C30  D00C               	goto	l6024
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;main.c: 525: {;main.c: 526: _delay((unsigned long)((50)*(8000000/4000.0)));
  2511   000C32  0E82               	movlw	130
  2512   000C34  0100               	movlb	0	; () banked
  2513   000C36  6FAA               	movwf	??_main& (0+255),b
  2514   000C38  0EDD               	movlw	221
  2515   000C3A                     u5987:
  2516   000C3A  2EE8               	decfsz	wreg,f,c
  2517   000C3C  D7FE               	bra	u5987
  2518   000C3E  2FAA               	decfsz	??_main& (0+255),f,b
  2519   000C40  D7FC               	bra	u5987
  2520   000C42  D000               	nop2	
  2521                           
  2522                           ;main.c: 527: if(PORTBbits.RB0 == 1)
  2523   000C44  B081               	btfsc	129,0,c	;volatile
  2524                           
  2525                           ;main.c: 528: {;main.c: 529: Feeder_Stop();
  2526   000C46  EC14  F013         	call	_Feeder_Stop	;wreg free
  2527   000C4A                     l6024:
  2528                           
  2529                           ;main.c: 530: };main.c: 531: };main.c: 532: };main.c: 535: if (PORTBbits.RB2==1)
  2530   000C4A  A481               	btfss	129,2,c	;volatile
  2531   000C4C  D00B               	goto	l6028
  2532                           
  2533                           ;main.c: 536: {;main.c: 537: sw1counter=0;
  2534   000C4E  0E00               	movlw	0
  2535   000C50  0100               	movlb	0	; () banked
  2536   000C52  6FC5               	movwf	(_sw1counter+1)& (0+255),b	;volatile
  2537   000C54  0E00               	movlw	0
  2538   000C56  6FC4               	movwf	_sw1counter& (0+255),b	;volatile
  2539                           
  2540                           ;main.c: 538: swcounterflag=0;
  2541   000C58  0E00               	movlw	0
  2542   000C5A  0101               	movlb	1	; () banked
  2543   000C5C  6F0E               	movwf	(main@swcounterflag+1)& (0+255),b
  2544   000C5E  0E00               	movlw	0
  2545   000C60  6F0D               	movwf	main@swcounterflag& (0+255),b
  2546                           
  2547                           ;main.c: 539: }
  2548   000C62  D056               	goto	l6038
  2549   000C64                     l6028:
  2550                           
  2551                           ;main.c: 540: else;main.c: 541: {;main.c: 542: if (swcounterflag==0)
  2552   000C64  0101               	movlb	1	; () banked
  2553   000C66  510D               	movf	main@swcounterflag& (0+255),w,b
  2554   000C68  110E               	iorwf	(main@swcounterflag+1)& (0+255),w,b
  2555   000C6A  A4D8               	btfss	status,2,c
  2556   000C6C  D00B               	goto	l6032
  2557                           
  2558                           ; BSR set to: 1
  2559                           ;main.c: 543: {;main.c: 544: sw1counter = 20;
  2560   000C6E  0E00               	movlw	0
  2561   000C70  0100               	movlb	0	; () banked
  2562   000C72  6FC5               	movwf	(_sw1counter+1)& (0+255),b	;volatile
  2563   000C74  0E14               	movlw	20
  2564   000C76  6FC4               	movwf	_sw1counter& (0+255),b	;volatile
  2565                           
  2566                           ;main.c: 545: swcounterflag=1;
  2567   000C78  0E00               	movlw	0
  2568   000C7A  0101               	movlb	1	; () banked
  2569   000C7C  6F0E               	movwf	(main@swcounterflag+1)& (0+255),b
  2570   000C7E  0E01               	movlw	1
  2571   000C80  6F0D               	movwf	main@swcounterflag& (0+255),b
  2572                           
  2573                           ;main.c: 546: }
  2574   000C82  D011               	goto	l330
  2575   000C84                     l6032:
  2576                           
  2577                           ; BSR set to: 1
  2578                           ;main.c: 547: else if ((swcounterflag==1)&&(sw1counter==0))
  2579   000C84  050D               	decf	main@swcounterflag& (0+255),w,b
  2580   000C86  110E               	iorwf	(main@swcounterflag+1)& (0+255),w,b
  2581   000C88  A4D8               	btfss	status,2,c
  2582   000C8A  D00D               	goto	l330
  2583                           
  2584                           ; BSR set to: 1
  2585   000C8C  0100               	movlb	0	; () banked
  2586   000C8E  51C4               	movf	_sw1counter& (0+255),w,b	;volatile
  2587   000C90  11C5               	iorwf	(_sw1counter+1)& (0+255),w,b	;volatile
  2588   000C92  A4D8               	btfss	status,2,c
  2589   000C94  D008               	goto	l330
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;main.c: 548: {;main.c: 549: number = 0;
  2593   000C96  0E00               	movlw	0
  2594   000C98  6FD5               	movwf	_number& (0+255),b	;volatile
  2595   000C9A  0E00               	movlw	0
  2596   000C9C  6FD6               	movwf	(_number+1)& (0+255),b	;volatile
  2597   000C9E  0E00               	movlw	0
  2598   000CA0  6FD7               	movwf	(_number+2)& (0+255),b	;volatile
  2599   000CA2  0E00               	movlw	0
  2600   000CA4  6FD8               	movwf	(_number+3)& (0+255),b	;volatile
  2601   000CA6                     l330:
  2602                           
  2603                           ;main.c: 550: };main.c: 552: error = 0;
  2604   000CA6  0E00               	movlw	0
  2605   000CA8  0100               	movlb	0	; () banked
  2606   000CAA  6F88               	movwf	_error& (0+255),b	;volatile
  2607                           
  2608                           ;main.c: 553: warning = 0;
  2609   000CAC  0E00               	movlw	0
  2610   000CAE  6E41               	movwf	_warning^0,c	;volatile
  2611                           
  2612                           ;main.c: 554: error1counter = 50;
  2613   000CB0  0E32               	movlw	50
  2614   000CB2  6FBE               	movwf	_error1counter& (0+255),b	;volatile
  2615   000CB4  0E00               	movlw	0
  2616   000CB6  6FBF               	movwf	(_error1counter+1)& (0+255),b	;volatile
  2617   000CB8  0E00               	movlw	0
  2618   000CBA  6FC0               	movwf	(_error1counter+2)& (0+255),b	;volatile
  2619   000CBC  0E00               	movlw	0
  2620   000CBE  6FC1               	movwf	(_error1counter+3)& (0+255),b	;volatile
  2621                           
  2622                           ;main.c: 555: error2counter = 30;
  2623   000CC0  0E1E               	movlw	30
  2624   000CC2  6E47               	movwf	_error2counter^0,c	;volatile
  2625   000CC4  0E00               	movlw	0
  2626   000CC6  6E48               	movwf	(_error2counter+1)^0,c	;volatile
  2627   000CC8  0E00               	movlw	0
  2628   000CCA  6E49               	movwf	(_error2counter+2)^0,c	;volatile
  2629   000CCC  0E00               	movlw	0
  2630   000CCE  6E4A               	movwf	(_error2counter+3)^0,c	;volatile
  2631                           
  2632                           ;main.c: 556: error3counter = 30;
  2633   000CD0  0E1E               	movlw	30
  2634   000CD2  6FBA               	movwf	_error3counter& (0+255),b	;volatile
  2635   000CD4  0E00               	movlw	0
  2636   000CD6  6FBB               	movwf	(_error3counter+1)& (0+255),b	;volatile
  2637   000CD8  0E00               	movlw	0
  2638   000CDA  6FBC               	movwf	(_error3counter+2)& (0+255),b	;volatile
  2639   000CDC  0E00               	movlw	0
  2640   000CDE  6FBD               	movwf	(_error3counter+3)& (0+255),b	;volatile
  2641                           
  2642                           ;main.c: 557: error4counter = 30;
  2643   000CE0  0E1E               	movlw	30
  2644   000CE2  6FB6               	movwf	_error4counter& (0+255),b	;volatile
  2645   000CE4  0E00               	movlw	0
  2646   000CE6  6FB7               	movwf	(_error4counter+1)& (0+255),b	;volatile
  2647   000CE8  0E00               	movlw	0
  2648   000CEA  6FB8               	movwf	(_error4counter+2)& (0+255),b	;volatile
  2649   000CEC  0E00               	movlw	0
  2650   000CEE  6FB9               	movwf	(_error4counter+3)& (0+255),b	;volatile
  2651                           
  2652                           ;main.c: 558: error5counter = 30;
  2653   000CF0  0E1E               	movlw	30
  2654   000CF2  6FB2               	movwf	_error5counter& (0+255),b	;volatile
  2655   000CF4  0E00               	movlw	0
  2656   000CF6  6FB3               	movwf	(_error5counter+1)& (0+255),b	;volatile
  2657   000CF8  0E00               	movlw	0
  2658   000CFA  6FB4               	movwf	(_error5counter+2)& (0+255),b	;volatile
  2659   000CFC  0E00               	movlw	0
  2660   000CFE  6FB5               	movwf	(_error5counter+3)& (0+255),b	;volatile
  2661                           
  2662                           ;main.c: 559: error6counter = 30;
  2663   000D00  0E1E               	movlw	30
  2664   000D02  6FAE               	movwf	_error6counter& (0+255),b	;volatile
  2665   000D04  0E00               	movlw	0
  2666   000D06  6FAF               	movwf	(_error6counter+1)& (0+255),b	;volatile
  2667   000D08  0E00               	movlw	0
  2668   000D0A  6FB0               	movwf	(_error6counter+2)& (0+255),b	;volatile
  2669   000D0C  0E00               	movlw	0
  2670   000D0E  6FB1               	movwf	(_error6counter+3)& (0+255),b	;volatile
  2671   000D10                     l6038:
  2672                           
  2673                           ;main.c: 561: };main.c: 566: if(PORTDbits.RD1 == 0 && PORTDbits.RD2 == 1 && lifter == st
      +                          andby)
  2674   000D10  A283               	btfss	131,1,c	;volatile
  2675   000D12  A483               	btfss	131,2,c	;volatile
  2676   000D14  D140               	goto	l332
  2677   000D16  0100               	movlb	0	; () banked
  2678   000D18  5187               	movf	_lifter& (0+255),w,b
  2679   000D1A  A4D8               	btfss	status,2,c
  2680   000D1C  D13C               	goto	l332
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;main.c: 567: {;main.c: 568: if(PORTDbits.RD1 ==0)
  2684   000D1E  B283               	btfsc	131,1,c	;volatile
  2685   000D20  D145               	goto	l6160
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;main.c: 569: {;main.c: 570: LATBbits.LATB3 = 1;
  2689   000D22  868A               	bsf	138,3,c	;volatile
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;main.c: 572: error3counter = 30;
  2693   000D24  0E1E               	movlw	30
  2694   000D26  6FBA               	movwf	_error3counter& (0+255),b	;volatile
  2695   000D28  0E00               	movlw	0
  2696   000D2A  6FBB               	movwf	(_error3counter+1)& (0+255),b	;volatile
  2697   000D2C  0E00               	movlw	0
  2698   000D2E  6FBC               	movwf	(_error3counter+2)& (0+255),b	;volatile
  2699   000D30  0E00               	movlw	0
  2700   000D32  6FBD               	movwf	(_error3counter+3)& (0+255),b	;volatile
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;main.c: 574: if(capin == 0)
  2704   000D34  0101               	movlb	1	; () banked
  2705   000D36  5111               	movf	main@capin& (0+255),w,b
  2706   000D38  1112               	iorwf	(main@capin+1)& (0+255),w,b
  2707   000D3A  A4D8               	btfss	status,2,c
  2708   000D3C  D004               	goto	l6054
  2709                           
  2710                           ; BSR set to: 1
  2711                           ;main.c: 575: {;main.c: 576: cap_success = 1;
  2712   000D3E  0E00               	movlw	0
  2713   000D40  6F01               	movwf	(main@cap_success+1)& (0+255),b
  2714   000D42  0E01               	movlw	1
  2715   000D44  6F00               	movwf	main@cap_success& (0+255),b
  2716   000D46                     l6054:
  2717                           
  2718                           ; BSR set to: 1
  2719                           ;main.c: 577: };main.c: 579: if(cap_success==1)
  2720   000D46  0500               	decf	main@cap_success& (0+255),w,b
  2721   000D48  1101               	iorwf	(main@cap_success+1)& (0+255),w,b
  2722   000D4A  A4D8               	btfss	status,2,c
  2723   000D4C  D0A7               	goto	l6090
  2724                           
  2725                           ; BSR set to: 1
  2726                           ;main.c: 580: {;main.c: 581: number++;
  2727   000D4E  0E01               	movlw	1
  2728   000D50  0100               	movlb	0	; () banked
  2729   000D52  27D5               	addwf	_number& (0+255),f,b	;volatile
  2730   000D54  0E00               	movlw	0
  2731   000D56  23D6               	addwfc	(_number+1)& (0+255),f,b	;volatile
  2732   000D58  23D7               	addwfc	(_number+2)& (0+255),f,b	;volatile
  2733   000D5A  23D8               	addwfc	(_number+3)& (0+255),f,b	;volatile
  2734                           
  2735                           ;main.c: 582: TotalNumL++;
  2736   000D5C  0E01               	movlw	1
  2737   000D5E  27D1               	addwf	_TotalNumL& (0+255),f,b	;volatile
  2738   000D60  0E00               	movlw	0
  2739   000D62  23D2               	addwfc	(_TotalNumL+1)& (0+255),f,b	;volatile
  2740   000D64  23D3               	addwfc	(_TotalNumL+2)& (0+255),f,b	;volatile
  2741   000D66  23D4               	addwfc	(_TotalNumL+3)& (0+255),f,b	;volatile
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;main.c: 583: digit=1;
  2745   000D68  0E00               	movlw	0
  2746   000D6A  6E54               	movwf	(_digit+1)^0,c	;volatile
  2747   000D6C  0E01               	movlw	1
  2748   000D6E  6E53               	movwf	_digit^0,c	;volatile
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;main.c: 584: cap_success=0;
  2752   000D70  0E00               	movlw	0
  2753   000D72  0101               	movlb	1	; () banked
  2754   000D74  6F01               	movwf	(main@cap_success+1)& (0+255),b
  2755   000D76  0E00               	movlw	0
  2756   000D78  6F00               	movwf	main@cap_success& (0+255),b
  2757                           
  2758                           ; BSR set to: 1
  2759                           ;main.c: 585: capin = 2;
  2760   000D7A  0E00               	movlw	0
  2761   000D7C  6F12               	movwf	(main@capin+1)& (0+255),b
  2762   000D7E  0E02               	movlw	2
  2763   000D80  6F11               	movwf	main@capin& (0+255),b
  2764                           
  2765                           ; BSR set to: 1
  2766                           ;main.c: 587: if(TotalNumL > 9999)
  2767   000D82  0100               	movlb	0	; () banked
  2768   000D84  BFD4               	btfsc	(_TotalNumL+3)& (0+255),7,b	;volatile
  2769   000D86  D017               	goto	l6070
  2770   000D88  51D4               	movf	(_TotalNumL+3)& (0+255),w,b	;volatile
  2771   000D8A  11D3               	iorwf	(_TotalNumL+2)& (0+255),w,b	;volatile
  2772   000D8C  E106               	bnz	u5250
  2773   000D8E  0E10               	movlw	16
  2774   000D90  5DD1               	subwf	_TotalNumL& (0+255),w,b	;volatile
  2775   000D92  0E27               	movlw	39
  2776   000D94  59D2               	subwfb	(_TotalNumL+1)& (0+255),w,b	;volatile
  2777   000D96  A0D8               	btfss	status,0,c
  2778   000D98  D00E               	goto	l6070
  2779   000D9A                     u5250:
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;main.c: 588: {;main.c: 589: TotalNumL = 0;
  2783   000D9A  0E00               	movlw	0
  2784   000D9C  6FD1               	movwf	_TotalNumL& (0+255),b	;volatile
  2785   000D9E  0E00               	movlw	0
  2786   000DA0  6FD2               	movwf	(_TotalNumL+1)& (0+255),b	;volatile
  2787   000DA2  0E00               	movlw	0
  2788   000DA4  6FD3               	movwf	(_TotalNumL+2)& (0+255),b	;volatile
  2789   000DA6  0E00               	movlw	0
  2790   000DA8  6FD4               	movwf	(_TotalNumL+3)& (0+255),b	;volatile
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;main.c: 590: TotalNumH++;
  2794   000DAA  0E01               	movlw	1
  2795   000DAC  27CD               	addwf	_TotalNumH& (0+255),f,b	;volatile
  2796   000DAE  0E00               	movlw	0
  2797   000DB0  23CE               	addwfc	(_TotalNumH+1)& (0+255),f,b	;volatile
  2798   000DB2  23CF               	addwfc	(_TotalNumH+2)& (0+255),f,b	;volatile
  2799   000DB4  23D0               	addwfc	(_TotalNumH+3)& (0+255),f,b	;volatile
  2800   000DB6                     l6070:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;main.c: 591: };main.c: 593: INTCONbits.GIE=0;
  2804   000DB6  9EF2               	bcf	242,7,c	;volatile
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;main.c: 595: TempNum = TotalNumL&0x00FF;
  2808   000DB8  51D1               	movf	_TotalNumL& (0+255),w,b	;volatile
  2809   000DBA  6F84               	movwf	_TempNum& (0+255),b	;volatile
  2810   000DBC  6B85               	clrf	(_TempNum+1)& (0+255),b	;volatile
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;main.c: 596: write_i2c(TotalNum_LowL, TempNum);
  2814   000DBE  C0D9  F0A4         	movff	_TotalNum_LowL,write_i2c@address	;volatile
  2815   000DC2  C0DA  F0A5         	movff	_TotalNum_LowL+1,write_i2c@address+1	;volatile
  2816   000DC6  0E00               	movlw	0
  2817   000DC8  BFA5               	btfsc	(write_i2c@address+1)& (0+255),7,b
  2818   000DCA  0EFF               	movlw	-1
  2819   000DCC  6FA6               	movwf	(write_i2c@address+2)& (0+255),b
  2820   000DCE  6FA7               	movwf	(write_i2c@address+3)& (0+255),b
  2821   000DD0  C084  F0A8         	movff	_TempNum,write_i2c@data	;volatile
  2822   000DD4  C085  F0A9         	movff	_TempNum+1,write_i2c@data+1	;volatile
  2823   000DD8  EC70  F011         	call	_write_i2c	;wreg free
  2824                           
  2825                           ;main.c: 597: TempNum = (TotalNumL/0x100)&0x00FF;
  2826   000DDC  C0D1  F096         	movff	_TotalNumL,___aldiv@dividend	;volatile
  2827   000DE0  C0D2  F097         	movff	_TotalNumL+1,___aldiv@dividend+1	;volatile
  2828   000DE4  C0D3  F098         	movff	_TotalNumL+2,___aldiv@dividend+2	;volatile
  2829   000DE8  C0D4  F099         	movff	_TotalNumL+3,___aldiv@dividend+3	;volatile
  2830   000DEC  0E00               	movlw	0
  2831   000DEE  0100               	movlb	0	; () banked
  2832   000DF0  6F9A               	movwf	___aldiv@divisor& (0+255),b
  2833   000DF2  0E01               	movlw	1
  2834   000DF4  6F9B               	movwf	(___aldiv@divisor+1)& (0+255),b
  2835   000DF6  0E00               	movlw	0
  2836   000DF8  6F9C               	movwf	(___aldiv@divisor+2)& (0+255),b
  2837   000DFA  0E00               	movlw	0
  2838   000DFC  6F9D               	movwf	(___aldiv@divisor+3)& (0+255),b
  2839   000DFE  EC77  F00E         	call	___aldiv	;wreg free
  2840   000E02  0100               	movlb	0	; () banked
  2841   000E04  5196               	movf	?___aldiv& (0+255),w,b
  2842   000E06  6F84               	movwf	_TempNum& (0+255),b	;volatile
  2843   000E08  6B85               	clrf	(_TempNum+1)& (0+255),b	;volatile
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;main.c: 598: write_i2c(TotalNum_LowH, TempNum);
  2847   000E0A  C0DB  F0A4         	movff	_TotalNum_LowH,write_i2c@address	;volatile
  2848   000E0E  C0DC  F0A5         	movff	_TotalNum_LowH+1,write_i2c@address+1	;volatile
  2849   000E12  0E00               	movlw	0
  2850   000E14  BFA5               	btfsc	(write_i2c@address+1)& (0+255),7,b
  2851   000E16  0EFF               	movlw	-1
  2852   000E18  6FA6               	movwf	(write_i2c@address+2)& (0+255),b
  2853   000E1A  6FA7               	movwf	(write_i2c@address+3)& (0+255),b
  2854   000E1C  C084  F0A8         	movff	_TempNum,write_i2c@data	;volatile
  2855   000E20  C085  F0A9         	movff	_TempNum+1,write_i2c@data+1	;volatile
  2856   000E24  EC70  F011         	call	_write_i2c	;wreg free
  2857                           
  2858                           ;main.c: 600: TempNum = TotalNumH&0x00FF;
  2859   000E28  0100               	movlb	0	; () banked
  2860   000E2A  51CD               	movf	_TotalNumH& (0+255),w,b	;volatile
  2861   000E2C  6F84               	movwf	_TempNum& (0+255),b	;volatile
  2862   000E2E  6B85               	clrf	(_TempNum+1)& (0+255),b	;volatile
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;main.c: 601: write_i2c(TotalNum_HighL, TempNum);
  2866   000E30  C0DD  F0A4         	movff	_TotalNum_HighL,write_i2c@address	;volatile
  2867   000E34  C0DE  F0A5         	movff	_TotalNum_HighL+1,write_i2c@address+1	;volatile
  2868   000E38  0E00               	movlw	0
  2869   000E3A  BFA5               	btfsc	(write_i2c@address+1)& (0+255),7,b
  2870   000E3C  0EFF               	movlw	-1
  2871   000E3E  6FA6               	movwf	(write_i2c@address+2)& (0+255),b
  2872   000E40  6FA7               	movwf	(write_i2c@address+3)& (0+255),b
  2873   000E42  C084  F0A8         	movff	_TempNum,write_i2c@data	;volatile
  2874   000E46  C085  F0A9         	movff	_TempNum+1,write_i2c@data+1	;volatile
  2875   000E4A  EC70  F011         	call	_write_i2c	;wreg free
  2876                           
  2877                           ;main.c: 602: TempNum = (TotalNumH/0x100)&0x00FF;
  2878   000E4E  C0CD  F096         	movff	_TotalNumH,___aldiv@dividend	;volatile
  2879   000E52  C0CE  F097         	movff	_TotalNumH+1,___aldiv@dividend+1	;volatile
  2880   000E56  C0CF  F098         	movff	_TotalNumH+2,___aldiv@dividend+2	;volatile
  2881   000E5A  C0D0  F099         	movff	_TotalNumH+3,___aldiv@dividend+3	;volatile
  2882   000E5E  0E00               	movlw	0
  2883   000E60  0100               	movlb	0	; () banked
  2884   000E62  6F9A               	movwf	___aldiv@divisor& (0+255),b
  2885   000E64  0E01               	movlw	1
  2886   000E66  6F9B               	movwf	(___aldiv@divisor+1)& (0+255),b
  2887   000E68  0E00               	movlw	0
  2888   000E6A  6F9C               	movwf	(___aldiv@divisor+2)& (0+255),b
  2889   000E6C  0E00               	movlw	0
  2890   000E6E  6F9D               	movwf	(___aldiv@divisor+3)& (0+255),b
  2891   000E70  EC77  F00E         	call	___aldiv	;wreg free
  2892   000E74  0100               	movlb	0	; () banked
  2893   000E76  5196               	movf	?___aldiv& (0+255),w,b
  2894   000E78  6F84               	movwf	_TempNum& (0+255),b	;volatile
  2895   000E7A  6B85               	clrf	(_TempNum+1)& (0+255),b	;volatile
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;main.c: 603: write_i2c(TotalNum_HighH, TempNum);
  2899   000E7C  C0DF  F0A4         	movff	_TotalNum_HighH,write_i2c@address	;volatile
  2900   000E80  C0E0  F0A5         	movff	_TotalNum_HighH+1,write_i2c@address+1	;volatile
  2901   000E84  0E00               	movlw	0
  2902   000E86  BFA5               	btfsc	(write_i2c@address+1)& (0+255),7,b
  2903   000E88  0EFF               	movlw	-1
  2904   000E8A  6FA6               	movwf	(write_i2c@address+2)& (0+255),b
  2905   000E8C  6FA7               	movwf	(write_i2c@address+3)& (0+255),b
  2906   000E8E  C084  F0A8         	movff	_TempNum,write_i2c@data	;volatile
  2907   000E92  C085  F0A9         	movff	_TempNum+1,write_i2c@data+1	;volatile
  2908   000E96  EC70  F011         	call	_write_i2c	;wreg free
  2909                           
  2910                           ;main.c: 605: INTCONbits.GIE=1;
  2911   000E9A  8EF2               	bsf	242,7,c	;volatile
  2912   000E9C                     l6090:
  2913                           
  2914                           ;main.c: 609: if(PORTDbits.RD3 == 0)
  2915   000E9C  A683               	btfss	131,3,c	;volatile
  2916                           
  2917                           ;main.c: 610: {;main.c: 611: Feeder_Rotate1();
  2918   000E9E  EC1A  F013         	call	_Feeder_Rotate1	;wreg free
  2919                           
  2920                           ;main.c: 612: };main.c: 614: if(PORTEbits.RE6 == 0)
  2921   000EA2  BC84               	btfsc	132,6,c	;volatile
  2922   000EA4  D023               	goto	l6114
  2923                           
  2924                           ;main.c: 615: {;main.c: 616: for (int counter=1; counter<=5; counter++){
  2925   000EA6  0E00               	movlw	0
  2926   000EA8  0101               	movlb	1	; () banked
  2927   000EAA  6F0B               	movwf	(main@counter_1263+1)& (0+255),b
  2928   000EAC  0E01               	movlw	1
  2929   000EAE  6F0A               	movwf	main@counter_1263& (0+255),b
  2930   000EB0                     l6098:
  2931                           
  2932                           ; BSR set to: 1
  2933   000EB0  BF0B               	btfsc	(main@counter_1263+1)& (0+255),7,b
  2934   000EB2  D006               	goto	l6102
  2935   000EB4  510B               	movf	(main@counter_1263+1)& (0+255),w,b
  2936   000EB6  E10F               	bnz	l6108
  2937   000EB8  0E06               	movlw	6
  2938   000EBA  5D0A               	subwf	main@counter_1263& (0+255),w,b
  2939   000EBC  B0D8               	btfsc	status,0,c
  2940   000EBE  D00B               	goto	l6108
  2941   000EC0                     l6102:
  2942                           
  2943                           ; BSR set to: 1
  2944                           ;main.c: 617: DelayTime_1ms(1000);
  2945   000EC0  0E03               	movlw	3
  2946   000EC2  0100               	movlb	0	; () banked
  2947   000EC4  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  2948   000EC6  0EE8               	movlw	232
  2949   000EC8  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  2950   000ECA  EC04  F012         	call	_DelayTime_1ms	;wreg free
  2951   000ECE  0101               	movlb	1	; () banked
  2952   000ED0  4B0A               	infsnz	main@counter_1263& (0+255),f,b
  2953   000ED2  2B0B               	incf	(main@counter_1263+1)& (0+255),f,b
  2954   000ED4  D7ED               	goto	l6098
  2955   000ED6                     l6108:
  2956                           
  2957                           ; BSR set to: 1
  2958                           ;main.c: 618: };main.c: 619: Feeder_Rotate2();
  2959   000ED6  EC17  F013         	call	_Feeder_Rotate2	;wreg free
  2960                           
  2961                           ;main.c: 620: DelayTime_1ms(300);
  2962   000EDA  0E01               	movlw	1
  2963   000EDC  0100               	movlb	0	; () banked
  2964   000EDE  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  2965   000EE0  0E2C               	movlw	44
  2966   000EE2  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  2967   000EE4  EC04  F012         	call	_DelayTime_1ms	;wreg free
  2968                           
  2969                           ;main.c: 621: Feeder_Stop();
  2970   000EE8  EC14  F013         	call	_Feeder_Stop	;wreg free
  2971   000EEC                     l6114:
  2972                           
  2973                           ;main.c: 622: };main.c: 624: if((PORTBbits.RB0 == 1) && (PORTDbits.RD3 ==1) && (Busy == 
      +                          0))
  2974   000EEC  B081               	btfsc	129,0,c	;volatile
  2975   000EEE  A683               	btfss	131,3,c	;volatile
  2976   000EF0  D010               	goto	l6126
  2977   000EF2  0100               	movlb	0	; () banked
  2978   000EF4  518A               	movf	_Busy& (0+255),w,b
  2979   000EF6  A4D8               	btfss	status,2,c
  2980   000EF8  D00C               	goto	l6126
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;main.c: 625: {;main.c: 626: _delay((unsigned long)((50)*(8000000/4000.0)));
  2984   000EFA  0E82               	movlw	130
  2985   000EFC  0100               	movlb	0	; () banked
  2986   000EFE  6FAA               	movwf	??_main& (0+255),b
  2987   000F00  0EDD               	movlw	221
  2988   000F02                     u5997:
  2989   000F02  2EE8               	decfsz	wreg,f,c
  2990   000F04  D7FE               	bra	u5997
  2991   000F06  2FAA               	decfsz	??_main& (0+255),f,b
  2992   000F08  D7FC               	bra	u5997
  2993   000F0A  D000               	nop2	
  2994                           
  2995                           ;main.c: 627: if(PORTBbits.RB0 == 1)
  2996   000F0C  B081               	btfsc	129,0,c	;volatile
  2997                           
  2998                           ;main.c: 628: {;main.c: 629: Feeder_Stop();
  2999   000F0E  EC14  F013         	call	_Feeder_Stop	;wreg free
  3000   000F12                     l6126:
  3001                           
  3002                           ;main.c: 630: };main.c: 631: };main.c: 633: if(error3counter <= 0)
  3003   000F12  0100               	movlb	0	; () banked
  3004   000F14  BFBD               	btfsc	(_error3counter+3)& (0+255),7,b	;volatile
  3005   000F16  D007               	goto	u5330
  3006   000F18  51BD               	movf	(_error3counter+3)& (0+255),w,b	;volatile
  3007   000F1A  11BC               	iorwf	(_error3counter+2)& (0+255),w,b	;volatile
  3008   000F1C  11BB               	iorwf	(_error3counter+1)& (0+255),w,b	;volatile
  3009   000F1E  E107               	bnz	l6130
  3010   000F20  05BA               	decf	_error3counter& (0+255),w,b	;volatile
  3011   000F22  B0D8               	btfsc	status,0,c
  3012   000F24  D004               	goto	l6130
  3013   000F26                     u5330:
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;main.c: 634: {;main.c: 635: warning = 1;
  3017   000F26  0E01               	movlw	1
  3018   000F28  6E41               	movwf	_warning^0,c	;volatile
  3019                           
  3020                           ;main.c: 636: warning_number = '3';
  3021   000F2A  0E33               	movlw	51
  3022   000F2C  6FCC               	movwf	_warning_number& (0+255),b	;volatile
  3023   000F2E                     l6130:
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;main.c: 637: };main.c: 639: LATBbits.LATB3 = 1;
  3027   000F2E  868A               	bsf	138,3,c	;volatile
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;main.c: 641: DelayTime_1ms(100);
  3031   000F30  0E00               	movlw	0
  3032   000F32  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  3033   000F34  0E64               	movlw	100
  3034   000F36  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  3035   000F38  EC04  F012         	call	_DelayTime_1ms	;wreg free
  3036                           
  3037                           ;main.c: 643: LATEbits.LATE5 = 1;
  3038   000F3C  8A8D               	bsf	141,5,c	;volatile
  3039                           
  3040                           ;main.c: 645: DelayTime_10ms(sol_activation_on_time);
  3041   000F3E  C113  F08C         	movff	main@sol_activation_on_time,DelayTime_10ms@time
  3042   000F42  C114  F08D         	movff	main@sol_activation_on_time+1,DelayTime_10ms@time+1
  3043   000F46  EC18  F012         	call	_DelayTime_10ms	;wreg free
  3044                           
  3045                           ;main.c: 647: LATEbits.LATE5 = 0;
  3046   000F4A  9A8D               	bcf	141,5,c	;volatile
  3047                           
  3048                           ;main.c: 649: DelayTime_10ms(sol_activation_off_time);
  3049   000F4C  C115  F08C         	movff	main@sol_activation_off_time,DelayTime_10ms@time
  3050   000F50  C116  F08D         	movff	main@sol_activation_off_time+1,DelayTime_10ms@time+1
  3051   000F54  EC18  F012         	call	_DelayTime_10ms	;wreg free
  3052                           
  3053                           ;main.c: 651: } while((PORTDbits.RD1 == 0) && (PORTDbits.RD2 == 1) &&(lifter == standby)
      +                          );
  3054   000F58  A283               	btfss	131,1,c	;volatile
  3055   000F5A  A483               	btfss	131,2,c	;volatile
  3056   000F5C  D004               	goto	u5360
  3057   000F5E  0100               	movlb	0	; () banked
  3058   000F60  5187               	movf	_lifter& (0+255),w,b
  3059   000F62  B4D8               	btfsc	status,2,c
  3060   000F64  D79B               	goto	l6090
  3061   000F66                     u5360:
  3062                           
  3063                           ;main.c: 653: if(PORTDbits.RD1 == 1)
  3064   000F66  A283               	btfss	131,1,c	;volatile
  3065   000F68  D014               	goto	l6154
  3066                           
  3067                           ;main.c: 654: {;main.c: 655: capin = 1;
  3068   000F6A  0E00               	movlw	0
  3069   000F6C  0101               	movlb	1	; () banked
  3070   000F6E  6F12               	movwf	(main@capin+1)& (0+255),b
  3071   000F70  0E01               	movlw	1
  3072   000F72  6F11               	movwf	main@capin& (0+255),b
  3073                           
  3074                           ; BSR set to: 1
  3075                           ;main.c: 657: if(warning_number == '3')
  3076   000F74  0E33               	movlw	51
  3077   000F76  0100               	movlb	0	; () banked
  3078   000F78  19CC               	xorwf	_warning_number& (0+255),w,b	;volatile
  3079   000F7A  A4D8               	btfss	status,2,c
  3080   000F7C  D00A               	goto	l6154
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;main.c: 658: {;main.c: 659: warning = 0;
  3084   000F7E  0E00               	movlw	0
  3085   000F80  6E41               	movwf	_warning^0,c	;volatile
  3086                           
  3087                           ;main.c: 660: error3counter = 30;
  3088   000F82  0E1E               	movlw	30
  3089   000F84  6FBA               	movwf	_error3counter& (0+255),b	;volatile
  3090   000F86  0E00               	movlw	0
  3091   000F88  6FBB               	movwf	(_error3counter+1)& (0+255),b	;volatile
  3092   000F8A  0E00               	movlw	0
  3093   000F8C  6FBC               	movwf	(_error3counter+2)& (0+255),b	;volatile
  3094   000F8E  0E00               	movlw	0
  3095   000F90  6FBD               	movwf	(_error3counter+3)& (0+255),b	;volatile
  3096   000F92                     l6154:
  3097                           
  3098                           ;main.c: 661: };main.c: 662: };main.c: 664: LATBbits.LATB3 = 0;
  3099   000F92  968A               	bcf	138,3,c	;volatile
  3100   000F94  D00B               	goto	l6160
  3101   000F96                     l332:
  3102                           
  3103                           ;main.c: 667: else if(PORTDbits.RD1 == 1 && lifter == standby)
  3104   000F96  A283               	btfss	131,1,c	;volatile
  3105   000F98  D009               	goto	l6160
  3106   000F9A  0100               	movlb	0	; () banked
  3107   000F9C  5187               	movf	_lifter& (0+255),w,b
  3108   000F9E  A4D8               	btfss	status,2,c
  3109   000FA0  D005               	goto	l6160
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;main.c: 668: {;main.c: 669: capin = 1;
  3113   000FA2  0E00               	movlw	0
  3114   000FA4  0101               	movlb	1	; () banked
  3115   000FA6  6F12               	movwf	(main@capin+1)& (0+255),b
  3116   000FA8  0E01               	movlw	1
  3117   000FAA  6F11               	movwf	main@capin& (0+255),b
  3118   000FAC                     l6160:
  3119                           
  3120                           ;main.c: 670: };main.c: 676: if(Serial_Flag == 1)
  3121   000FAC  0100               	movlb	0	; () banked
  3122   000FAE  058B               	decf	_Serial_Flag& (0+255),w,b
  3123   000FB0  B4D8               	btfsc	status,2,c
  3124   000FB2  D16C               	goto	l6344
  3125   000FB4  D185               	goto	l6348
  3126   000FB6                     l6164:
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;main.c: 681: if(Busy == 0)
  3130   000FB6  518A               	movf	_Busy& (0+255),w,b
  3131   000FB8  A4D8               	btfss	status,2,c
  3132   000FBA  D17E               	goto	l6346
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;main.c: 682: {;main.c: 683: Busy = 1;
  3136   000FBC  0E01               	movlw	1
  3137   000FBE  6F8A               	movwf	_Busy& (0+255),b
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;main.c: 684: if(Serial_Buffer[2]==0xF1)
  3141   000FC0  0EF1               	movlw	241
  3142   000FC2  1972               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  3143   000FC4  A4D8               	btfss	status,2,c
  3144   000FC6  D00E               	goto	l6180
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;main.c: 685: {;main.c: 686: Lifter_Use = 1;
  3148   000FC8  0E01               	movlw	1
  3149   000FCA  6F86               	movwf	_Lifter_Use& (0+255),b
  3150                           
  3151                           ;main.c: 687: start_capping = 1;
  3152   000FCC  0E01               	movlw	1
  3153   000FCE  0101               	movlb	1	; () banked
  3154   000FD0  6F17               	movwf	main@start_capping& (0+255),b
  3155                           
  3156                           ; BSR set to: 1
  3157                           ;main.c: 688: if ((PORTDbits.RD2) && (start_capping == 1) && (error == 0))
  3158   000FD2  A483               	btfss	131,2,c	;volatile
  3159   000FD4  D007               	goto	l6180
  3160                           
  3161                           ; BSR set to: 1
  3162   000FD6  0517               	decf	main@start_capping& (0+255),w,b
  3163   000FD8  A4D8               	btfss	status,2,c
  3164   000FDA  D004               	goto	l6180
  3165                           
  3166                           ; BSR set to: 1
  3167   000FDC  0100               	movlb	0	; () banked
  3168   000FDE  5188               	movf	_error& (0+255),w,b	;volatile
  3169   000FE0  B4D8               	btfsc	status,2,c
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;main.c: 689: {;main.c: 690: LATBbits.LATB3 = 1;
  3173   000FE2  868A               	bsf	138,3,c	;volatile
  3174   000FE4                     l6180:
  3175                           
  3176                           ;main.c: 691: };main.c: 692: };main.c: 693: Busy = 0;
  3177   000FE4  0E00               	movlw	0
  3178   000FE6  0100               	movlb	0	; () banked
  3179   000FE8  6F8A               	movwf	_Busy& (0+255),b
  3180   000FEA  D166               	goto	l6346
  3181   000FEC                     l6182:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;main.c: 698: if(Busy == 0)
  3185   000FEC  518A               	movf	_Busy& (0+255),w,b
  3186   000FEE  A4D8               	btfss	status,2,c
  3187   000FF0  D163               	goto	l6346
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;main.c: 699: {;main.c: 700: Busy = 1;
  3191   000FF2  0E01               	movlw	1
  3192   000FF4  6F8A               	movwf	_Busy& (0+255),b
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;main.c: 701: sol_on_time = Serial_Buffer[2];
  3196   000FF6  C072  F11D         	movff	_Serial_Buffer+2,main@sol_on_time	;volatile
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;main.c: 702: INTCONbits.GIE=0;
  3200   000FFA  9EF2               	bcf	242,7,c	;volatile
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;main.c: 703: write_i2c(0x0010,sol_on_time);
  3204   000FFC  0E10               	movlw	16
  3205   000FFE  6FA4               	movwf	write_i2c@address& (0+255),b
  3206   001000  0E00               	movlw	0
  3207   001002  6FA5               	movwf	(write_i2c@address+1)& (0+255),b
  3208   001004  0E00               	movlw	0
  3209   001006  6FA6               	movwf	(write_i2c@address+2)& (0+255),b
  3210   001008  0E00               	movlw	0
  3211   00100A  6FA7               	movwf	(write_i2c@address+3)& (0+255),b
  3212   00100C  C11D  F0A8         	movff	main@sol_on_time,write_i2c@data	;volatile
  3213   001010  6BA9               	clrf	(write_i2c@data+1)& (0+255),b
  3214   001012  EC70  F011         	call	_write_i2c	;wreg free
  3215                           
  3216                           ;main.c: 704: INTCONbits.GIE=1;
  3217   001016  8EF2               	bsf	242,7,c	;volatile
  3218                           
  3219                           ;main.c: 705: sol_activation_on_time = sol_on_time;
  3220   001018  C11D  F113         	movff	main@sol_on_time,main@sol_activation_on_time	;volatile
  3221   00101C  0101               	movlb	1	; () banked
  3222   00101E  6B14               	clrf	(main@sol_activation_on_time+1)& (0+255),b
  3223                           
  3224                           ; BSR set to: 1
  3225                           ;main.c: 706: Serial_Buffer_Out[1] = sol_activation_on_time ;
  3226   001020  C113  F061         	movff	main@sol_activation_on_time,_Serial_Buffer_Out+1
  3227   001024  D7DF               	goto	l6180
  3228   001026                     l6200:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;main.c: 712: if(Busy == 0)
  3232   001026  518A               	movf	_Busy& (0+255),w,b
  3233   001028  A4D8               	btfss	status,2,c
  3234   00102A  D146               	goto	l6346
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;main.c: 713: {;main.c: 714: Busy = 1;
  3238   00102C  0E01               	movlw	1
  3239   00102E  6F8A               	movwf	_Busy& (0+255),b
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;main.c: 715: sol_off_time = Serial_Buffer[2];
  3243   001030  C072  F11E         	movff	_Serial_Buffer+2,main@sol_off_time	;volatile
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;main.c: 716: INTCONbits.GIE=0;
  3247   001034  9EF2               	bcf	242,7,c	;volatile
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;main.c: 717: write_i2c(0x0020,sol_off_time);
  3251   001036  0E20               	movlw	32
  3252   001038  6FA4               	movwf	write_i2c@address& (0+255),b
  3253   00103A  0E00               	movlw	0
  3254   00103C  6FA5               	movwf	(write_i2c@address+1)& (0+255),b
  3255   00103E  0E00               	movlw	0
  3256   001040  6FA6               	movwf	(write_i2c@address+2)& (0+255),b
  3257   001042  0E00               	movlw	0
  3258   001044  6FA7               	movwf	(write_i2c@address+3)& (0+255),b
  3259   001046  C11E  F0A8         	movff	main@sol_off_time,write_i2c@data	;volatile
  3260   00104A  6BA9               	clrf	(write_i2c@data+1)& (0+255),b
  3261   00104C  EC70  F011         	call	_write_i2c	;wreg free
  3262                           
  3263                           ;main.c: 718: INTCONbits.GIE=1;
  3264   001050  8EF2               	bsf	242,7,c	;volatile
  3265                           
  3266                           ;main.c: 719: sol_activation_off_time = sol_off_time;
  3267   001052  C11E  F115         	movff	main@sol_off_time,main@sol_activation_off_time	;volatile
  3268   001056  0101               	movlb	1	; () banked
  3269   001058  6B16               	clrf	(main@sol_activation_off_time+1)& (0+255),b
  3270                           
  3271                           ; BSR set to: 1
  3272                           ;main.c: 720: Serial_Buffer_Out[2] = sol_activation_off_time ;
  3273   00105A  C115  F062         	movff	main@sol_activation_off_time,_Serial_Buffer_Out+2
  3274   00105E  D7C2               	goto	l6180
  3275   001060                     l6218:
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;main.c: 726: if(Busy == 0)
  3279   001060  518A               	movf	_Busy& (0+255),w,b
  3280   001062  A4D8               	btfss	status,2,c
  3281   001064  D129               	goto	l6346
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;main.c: 727: {;main.c: 728: Busy = 1;
  3285   001066  0E01               	movlw	1
  3286   001068  6F8A               	movwf	_Busy& (0+255),b
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;main.c: 729: lift_up_hold_time = Serial_Buffer[2];
  3290   00106A  C072  F120         	movff	_Serial_Buffer+2,main@lift_up_hold_time	;volatile
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;main.c: 730: INTCONbits.GIE=0;
  3294   00106E  9EF2               	bcf	242,7,c	;volatile
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;main.c: 731: write_i2c(0x0030,lift_up_hold_time);
  3298   001070  0E30               	movlw	48
  3299   001072  6FA4               	movwf	write_i2c@address& (0+255),b
  3300   001074  0E00               	movlw	0
  3301   001076  6FA5               	movwf	(write_i2c@address+1)& (0+255),b
  3302   001078  0E00               	movlw	0
  3303   00107A  6FA6               	movwf	(write_i2c@address+2)& (0+255),b
  3304   00107C  0E00               	movlw	0
  3305   00107E  6FA7               	movwf	(write_i2c@address+3)& (0+255),b
  3306   001080  C120  F0A8         	movff	main@lift_up_hold_time,write_i2c@data	;volatile
  3307   001084  6BA9               	clrf	(write_i2c@data+1)& (0+255),b
  3308   001086  EC70  F011         	call	_write_i2c	;wreg free
  3309                           
  3310                           ;main.c: 732: INTCONbits.GIE=1;
  3311   00108A  8EF2               	bsf	242,7,c	;volatile
  3312                           
  3313                           ;main.c: 733: LiftUpHoldCounter = lift_up_hold_time;
  3314   00108C  C120  F0C6         	movff	main@lift_up_hold_time,_LiftUpHoldCounter	;volatile
  3315   001090  0100               	movlb	0	; () banked
  3316   001092  6BC7               	clrf	(_LiftUpHoldCounter+1)& (0+255),b
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;main.c: 734: Serial_Buffer_Out[3] = LiftUpHoldCounter;
  3320   001094  C0C6  F063         	movff	_LiftUpHoldCounter,_Serial_Buffer_Out+3
  3321   001098  D7A5               	goto	l6180
  3322   00109A                     l6236:
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;main.c: 740: if(Busy == 0)
  3326   00109A  518A               	movf	_Busy& (0+255),w,b
  3327   00109C  A4D8               	btfss	status,2,c
  3328   00109E  D10C               	goto	l6346
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;main.c: 741: {;main.c: 742: Busy = 1;
  3332   0010A0  0E01               	movlw	1
  3333   0010A2  6F8A               	movwf	_Busy& (0+255),b
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;main.c: 743: lifter_up_position = Serial_Buffer[2];
  3337   0010A4  C072  F11F         	movff	_Serial_Buffer+2,main@lifter_up_position	;volatile
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;main.c: 744: INTCONbits.GIE=0;
  3341   0010A8  9EF2               	bcf	242,7,c	;volatile
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;main.c: 745: write_i2c(0x0040,lifter_up_position);
  3345   0010AA  0E40               	movlw	64
  3346   0010AC  6FA4               	movwf	write_i2c@address& (0+255),b
  3347   0010AE  0E00               	movlw	0
  3348   0010B0  6FA5               	movwf	(write_i2c@address+1)& (0+255),b
  3349   0010B2  0E00               	movlw	0
  3350   0010B4  6FA6               	movwf	(write_i2c@address+2)& (0+255),b
  3351   0010B6  0E00               	movlw	0
  3352   0010B8  6FA7               	movwf	(write_i2c@address+3)& (0+255),b
  3353   0010BA  C11F  F0A8         	movff	main@lifter_up_position,write_i2c@data	;volatile
  3354   0010BE  6BA9               	clrf	(write_i2c@data+1)& (0+255),b
  3355   0010C0  EC70  F011         	call	_write_i2c	;wreg free
  3356                           
  3357                           ;main.c: 746: INTCONbits.GIE=1;
  3358   0010C4  8EF2               	bsf	242,7,c	;volatile
  3359                           
  3360                           ;main.c: 747: lifter_stop_delay_time = lifter_up_position;
  3361   0010C6  C11F  F10F         	movff	main@lifter_up_position,main@lifter_stop_delay_time	;volatile
  3362   0010CA  0101               	movlb	1	; () banked
  3363   0010CC  6B10               	clrf	(main@lifter_stop_delay_time+1)& (0+255),b
  3364                           
  3365                           ; BSR set to: 1
  3366                           ;main.c: 748: Serial_Buffer_Out[4] = lifter_stop_delay_time;
  3367   0010CE  C10F  F064         	movff	main@lifter_stop_delay_time,_Serial_Buffer_Out+4
  3368   0010D2  D788               	goto	l6180
  3369   0010D4                     l6254:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;main.c: 754: if(Busy==0)
  3373   0010D4  518A               	movf	_Busy& (0+255),w,b
  3374   0010D6  A4D8               	btfss	status,2,c
  3375   0010D8  D0EF               	goto	l6346
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;main.c: 755: {;main.c: 756: if (Serial_Buffer[2] == 0x00)
  3379   0010DA  5172               	movf	(_Serial_Buffer+2)& (0+255),w,b
  3380   0010DC  A4D8               	btfss	status,2,c
  3381   0010DE  D067               	goto	l6294
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;main.c: 757: {;main.c: 758: if(startup==1)
  3385   0010E0  05C8               	decf	_startup& (0+255),w,b	;volatile
  3386   0010E2  11C9               	iorwf	(_startup+1)& (0+255),w,b	;volatile
  3387   0010E4  A4D8               	btfss	status,2,c
  3388   0010E6  D063               	goto	l6294
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;main.c: 759: {;main.c: 760: Busy = 1;
  3392   0010E8  0E01               	movlw	1
  3393   0010EA  6F8A               	movwf	_Busy& (0+255),b
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;main.c: 761: INTCONbits.GIE=0;
  3397   0010EC  9EF2               	bcf	242,7,c	;volatile
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;main.c: 762: sol_on_time = read_i2c(0x0010);
  3401   0010EE  0E10               	movlw	16
  3402   0010F0  6FA4               	movwf	read_i2c@address& (0+255),b
  3403   0010F2  0E00               	movlw	0
  3404   0010F4  6FA5               	movwf	(read_i2c@address+1)& (0+255),b
  3405   0010F6  0E00               	movlw	0
  3406   0010F8  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  3407   0010FA  0E00               	movlw	0
  3408   0010FC  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  3409   0010FE  ECA8  F010         	call	_read_i2c	;wreg free
  3410   001102  0100               	movlb	0	; () banked
  3411   001104  51A4               	movf	?_read_i2c& (0+255),w,b
  3412   001106  0101               	movlb	1	; () banked
  3413   001108  6F1D               	movwf	main@sol_on_time& (0+255),b	;volatile
  3414                           
  3415                           ; BSR set to: 1
  3416                           ;main.c: 763: sol_off_time = read_i2c(0x0020);
  3417   00110A  0E20               	movlw	32
  3418   00110C  0100               	movlb	0	; () banked
  3419   00110E  6FA4               	movwf	read_i2c@address& (0+255),b
  3420   001110  0E00               	movlw	0
  3421   001112  6FA5               	movwf	(read_i2c@address+1)& (0+255),b
  3422   001114  0E00               	movlw	0
  3423   001116  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  3424   001118  0E00               	movlw	0
  3425   00111A  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  3426   00111C  ECA8  F010         	call	_read_i2c	;wreg free
  3427   001120  0100               	movlb	0	; () banked
  3428   001122  51A4               	movf	?_read_i2c& (0+255),w,b
  3429   001124  0101               	movlb	1	; () banked
  3430   001126  6F1E               	movwf	main@sol_off_time& (0+255),b	;volatile
  3431                           
  3432                           ; BSR set to: 1
  3433                           ;main.c: 764: lift_up_hold_time = read_i2c(0x0030);
  3434   001128  0E30               	movlw	48
  3435   00112A  0100               	movlb	0	; () banked
  3436   00112C  6FA4               	movwf	read_i2c@address& (0+255),b
  3437   00112E  0E00               	movlw	0
  3438   001130  6FA5               	movwf	(read_i2c@address+1)& (0+255),b
  3439   001132  0E00               	movlw	0
  3440   001134  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  3441   001136  0E00               	movlw	0
  3442   001138  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  3443   00113A  ECA8  F010         	call	_read_i2c	;wreg free
  3444   00113E  0100               	movlb	0	; () banked
  3445   001140  51A4               	movf	?_read_i2c& (0+255),w,b
  3446   001142  0101               	movlb	1	; () banked
  3447   001144  6F20               	movwf	main@lift_up_hold_time& (0+255),b	;volatile
  3448                           
  3449                           ; BSR set to: 1
  3450                           ;main.c: 765: lifter_up_position = read_i2c(0x0040);
  3451   001146  0E40               	movlw	64
  3452   001148  0100               	movlb	0	; () banked
  3453   00114A  6FA4               	movwf	read_i2c@address& (0+255),b
  3454   00114C  0E00               	movlw	0
  3455   00114E  6FA5               	movwf	(read_i2c@address+1)& (0+255),b
  3456   001150  0E00               	movlw	0
  3457   001152  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  3458   001154  0E00               	movlw	0
  3459   001156  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  3460   001158  ECA8  F010         	call	_read_i2c	;wreg free
  3461   00115C  0100               	movlb	0	; () banked
  3462   00115E  51A4               	movf	?_read_i2c& (0+255),w,b
  3463   001160  0101               	movlb	1	; () banked
  3464   001162  6F1F               	movwf	main@lifter_up_position& (0+255),b	;volatile
  3465                           
  3466                           ;main.c: 767: Serial_Buffer_Out[0] = 0x51;
  3467   001164  0E51               	movlw	81
  3468   001166  0100               	movlb	0	; () banked
  3469   001168  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;main.c: 768: Serial_Buffer_Out[1] = sol_on_time;
  3473   00116A  C11D  F061         	movff	main@sol_on_time,_Serial_Buffer_Out+1	;volatile
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;main.c: 769: Serial_Buffer_Out[2] = sol_off_time;
  3477   00116E  C11E  F062         	movff	main@sol_off_time,_Serial_Buffer_Out+2	;volatile
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;main.c: 770: Serial_Buffer_Out[3] = lift_up_hold_time;
  3481   001172  C120  F063         	movff	main@lift_up_hold_time,_Serial_Buffer_Out+3	;volatile
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;main.c: 771: Serial_Buffer_Out[4] = lifter_up_position;
  3485   001176  C11F  F064         	movff	main@lifter_up_position,_Serial_Buffer_Out+4	;volatile
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;main.c: 773: DelayTime_1ms(100);
  3489   00117A  0E00               	movlw	0
  3490   00117C  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  3491   00117E  0E64               	movlw	100
  3492   001180  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  3493   001182  EC04  F012         	call	_DelayTime_1ms	;wreg free
  3494                           
  3495                           ;main.c: 775: for (i=0; i<5;i++)
  3496   001186  0E00               	movlw	0
  3497   001188  0101               	movlb	1	; () banked
  3498   00118A  6F1C               	movwf	main@i& (0+255),b
  3499   00118C                     l6284:
  3500                           
  3501                           ; BSR set to: 1
  3502   00118C  0E04               	movlw	4
  3503   00118E  651C               	cpfsgt	main@i& (0+255),b
  3504   001190  D001               	goto	l6288
  3505   001192  D00C               	goto	l372
  3506   001194                     l6288:
  3507                           
  3508                           ; BSR set to: 1
  3509                           ;main.c: 776: {;main.c: 777: Write1USART(Serial_Buffer_Out[i]);
  3510   001194  0E60               	movlw	low _Serial_Buffer_Out
  3511   001196  251C               	addwf	main@i& (0+255),w,b
  3512   001198  6ED9               	movwf	fsr2l,c
  3513   00119A  6ADA               	clrf	fsr2h,c
  3514   00119C  0E00               	movlw	high _Serial_Buffer_Out
  3515   00119E  22DA               	addwfc	fsr2h,f,c
  3516   0011A0  50DF               	movf	indf2,w,c
  3517   0011A2  ECDD  F012         	call	_Write1USART
  3518   0011A6  0101               	movlb	1	; () banked
  3519   0011A8  2B1C               	incf	main@i& (0+255),f,b
  3520   0011AA  D7F0               	goto	l6284
  3521   0011AC                     l372:
  3522                           
  3523                           ; BSR set to: 1
  3524                           ;main.c: 778: };main.c: 779: INTCONbits.GIE=1;
  3525   0011AC  8EF2               	bsf	242,7,c	;volatile
  3526   0011AE                     l6294:
  3527                           
  3528                           ;main.c: 781: };main.c: 782: };main.c: 783: flushOut();
  3529   0011AE  ECBF  F011         	call	_flushOut	;wreg free
  3530   0011B2  D718               	goto	l6180
  3531   0011B4                     l6298:
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;main.c: 789: if(Busy==0)
  3535   0011B4  518A               	movf	_Busy& (0+255),w,b
  3536   0011B6  A4D8               	btfss	status,2,c
  3537   0011B8  D07F               	goto	l6346
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;main.c: 790: {;main.c: 791: if (Serial_Buffer[2] == 0x00)
  3541   0011BA  5172               	movf	(_Serial_Buffer+2)& (0+255),w,b
  3542   0011BC  A4D8               	btfss	status,2,c
  3543   0011BE  D7F7               	goto	l6294
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;main.c: 792: {;main.c: 793: if(startup==1)
  3547   0011C0  05C8               	decf	_startup& (0+255),w,b	;volatile
  3548   0011C2  11C9               	iorwf	(_startup+1)& (0+255),w,b	;volatile
  3549   0011C4  A4D8               	btfss	status,2,c
  3550   0011C6  D7F3               	goto	l6294
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;main.c: 794: {;main.c: 795: Busy = 1;
  3554   0011C8  0E01               	movlw	1
  3555   0011CA  6F8A               	movwf	_Busy& (0+255),b
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;main.c: 796: INTCONbits.GIE=0;
  3559   0011CC  9EF2               	bcf	242,7,c	;volatile
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;main.c: 797: num1 = read_i2c(0x0090);
  3563   0011CE  0E90               	movlw	144
  3564   0011D0  6FA4               	movwf	read_i2c@address& (0+255),b
  3565   0011D2  0E00               	movlw	0
  3566   0011D4  6FA5               	movwf	(read_i2c@address+1)& (0+255),b
  3567   0011D6  0E00               	movlw	0
  3568   0011D8  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  3569   0011DA  0E00               	movlw	0
  3570   0011DC  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  3571   0011DE  ECA8  F010         	call	_read_i2c	;wreg free
  3572   0011E2  0100               	movlb	0	; () banked
  3573   0011E4  51A4               	movf	?_read_i2c& (0+255),w,b
  3574   0011E6  0101               	movlb	1	; () banked
  3575   0011E8  6F18               	movwf	main@num1& (0+255),b	;volatile
  3576                           
  3577                           ; BSR set to: 1
  3578                           ;main.c: 798: num2 = read_i2c(0x00A0);
  3579   0011EA  0EA0               	movlw	160
  3580   0011EC  0100               	movlb	0	; () banked
  3581   0011EE  6FA4               	movwf	read_i2c@address& (0+255),b
  3582   0011F0  0E00               	movlw	0
  3583   0011F2  6FA5               	movwf	(read_i2c@address+1)& (0+255),b
  3584   0011F4  0E00               	movlw	0
  3585   0011F6  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  3586   0011F8  0E00               	movlw	0
  3587   0011FA  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  3588   0011FC  ECA8  F010         	call	_read_i2c	;wreg free
  3589   001200  0100               	movlb	0	; () banked
  3590   001202  51A4               	movf	?_read_i2c& (0+255),w,b
  3591   001204  0101               	movlb	1	; () banked
  3592   001206  6F19               	movwf	main@num2& (0+255),b	;volatile
  3593                           
  3594                           ; BSR set to: 1
  3595                           ;main.c: 799: num3 = read_i2c(0x0070);
  3596   001208  0E70               	movlw	112
  3597   00120A  0100               	movlb	0	; () banked
  3598   00120C  6FA4               	movwf	read_i2c@address& (0+255),b
  3599   00120E  0E00               	movlw	0
  3600   001210  6FA5               	movwf	(read_i2c@address+1)& (0+255),b
  3601   001212  0E00               	movlw	0
  3602   001214  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  3603   001216  0E00               	movlw	0
  3604   001218  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  3605   00121A  ECA8  F010         	call	_read_i2c	;wreg free
  3606   00121E  0100               	movlb	0	; () banked
  3607   001220  51A4               	movf	?_read_i2c& (0+255),w,b
  3608   001222  0101               	movlb	1	; () banked
  3609   001224  6F1A               	movwf	main@num3& (0+255),b	;volatile
  3610                           
  3611                           ; BSR set to: 1
  3612                           ;main.c: 800: num4 = read_i2c(0x0080);
  3613   001226  0E80               	movlw	128
  3614   001228  0100               	movlb	0	; () banked
  3615   00122A  6FA4               	movwf	read_i2c@address& (0+255),b
  3616   00122C  0E00               	movlw	0
  3617   00122E  6FA5               	movwf	(read_i2c@address+1)& (0+255),b
  3618   001230  0E00               	movlw	0
  3619   001232  6FA6               	movwf	(read_i2c@address+2)& (0+255),b
  3620   001234  0E00               	movlw	0
  3621   001236  6FA7               	movwf	(read_i2c@address+3)& (0+255),b
  3622   001238  ECA8  F010         	call	_read_i2c	;wreg free
  3623   00123C  0100               	movlb	0	; () banked
  3624   00123E  51A4               	movf	?_read_i2c& (0+255),w,b
  3625   001240  0101               	movlb	1	; () banked
  3626   001242  6F1B               	movwf	main@num4& (0+255),b	;volatile
  3627                           
  3628                           ;main.c: 802: Serial_Buffer_Out[0] = 0x52;
  3629   001244  0E52               	movlw	82
  3630   001246  0100               	movlb	0	; () banked
  3631   001248  6F60               	movwf	_Serial_Buffer_Out& (0+255),b
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;main.c: 803: Serial_Buffer_Out[1] = num1;
  3635   00124A  C118  F061         	movff	main@num1,_Serial_Buffer_Out+1	;volatile
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;main.c: 804: Serial_Buffer_Out[2] = num2;
  3639   00124E  C119  F062         	movff	main@num2,_Serial_Buffer_Out+2	;volatile
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;main.c: 805: Serial_Buffer_Out[3] = num3;
  3643   001252  C11A  F063         	movff	main@num3,_Serial_Buffer_Out+3	;volatile
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;main.c: 806: Serial_Buffer_Out[4] = num4;
  3647   001256  C11B  F064         	movff	main@num4,_Serial_Buffer_Out+4	;volatile
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;main.c: 808: DelayTime_1ms(100);
  3651   00125A  0E00               	movlw	0
  3652   00125C  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  3653   00125E  0E64               	movlw	100
  3654   001260  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  3655   001262  EC04  F012         	call	_DelayTime_1ms	;wreg free
  3656                           
  3657                           ;main.c: 810: for (i=0; i<5;i++)
  3658   001266  0E00               	movlw	0
  3659   001268  0101               	movlb	1	; () banked
  3660   00126A  6F1C               	movwf	main@i& (0+255),b
  3661   00126C                     l6328:
  3662                           
  3663                           ; BSR set to: 1
  3664   00126C  0E04               	movlw	4
  3665   00126E  651C               	cpfsgt	main@i& (0+255),b
  3666   001270  D001               	goto	l6332
  3667   001272  D79C               	goto	l372
  3668   001274                     l6332:
  3669                           
  3670                           ; BSR set to: 1
  3671                           ;main.c: 811: {;main.c: 812: Write1USART(Serial_Buffer_Out[i]);
  3672   001274  0E60               	movlw	low _Serial_Buffer_Out
  3673   001276  251C               	addwf	main@i& (0+255),w,b
  3674   001278  6ED9               	movwf	fsr2l,c
  3675   00127A  6ADA               	clrf	fsr2h,c
  3676   00127C  0E00               	movlw	high _Serial_Buffer_Out
  3677   00127E  22DA               	addwfc	fsr2h,f,c
  3678   001280  50DF               	movf	indf2,w,c
  3679   001282  ECDD  F012         	call	_Write1USART
  3680   001286  0101               	movlb	1	; () banked
  3681   001288  2B1C               	incf	main@i& (0+255),f,b
  3682   00128A  D7F0               	goto	l6328
  3683   00128C                     l6344:
  3684                           
  3685                           ; BSR set to: 0
  3686   00128C  5171               	movf	(_Serial_Buffer+1)& (0+255),w,b
  3687                           
  3688                           ; Switch size 1, requested type "simple"
  3689                           ; Number of cases is 7, Range of values is 68 to 103
  3690                           ; switch strategies available:
  3691                           ; Name         Instructions Cycles
  3692                           ; simple_byte           22    12 (average)
  3693                           ;	Chosen strategy is simple_byte
  3694   00128E  0A44               	xorlw	68	; case 68
  3695   001290  B4D8               	btfsc	status,2,c
  3696   001292  D691               	goto	l6164
  3697   001294  0A15               	xorlw	21	; case 81
  3698   001296  B4D8               	btfsc	status,2,c
  3699   001298  D71D               	goto	l6254
  3700   00129A  0A03               	xorlw	3	; case 82
  3701   00129C  B4D8               	btfsc	status,2,c
  3702   00129E  D78A               	goto	l6298
  3703   0012A0  0A36               	xorlw	54	; case 100
  3704   0012A2  B4D8               	btfsc	status,2,c
  3705   0012A4  D6A3               	goto	l6182
  3706   0012A6  0A01               	xorlw	1	; case 101
  3707   0012A8  B4D8               	btfsc	status,2,c
  3708   0012AA  D6BD               	goto	l6200
  3709   0012AC  0A03               	xorlw	3	; case 102
  3710   0012AE  B4D8               	btfsc	status,2,c
  3711   0012B0  D6D7               	goto	l6218
  3712   0012B2  0A01               	xorlw	1	; case 103
  3713   0012B4  B4D8               	btfsc	status,2,c
  3714   0012B6  D6F1               	goto	l6236
  3715   0012B8                     l6346:
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;main.c: 826: Serial_Flag = 0;
  3719   0012B8  0E00               	movlw	0
  3720   0012BA  6F8B               	movwf	_Serial_Flag& (0+255),b
  3721                           
  3722                           ;main.c: 827: Serial_GData = 0;
  3723   0012BC  0E00               	movlw	0
  3724   0012BE  6E46               	movwf	_Serial_GData^0,c
  3725   0012C0                     l6348:
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;main.c: 830: else;main.c: 831: {;main.c: 832: OpMode = MANUAL_MODE;
  3729   0012C0  0E01               	movlw	1
  3730   0012C2  6E56               	movwf	_OpMode^0,c	;volatile
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;main.c: 833: };main.c: 838: if ((Lifter_Use == 1) && (lifter == standby) && (Busy == 0)
      +                          )
  3734   0012C4  0586               	decf	_Lifter_Use& (0+255),w,b
  3735   0012C6  A4D8               	btfss	status,2,c
  3736   0012C8  D05D               	goto	l6394
  3737                           
  3738                           ; BSR set to: 0
  3739   0012CA  5187               	movf	_lifter& (0+255),w,b
  3740   0012CC  A4D8               	btfss	status,2,c
  3741   0012CE  D05A               	goto	l6394
  3742                           
  3743                           ; BSR set to: 0
  3744   0012D0  518A               	movf	_Busy& (0+255),w,b
  3745   0012D2  A4D8               	btfss	status,2,c
  3746   0012D4  D057               	goto	l6394
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;main.c: 839: {;main.c: 840: Busy = 1;
  3750   0012D6  0E01               	movlw	1
  3751   0012D8  6F8A               	movwf	_Busy& (0+255),b
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;main.c: 842: if((PORTDbits.RD0)&&(!PORTEbits.RE7))
  3755   0012DA  B083               	btfsc	131,0,c	;volatile
  3756                           
  3757                           ; BSR set to: 0
  3758   0012DC  BE84               	btfsc	132,7,c	;volatile
  3759   0012DE  D047               	goto	l381
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;main.c: 843: {;main.c: 844: DelayTime_1ms(300);
  3763   0012E0  0E01               	movlw	1
  3764   0012E2  6F8D               	movwf	(DelayTime_1ms@time+1)& (0+255),b
  3765   0012E4  0E2C               	movlw	44
  3766   0012E6  6F8C               	movwf	DelayTime_1ms@time& (0+255),b
  3767   0012E8  EC04  F012         	call	_DelayTime_1ms	;wreg free
  3768                           
  3769                           ;main.c: 845: lifter = moveup;
  3770   0012EC  0E01               	movlw	1
  3771   0012EE  0100               	movlb	0	; () banked
  3772   0012F0  6F87               	movwf	_lifter& (0+255),b
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;main.c: 846: Lifter_Up();
  3776   0012F2  EC08  F013         	call	_Lifter_Up	;wreg free
  3777                           
  3778                           ;main.c: 847: LiftUpTime = 50;
  3779   0012F6  0E00               	movlw	0
  3780   0012F8  0100               	movlb	0	; () banked
  3781   0012FA  6FC3               	movwf	(_LiftUpTime+1)& (0+255),b	;volatile
  3782   0012FC  0E32               	movlw	50
  3783   0012FE  6FC2               	movwf	_LiftUpTime& (0+255),b	;volatile
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;main.c: 848: Lifter_Use = 0;
  3787   001300  0E00               	movlw	0
  3788   001302  6F86               	movwf	_Lifter_Use& (0+255),b
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;main.c: 849: error = 0;
  3792   001304  0E00               	movlw	0
  3793   001306  6F88               	movwf	_error& (0+255),b	;volatile
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;main.c: 850: warning = 0;
  3797   001308  0E00               	movlw	0
  3798   00130A  6E41               	movwf	_warning^0,c	;volatile
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;main.c: 851: error1counter = 50;
  3802   00130C  0E32               	movlw	50
  3803   00130E  6FBE               	movwf	_error1counter& (0+255),b	;volatile
  3804   001310  0E00               	movlw	0
  3805   001312  6FBF               	movwf	(_error1counter+1)& (0+255),b	;volatile
  3806   001314  0E00               	movlw	0
  3807   001316  6FC0               	movwf	(_error1counter+2)& (0+255),b	;volatile
  3808   001318  0E00               	movlw	0
  3809   00131A  6FC1               	movwf	(_error1counter+3)& (0+255),b	;volatile
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;main.c: 852: error2counter = 30;
  3813   00131C  0E1E               	movlw	30
  3814   00131E  6E47               	movwf	_error2counter^0,c	;volatile
  3815   001320  0E00               	movlw	0
  3816   001322  6E48               	movwf	(_error2counter+1)^0,c	;volatile
  3817   001324  0E00               	movlw	0
  3818   001326  6E49               	movwf	(_error2counter+2)^0,c	;volatile
  3819   001328  0E00               	movlw	0
  3820   00132A  6E4A               	movwf	(_error2counter+3)^0,c	;volatile
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;main.c: 853: error3counter = 30;
  3824   00132C  0E1E               	movlw	30
  3825   00132E  6FBA               	movwf	_error3counter& (0+255),b	;volatile
  3826   001330  0E00               	movlw	0
  3827   001332  6FBB               	movwf	(_error3counter+1)& (0+255),b	;volatile
  3828   001334  0E00               	movlw	0
  3829   001336  6FBC               	movwf	(_error3counter+2)& (0+255),b	;volatile
  3830   001338  0E00               	movlw	0
  3831   00133A  6FBD               	movwf	(_error3counter+3)& (0+255),b	;volatile
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;main.c: 854: error4counter = 30;
  3835   00133C  0E1E               	movlw	30
  3836   00133E  6FB6               	movwf	_error4counter& (0+255),b	;volatile
  3837   001340  0E00               	movlw	0
  3838   001342  6FB7               	movwf	(_error4counter+1)& (0+255),b	;volatile
  3839   001344  0E00               	movlw	0
  3840   001346  6FB8               	movwf	(_error4counter+2)& (0+255),b	;volatile
  3841   001348  0E00               	movlw	0
  3842   00134A  6FB9               	movwf	(_error4counter+3)& (0+255),b	;volatile
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;main.c: 855: error5counter = 30;
  3846   00134C  0E1E               	movlw	30
  3847   00134E  6FB2               	movwf	_error5counter& (0+255),b	;volatile
  3848   001350  0E00               	movlw	0
  3849   001352  6FB3               	movwf	(_error5counter+1)& (0+255),b	;volatile
  3850   001354  0E00               	movlw	0
  3851   001356  6FB4               	movwf	(_error5counter+2)& (0+255),b	;volatile
  3852   001358  0E00               	movlw	0
  3853   00135A  6FB5               	movwf	(_error5counter+3)& (0+255),b	;volatile
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;main.c: 856: error6counter = 30;
  3857   00135C  0E1E               	movlw	30
  3858   00135E  6FAE               	movwf	_error6counter& (0+255),b	;volatile
  3859   001360  0E00               	movlw	0
  3860   001362  6FAF               	movwf	(_error6counter+1)& (0+255),b	;volatile
  3861   001364  0E00               	movlw	0
  3862   001366  6FB0               	movwf	(_error6counter+2)& (0+255),b	;volatile
  3863   001368  0E00               	movlw	0
  3864   00136A  6FB1               	movwf	(_error6counter+3)& (0+255),b	;volatile
  3865                           
  3866                           ;main.c: 857: }
  3867   00136C  D091               	goto	l6456
  3868   00136E                     l381:
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;main.c: 859: else if(PORTEbits.RE7)
  3872   00136E  AE84               	btfss	132,7,c	;volatile
  3873   001370  D08F               	goto	l6456
  3874   001372                     u5640:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;main.c: 862: {;main.c: 863: error = 1;
  3878   001372  0E01               	movlw	1
  3879   001374  6F88               	movwf	_error& (0+255),b	;volatile
  3880                           
  3881                           ;main.c: 864: error_number = '5';
  3882   001376  0E35               	movlw	53
  3883   001378  6E55               	movwf	_error_number^0,c	;volatile
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;main.c: 865: }while(PORTEbits.RE7);
  3887   00137A  BE84               	btfsc	132,7,c	;volatile
  3888   00137C  D7FA               	goto	u5640
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;main.c: 867: error = 0;
  3892   00137E  0E00               	movlw	0
  3893   001380  6F88               	movwf	_error& (0+255),b	;volatile
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;main.c: 868: };main.c: 871: }
  3897   001382  D086               	goto	l6456
  3898   001384                     l6394:
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;main.c: 872: else if (lifter == moveup)
  3902   001384  0587               	decf	_lifter& (0+255),w,b
  3903   001386  A4D8               	btfss	status,2,c
  3904   001388  D027               	goto	l6412
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;main.c: 873: {;main.c: 874: if(!PORTDbits.RD0)
  3908   00138A  B083               	btfsc	131,0,c	;volatile
  3909   00138C  D010               	goto	l388
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;main.c: 875: {;main.c: 876: LiftUpHoldCounter = lift_up_hold_time;
  3913   00138E  C120  F0C6         	movff	main@lift_up_hold_time,_LiftUpHoldCounter	;volatile
  3914   001392  6BC7               	clrf	(_LiftUpHoldCounter+1)& (0+255),b
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;main.c: 877: lifter = stoptop;
  3918   001394  0E02               	movlw	2
  3919   001396  6F87               	movwf	_lifter& (0+255),b
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;main.c: 878: DelayTime_1ms(lifter_stop_delay_time);
  3923   001398  C10F  F08C         	movff	main@lifter_stop_delay_time,DelayTime_1ms@time
  3924   00139C  C110  F08D         	movff	main@lifter_stop_delay_time+1,DelayTime_1ms@time+1
  3925   0013A0  EC04  F012         	call	_DelayTime_1ms	;wreg free
  3926                           
  3927                           ;main.c: 879: Lifter_Stop();
  3928   0013A4  EC0B  F013         	call	_Lifter_Stop	;wreg free
  3929                           
  3930                           ;main.c: 880: error4counter = 30;
  3931   0013A8  0E1E               	movlw	30
  3932   0013AA  0100               	movlb	0	; () banked
  3933   0013AC  D00D               	goto	L2
  3934   0013AE                     l388:
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;main.c: 883: else if(PORTDbits.RD0)
  3938   0013AE  A083               	btfss	131,0,c	;volatile
  3939   0013B0  D06F               	goto	l6456
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;main.c: 884: {;main.c: 885: if(error4counter == 0)
  3943   0013B2  51B6               	movf	_error4counter& (0+255),w,b	;volatile
  3944   0013B4  11B7               	iorwf	(_error4counter+1)& (0+255),w,b	;volatile
  3945   0013B6  11B8               	iorwf	(_error4counter+2)& (0+255),w,b	;volatile
  3946   0013B8  11B9               	iorwf	(_error4counter+3)& (0+255),w,b	;volatile
  3947   0013BA  A4D8               	btfss	status,2,c
  3948   0013BC  D069               	goto	l6456
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;main.c: 886: {;main.c: 887: error = 1;
  3952   0013BE  0E01               	movlw	1
  3953   0013C0  6F88               	movwf	_error& (0+255),b	;volatile
  3954                           
  3955                           ;main.c: 888: error_number = '4';
  3956   0013C2  0E34               	movlw	52
  3957   0013C4  6E55               	movwf	_error_number^0,c	;volatile
  3958                           
  3959                           ;main.c: 889: error4counter = 30;
  3960   0013C6  0E1E               	movlw	30
  3961   0013C8                     L2:
  3962   0013C8  6FB6               	movwf	_error4counter& (0+255),b	;volatile
  3963   0013CA  0E00               	movlw	0
  3964   0013CC  6FB7               	movwf	(_error4counter+1)& (0+255),b	;volatile
  3965   0013CE  0E00               	movlw	0
  3966   0013D0  6FB8               	movwf	(_error4counter+2)& (0+255),b	;volatile
  3967   0013D2  0E00               	movlw	0
  3968   0013D4  6FB9               	movwf	(_error4counter+3)& (0+255),b	;volatile
  3969   0013D6  D05C               	goto	l6456
  3970   0013D8                     l6412:
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;main.c: 895: else if ((lifter == stoptop) && (LiftUpHoldCounter==0))
  3974   0013D8  0E02               	movlw	2
  3975   0013DA  1987               	xorwf	_lifter& (0+255),w,b
  3976   0013DC  A4D8               	btfss	status,2,c
  3977   0013DE  D012               	goto	l6424
  3978                           
  3979                           ; BSR set to: 0
  3980   0013E0  51C6               	movf	_LiftUpHoldCounter& (0+255),w,b
  3981   0013E2  11C7               	iorwf	(_LiftUpHoldCounter+1)& (0+255),w,b
  3982   0013E4  A4D8               	btfss	status,2,c
  3983   0013E6  D00E               	goto	l6424
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;main.c: 896: {;main.c: 897: lifter = movedown;
  3987   0013E8  0E03               	movlw	3
  3988   0013EA  6F87               	movwf	_lifter& (0+255),b
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;main.c: 898: Lifter_Down();
  3992   0013EC  EC0E  F013         	call	_Lifter_Down	;wreg free
  3993                           
  3994                           ;main.c: 900: if(capin == 1)
  3995   0013F0  0101               	movlb	1	; () banked
  3996   0013F2  0511               	decf	main@capin& (0+255),w,b
  3997   0013F4  1112               	iorwf	(main@capin+1)& (0+255),w,b
  3998   0013F6  A4D8               	btfss	status,2,c
  3999   0013F8  D04B               	goto	l6456
  4000                           
  4001                           ; BSR set to: 1
  4002                           ;main.c: 901: {;main.c: 902: capin = 0;
  4003   0013FA  0E00               	movlw	0
  4004   0013FC  6F12               	movwf	(main@capin+1)& (0+255),b
  4005   0013FE  0E00               	movlw	0
  4006   001400  6F11               	movwf	main@capin& (0+255),b
  4007   001402  D046               	goto	l6456
  4008   001404                     l6424:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;main.c: 906: else if (lifter == movedown)
  4012   001404  0E03               	movlw	3
  4013   001406  1987               	xorwf	_lifter& (0+255),w,b
  4014   001408  A4D8               	btfss	status,2,c
  4015   00140A  D02A               	goto	l6442
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;main.c: 907: {;main.c: 909: if(!PORTEbits.RE7)
  4019   00140C  BE84               	btfsc	132,7,c	;volatile
  4020   00140E  D019               	goto	l397
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;main.c: 910: {;main.c: 911: lifter = standby;
  4024   001410  0E00               	movlw	0
  4025   001412  6F87               	movwf	_lifter& (0+255),b
  4026                           
  4027                           ;main.c: 912: start_capping = 0;
  4028   001414  0E00               	movlw	0
  4029   001416  0101               	movlb	1	; () banked
  4030   001418  6F17               	movwf	main@start_capping& (0+255),b
  4031                           
  4032                           ; BSR set to: 1
  4033                           ;main.c: 913: Lifter_Stop();
  4034   00141A  EC0B  F013         	call	_Lifter_Stop	;wreg free
  4035                           
  4036                           ;main.c: 914: while (!PORTEbits.RE3)
  4037   00141E  D005               	goto	l6434
  4038   001420                     l6432:
  4039                           
  4040                           ;main.c: 915: {;main.c: 916: error = 1;
  4041   001420  0E01               	movlw	1
  4042   001422  0100               	movlb	0	; () banked
  4043   001424  6F88               	movwf	_error& (0+255),b	;volatile
  4044                           
  4045                           ;main.c: 917: error_number = '6';
  4046   001426  0E36               	movlw	54
  4047   001428  6E55               	movwf	_error_number^0,c	;volatile
  4048   00142A                     l6434:
  4049   00142A  A684               	btfss	132,3,c	;volatile
  4050   00142C  D7F9               	goto	l6432
  4051                           
  4052                           ;main.c: 918: };;main.c: 920: error5counter = 30;
  4053   00142E  0E1E               	movlw	30
  4054   001430  0100               	movlb	0	; () banked
  4055   001432  6FB2               	movwf	_error5counter& (0+255),b	;volatile
  4056   001434  0E00               	movlw	0
  4057   001436  6FB3               	movwf	(_error5counter+1)& (0+255),b	;volatile
  4058   001438  0E00               	movlw	0
  4059   00143A  6FB4               	movwf	(_error5counter+2)& (0+255),b	;volatile
  4060   00143C  0E00               	movlw	0
  4061   00143E  6FB5               	movwf	(_error5counter+3)& (0+255),b	;volatile
  4062                           
  4063                           ;main.c: 921: }
  4064   001440  D027               	goto	l6456
  4065   001442                     l397:
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;main.c: 922: else;main.c: 923: {;main.c: 924: if(PORTEbits.RE7 && error5counter == 0)
  4069   001442  AE84               	btfss	132,7,c	;volatile
  4070   001444  D025               	goto	l6456
  4071                           
  4072                           ; BSR set to: 0
  4073   001446  51B2               	movf	_error5counter& (0+255),w,b	;volatile
  4074   001448  11B3               	iorwf	(_error5counter+1)& (0+255),w,b	;volatile
  4075   00144A  11B4               	iorwf	(_error5counter+2)& (0+255),w,b	;volatile
  4076   00144C  11B5               	iorwf	(_error5counter+3)& (0+255),w,b	;volatile
  4077   00144E  A4D8               	btfss	status,2,c
  4078   001450  D01F               	goto	l6456
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;main.c: 925: {;main.c: 926: error = 1;
  4082   001452  0E01               	movlw	1
  4083   001454  6F88               	movwf	_error& (0+255),b	;volatile
  4084                           
  4085                           ;main.c: 927: error_number = '5';
  4086   001456  0E35               	movlw	53
  4087   001458  6E55               	movwf	_error_number^0,c	;volatile
  4088                           
  4089                           ;main.c: 928: lifter = standby;
  4090   00145A  0E00               	movlw	0
  4091   00145C  6F87               	movwf	_lifter& (0+255),b
  4092   00145E  D018               	goto	l6456
  4093   001460                     l6442:
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;main.c: 932: else if (lifter == standby)
  4097   001460  5187               	movf	_lifter& (0+255),w,b
  4098   001462  A4D8               	btfss	status,2,c
  4099   001464  D015               	goto	l6456
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;main.c: 933: {;main.c: 934: Lifter_Stop();
  4103   001466  EC0B  F013         	call	_Lifter_Stop	;wreg free
  4104                           
  4105                           ;main.c: 935: LiftUpTime = 50;
  4106   00146A  0E00               	movlw	0
  4107   00146C  0100               	movlb	0	; () banked
  4108   00146E  6FC3               	movwf	(_LiftUpTime+1)& (0+255),b	;volatile
  4109   001470  0E32               	movlw	50
  4110   001472  6FC2               	movwf	_LiftUpTime& (0+255),b	;volatile
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;main.c: 936: Busy = 0;
  4114   001474  0E00               	movlw	0
  4115   001476  6F8A               	movwf	_Busy& (0+255),b
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;main.c: 938: if(PORTEbits.RE7)
  4119   001478  AE84               	btfss	132,7,c	;volatile
  4120   00147A  D004               	goto	l405
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;main.c: 939: {;main.c: 940: error = 1;
  4124   00147C  0E01               	movlw	1
  4125   00147E  6F88               	movwf	_error& (0+255),b	;volatile
  4126                           
  4127                           ;main.c: 941: error_number = '5';
  4128   001480  0E35               	movlw	53
  4129   001482  D005               	goto	L3
  4130   001484                     l405:
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;main.c: 943: else if(!PORTDbits.RD0)
  4134   001484  B083               	btfsc	131,0,c	;volatile
  4135   001486  D004               	goto	l6456
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;main.c: 944: {;main.c: 945: error = 1;
  4139   001488  0E01               	movlw	1
  4140   00148A  6F88               	movwf	_error& (0+255),b	;volatile
  4141                           
  4142                           ;main.c: 946: error_number = '4';
  4143   00148C  0E34               	movlw	52
  4144   00148E                     L3:
  4145   00148E  6E55               	movwf	_error_number^0,c	;volatile
  4146   001490                     l6456:
  4147                           
  4148                           ;main.c: 947: };main.c: 948: };main.c: 951: if ((lifter == moveup)||(lifter == movedown)
      +                          )
  4149   001490  0100               	movlb	0	; () banked
  4150   001492  0587               	decf	_lifter& (0+255),w,b
  4151   001494  B4D8               	btfsc	status,2,c
  4152   001496  D004               	goto	u5820
  4153                           
  4154                           ; BSR set to: 0
  4155   001498  0E03               	movlw	3
  4156   00149A  1987               	xorwf	_lifter& (0+255),w,b
  4157   00149C  A4D8               	btfss	status,2,c
  4158   00149E  D010               	goto	l411
  4159   0014A0                     u5820:
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;main.c: 952: {;main.c: 953: if(PORTFbits.RF5==0)
  4163   0014A0  BA85               	btfsc	133,5,c	;volatile
  4164   0014A2  D00E               	goto	l411
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;main.c: 954: {;main.c: 955: Lifter_Stop();
  4168   0014A4  EC0B  F013         	call	_Lifter_Stop	;wreg free
  4169                           
  4170                           ;main.c: 957: if(lifter == moveup)
  4171   0014A8  0100               	movlb	0	; () banked
  4172   0014AA  0587               	decf	_lifter& (0+255),w,b
  4173   0014AC  A4D8               	btfss	status,2,c
  4174   0014AE  D003               	goto	l6466
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;main.c: 958: Lifter_Up();
  4178   0014B0  EC08  F013         	call	_Lifter_Up	;wreg free
  4179   0014B4  D005               	goto	l411
  4180   0014B6                     l6466:
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;main.c: 959: else if(lifter == movedown)
  4184   0014B6  0E03               	movlw	3
  4185   0014B8  1987               	xorwf	_lifter& (0+255),w,b
  4186   0014BA  B4D8               	btfsc	status,2,c
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;main.c: 960: Lifter_Down();
  4190   0014BC  EC0E  F013         	call	_Lifter_Down	;wreg free
  4191   0014C0                     l411:
  4192                           
  4193                           ;main.c: 962: };main.c: 963: };main.c: 965: if ((LiftUpTime == 0) && (lifter == moveup))
  4194                           
  4195                           ; BSR set to: 0
  4196   0014C0  0100               	movlb	0	; () banked
  4197   0014C2  51C2               	movf	_LiftUpTime& (0+255),w,b	;volatile
  4198   0014C4  11C3               	iorwf	(_LiftUpTime+1)& (0+255),w,b	;volatile
  4199   0014C6  A4D8               	btfss	status,2,c
  4200   0014C8  EF8E  F005         	goto	l266
  4201                           
  4202                           ; BSR set to: 0
  4203   0014CC  0587               	decf	_lifter& (0+255),w,b
  4204   0014CE  A4D8               	btfss	status,2,c
  4205   0014D0  EF8E  F005         	goto	l266
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;main.c: 966: {;main.c: 967: Lifter_Brake();
  4209   0014D4  EC11  F013         	call	_Lifter_Brake	;wreg free
  4210                           
  4211                           ;main.c: 968: Lifter_Down();
  4212   0014D8  EC0E  F013         	call	_Lifter_Down	;wreg free
  4213                           
  4214                           ;main.c: 969: lifter=movedown;
  4215   0014DC  0E03               	movlw	3
  4216   0014DE  0100               	movlb	0	; () banked
  4217   0014E0  6F87               	movwf	_lifter& (0+255),b
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;main.c: 970: LiftUpTime = 50;
  4221   0014E2  0E00               	movlw	0
  4222   0014E4  6FC3               	movwf	(_LiftUpTime+1)& (0+255),b	;volatile
  4223   0014E6  0E32               	movlw	50
  4224   0014E8  6FC2               	movwf	_LiftUpTime& (0+255),b	;volatile
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;main.c: 971: error5counter = 30;
  4228   0014EA  0E1E               	movlw	30
  4229   0014EC  6FB2               	movwf	_error5counter& (0+255),b	;volatile
  4230   0014EE  0E00               	movlw	0
  4231   0014F0  6FB3               	movwf	(_error5counter+1)& (0+255),b	;volatile
  4232   0014F2  0E00               	movlw	0
  4233   0014F4  6FB4               	movwf	(_error5counter+2)& (0+255),b	;volatile
  4234   0014F6  0E00               	movlw	0
  4235   0014F8  6FB5               	movwf	(_error5counter+3)& (0+255),b	;volatile
  4236   0014FA  EF8E  F005         	goto	l266
  4237   0014FE                     __end_of_main:
  4238                           	callstack 0
  4239                           
  4240 ;; *************** function _write_i2c *****************
  4241 ;; Defined at:
  4242 ;;		line 112 in file "i2c.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  address         4   24[BANK0 ] long 
  4245 ;;  data            2   28[BANK0 ] int 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4257 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;Total ram usage:        6 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; Hardware stack levels required when called: 7
  4264 ;; This function calls:
  4265 ;;		___aldiv
  4266 ;;		_i2c_Address
  4267 ;;		_i2c_Start
  4268 ;;		_i2c_Stop
  4269 ;;		_i2c_Write
  4270 ;; This function is called by:
  4271 ;;		_main
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text1
  4276   0022E0                     __ptext1:
  4277                           	callstack 0
  4278   0022E0                     _write_i2c:
  4279                           	callstack 23
  4280                           
  4281                           ;i2c.c: 114: i2c_Start();
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;incstack = 0
  4285   0022E0  ECF4  F012         	call	_i2c_Start	;wreg free
  4286                           
  4287                           ;i2c.c: 115: i2c_Address(0xA0, 0);
  4288   0022E4  0E00               	movlw	0
  4289   0022E6  0100               	movlb	0	; () banked
  4290   0022E8  6F8D               	movwf	i2c_Address@mode& (0+255),b
  4291   0022EA  0EA0               	movlw	160
  4292   0022EC  EC79  F012         	call	_i2c_Address
  4293                           
  4294                           ;i2c.c: 116: i2c_Write((unsigned char)(address/0x100));
  4295   0022F0  C0A4  F096         	movff	write_i2c@address,___aldiv@dividend
  4296   0022F4  C0A5  F097         	movff	write_i2c@address+1,___aldiv@dividend+1
  4297   0022F8  C0A6  F098         	movff	write_i2c@address+2,___aldiv@dividend+2
  4298   0022FC  C0A7  F099         	movff	write_i2c@address+3,___aldiv@dividend+3
  4299   002300  0E00               	movlw	0
  4300   002302  0100               	movlb	0	; () banked
  4301   002304  6F9A               	movwf	___aldiv@divisor& (0+255),b
  4302   002306  0E01               	movlw	1
  4303   002308  6F9B               	movwf	(___aldiv@divisor+1)& (0+255),b
  4304   00230A  0E00               	movlw	0
  4305   00230C  6F9C               	movwf	(___aldiv@divisor+2)& (0+255),b
  4306   00230E  0E00               	movlw	0
  4307   002310  6F9D               	movwf	(___aldiv@divisor+3)& (0+255),b
  4308   002312  EC77  F00E         	call	___aldiv	;wreg free
  4309   002316  0100               	movlb	0	; () banked
  4310   002318  5196               	movf	?___aldiv& (0+255),w,b
  4311   00231A  ECD6  F012         	call	_i2c_Write
  4312                           
  4313                           ;i2c.c: 117: i2c_Write((unsigned char)(address&0xFF));
  4314   00231E  0100               	movlb	0	; () banked
  4315   002320  51A4               	movf	write_i2c@address& (0+255),w,b
  4316   002322  ECD6  F012         	call	_i2c_Write
  4317                           
  4318                           ;i2c.c: 118: i2c_Write((unsigned char)data);
  4319   002326  0100               	movlb	0	; () banked
  4320   002328  51A8               	movf	write_i2c@data& (0+255),w,b
  4321   00232A  ECD6  F012         	call	_i2c_Write
  4322                           
  4323                           ;i2c.c: 119: i2c_Stop();
  4324   00232E  ECF0  F012         	call	_i2c_Stop	;wreg free
  4325   002332  0012               	return		;funcret
  4326   002334                     __end_of_write_i2c:
  4327                           	callstack 0
  4328                           
  4329 ;; *************** function _read_i2c *****************
  4330 ;; Defined at:
  4331 ;;		line 122 in file "i2c.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  address         4   24[BANK0 ] long 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  read_byte       2   28[BANK0 ] int 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  2   24[BANK0 ] int 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4345 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;Total ram usage:        6 bytes
  4350 ;; Hardware stack levels used: 1
  4351 ;; Hardware stack levels required when called: 7
  4352 ;; This function calls:
  4353 ;;		___aldiv
  4354 ;;		_i2c_Address
  4355 ;;		_i2c_Read
  4356 ;;		_i2c_Restart
  4357 ;;		_i2c_Start
  4358 ;;		_i2c_Stop
  4359 ;;		_i2c_Write
  4360 ;; This function is called by:
  4361 ;;		_main
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text2
  4366   002150                     __ptext2:
  4367                           	callstack 0
  4368   002150                     _read_i2c:
  4369                           	callstack 23
  4370                           
  4371                           ;i2c.c: 124: int read_byte;;i2c.c: 127: i2c_Start();
  4372                           
  4373                           ;incstack = 0
  4374   002150  ECF4  F012         	call	_i2c_Start	;wreg free
  4375                           
  4376                           ;i2c.c: 128: i2c_Address(0xA0, 0);
  4377   002154  0E00               	movlw	0
  4378   002156  0100               	movlb	0	; () banked
  4379   002158  6F8D               	movwf	i2c_Address@mode& (0+255),b
  4380   00215A  0EA0               	movlw	160
  4381   00215C  EC79  F012         	call	_i2c_Address
  4382                           
  4383                           ;i2c.c: 129: i2c_Write((unsigned char)(address/0x100));
  4384   002160  C0A4  F096         	movff	read_i2c@address,___aldiv@dividend
  4385   002164  C0A5  F097         	movff	read_i2c@address+1,___aldiv@dividend+1
  4386   002168  C0A6  F098         	movff	read_i2c@address+2,___aldiv@dividend+2
  4387   00216C  C0A7  F099         	movff	read_i2c@address+3,___aldiv@dividend+3
  4388   002170  0E00               	movlw	0
  4389   002172  0100               	movlb	0	; () banked
  4390   002174  6F9A               	movwf	___aldiv@divisor& (0+255),b
  4391   002176  0E01               	movlw	1
  4392   002178  6F9B               	movwf	(___aldiv@divisor+1)& (0+255),b
  4393   00217A  0E00               	movlw	0
  4394   00217C  6F9C               	movwf	(___aldiv@divisor+2)& (0+255),b
  4395   00217E  0E00               	movlw	0
  4396   002180  6F9D               	movwf	(___aldiv@divisor+3)& (0+255),b
  4397   002182  EC77  F00E         	call	___aldiv	;wreg free
  4398   002186  0100               	movlb	0	; () banked
  4399   002188  5196               	movf	?___aldiv& (0+255),w,b
  4400   00218A  ECD6  F012         	call	_i2c_Write
  4401                           
  4402                           ;i2c.c: 130: i2c_Write((unsigned char)(address&0xFF));
  4403   00218E  0100               	movlb	0	; () banked
  4404   002190  51A4               	movf	read_i2c@address& (0+255),w,b
  4405   002192  ECD6  F012         	call	_i2c_Write
  4406                           
  4407                           ;i2c.c: 131: i2c_Restart();
  4408   002196  ECF8  F012         	call	_i2c_Restart	;wreg free
  4409                           
  4410                           ;i2c.c: 132: i2c_Address(0xA0, 1);
  4411   00219A  0E01               	movlw	1
  4412   00219C  0100               	movlb	0	; () banked
  4413   00219E  6F8D               	movwf	i2c_Address@mode& (0+255),b
  4414   0021A0  0EA0               	movlw	160
  4415   0021A2  EC79  F012         	call	_i2c_Address
  4416                           
  4417                           ;i2c.c: 133: read_byte = i2c_Read(0);
  4418   0021A6  0E00               	movlw	0
  4419   0021A8  ECD8  F011         	call	_i2c_Read
  4420   0021AC  C08D  F0A8         	movff	?_i2c_Read,read_i2c@read_byte
  4421   0021B0  C08E  F0A9         	movff	?_i2c_Read+1,read_i2c@read_byte+1
  4422                           
  4423                           ;i2c.c: 137: i2c_Stop();
  4424   0021B4  ECF0  F012         	call	_i2c_Stop	;wreg free
  4425                           
  4426                           ;i2c.c: 138: return (read_byte);
  4427   0021B8  C0A8  F0A4         	movff	read_i2c@read_byte,?_read_i2c
  4428   0021BC  C0A9  F0A5         	movff	read_i2c@read_byte+1,?_read_i2c+1
  4429   0021C0  0012               	return		;funcret
  4430   0021C2                     __end_of_read_i2c:
  4431                           	callstack 0
  4432                           
  4433 ;; *************** function _i2c_Write *****************
  4434 ;; Defined at:
  4435 ;;		line 69 in file "i2c.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  data            1    wreg     unsigned char 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  data            1    1[BANK0 ] unsigned char 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      void 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;Total ram usage:        1 bytes
  4454 ;; Hardware stack levels used: 1
  4455 ;; Hardware stack levels required when called: 6
  4456 ;; This function calls:
  4457 ;;		_i2c_Wait
  4458 ;; This function is called by:
  4459 ;;		_write_i2c
  4460 ;;		_read_i2c
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text3
  4465   0025AC                     __ptext3:
  4466                           	callstack 0
  4467   0025AC                     _i2c_Write:
  4468                           	callstack 23
  4469                           
  4470                           ;incstack = 0
  4471                           ;i2c_Write@data stored from wreg
  4472   0025AC  0100               	movlb	0	; () banked
  4473   0025AE  6F8D               	movwf	i2c_Write@data& (0+255),b
  4474                           
  4475                           ;i2c.c: 71: i2c_Wait();
  4476   0025B0  ECA7  F012         	call	_i2c_Wait	;wreg free
  4477                           
  4478                           ;i2c.c: 72: SSP2BUF = data;
  4479   0025B4  C08D  FF6F         	movff	i2c_Write@data,3951	;volatile
  4480   0025B8  0012               	return		;funcret
  4481   0025BA                     __end_of_i2c_Write:
  4482                           	callstack 0
  4483                           
  4484 ;; *************** function _i2c_Stop *****************
  4485 ;; Defined at:
  4486 ;;		line 62 in file "i2c.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;		None
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;Total ram usage:        0 bytes
  4505 ;; Hardware stack levels used: 1
  4506 ;; Hardware stack levels required when called: 6
  4507 ;; This function calls:
  4508 ;;		_i2c_Wait
  4509 ;; This function is called by:
  4510 ;;		_write_i2c
  4511 ;;		_read_i2c
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text4
  4516   0025E0                     __ptext4:
  4517                           	callstack 0
  4518   0025E0                     _i2c_Stop:
  4519                           	callstack 23
  4520                           
  4521                           ;i2c.c: 64: i2c_Wait();
  4522                           
  4523                           ;incstack = 0
  4524   0025E0  ECA7  F012         	call	_i2c_Wait	;wreg free
  4525                           
  4526                           ;i2c.c: 65: PEN2=1;
  4527   0025E4  846B               	bsf	3947,2,c	;volatile
  4528   0025E6  0012               	return		;funcret
  4529   0025E8                     __end_of_i2c_Stop:
  4530                           	callstack 0
  4531                           
  4532 ;; *************** function _i2c_Start *****************
  4533 ;; Defined at:
  4534 ;;		line 49 in file "i2c.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;Total ram usage:        0 bytes
  4553 ;; Hardware stack levels used: 1
  4554 ;; Hardware stack levels required when called: 6
  4555 ;; This function calls:
  4556 ;;		_i2c_Wait
  4557 ;; This function is called by:
  4558 ;;		_write_i2c
  4559 ;;		_read_i2c
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text5
  4564   0025E8                     __ptext5:
  4565                           	callstack 0
  4566   0025E8                     _i2c_Start:
  4567                           	callstack 23
  4568                           
  4569                           ;i2c.c: 51: i2c_Wait();
  4570                           
  4571                           ;incstack = 0
  4572   0025E8  ECA7  F012         	call	_i2c_Wait	;wreg free
  4573                           
  4574                           ;i2c.c: 52: SEN2=1;
  4575   0025EC  806B               	bsf	3947,0,c	;volatile
  4576   0025EE  0012               	return		;funcret
  4577   0025F0                     __end_of_i2c_Start:
  4578                           	callstack 0
  4579                           
  4580 ;; *************** function _i2c_Restart *****************
  4581 ;; Defined at:
  4582 ;;		line 56 in file "i2c.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      void 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0, cstack
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4600 ;;Total ram usage:        0 bytes
  4601 ;; Hardware stack levels used: 1
  4602 ;; Hardware stack levels required when called: 6
  4603 ;; This function calls:
  4604 ;;		_i2c_Wait
  4605 ;; This function is called by:
  4606 ;;		_read_i2c
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text6
  4611   0025F0                     __ptext6:
  4612                           	callstack 0
  4613   0025F0                     _i2c_Restart:
  4614                           	callstack 23
  4615                           
  4616                           ;i2c.c: 57: i2c_Wait();
  4617                           
  4618                           ;incstack = 0
  4619   0025F0  ECA7  F012         	call	_i2c_Wait	;wreg free
  4620                           
  4621                           ;i2c.c: 58: RSEN2=1;
  4622   0025F4  826B               	bsf	3947,1,c	;volatile
  4623   0025F6  0012               	return		;funcret
  4624   0025F8                     __end_of_i2c_Restart:
  4625                           	callstack 0
  4626                           
  4627 ;; *************** function _i2c_Read *****************
  4628 ;; Defined at:
  4629 ;;		line 88 in file "i2c.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  ack             1    wreg     unsigned char 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  ack             1    3[BANK0 ] unsigned char 
  4634 ;;  i2cReadData     1    4[BANK0 ] unsigned char 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  2    1[BANK0 ] int 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4644 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;Total ram usage:        4 bytes
  4649 ;; Hardware stack levels used: 1
  4650 ;; Hardware stack levels required when called: 6
  4651 ;; This function calls:
  4652 ;;		_i2c_Wait
  4653 ;; This function is called by:
  4654 ;;		_read_i2c
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text7
  4659   0023B0                     __ptext7:
  4660                           	callstack 0
  4661   0023B0                     _i2c_Read:
  4662                           	callstack 23
  4663                           
  4664                           ;incstack = 0
  4665                           ;i2c_Read@ack stored from wreg
  4666   0023B0  0100               	movlb	0	; () banked
  4667   0023B2  6F8F               	movwf	i2c_Read@ack& (0+255),b
  4668                           
  4669                           ;i2c.c: 93: unsigned char i2cReadData;;i2c.c: 95: i2c_Wait();
  4670   0023B4  ECA7  F012         	call	_i2c_Wait	;wreg free
  4671                           
  4672                           ;i2c.c: 96: RCEN2=1;
  4673   0023B8  866B               	bsf	3947,3,c	;volatile
  4674                           
  4675                           ;i2c.c: 97: i2c_Wait();
  4676   0023BA  ECA7  F012         	call	_i2c_Wait	;wreg free
  4677                           
  4678                           ;i2c.c: 98: i2cReadData = SSP2BUF;
  4679   0023BE  CF6F F090          	movff	3951,i2c_Read@i2cReadData	;volatile
  4680                           
  4681                           ;i2c.c: 99: i2c_Wait();
  4682   0023C2  ECA7  F012         	call	_i2c_Wait	;wreg free
  4683                           
  4684                           ;i2c.c: 100: if ( ack )
  4685   0023C6  0100               	movlb	0	; () banked
  4686   0023C8  518F               	movf	i2c_Read@ack& (0+255),w,b
  4687   0023CA  B4D8               	btfsc	status,2,c
  4688   0023CC  D002               	goto	l712
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;i2c.c: 101: ACKDT2=0;
  4692   0023CE  9A6B               	bcf	3947,5,c	;volatile
  4693   0023D0  D001               	goto	l713
  4694   0023D2                     l712:
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;i2c.c: 102: else;i2c.c: 103: ACKDT2=1;
  4698   0023D2  8A6B               	bsf	3947,5,c	;volatile
  4699   0023D4                     l713:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;i2c.c: 104: ACKEN2=1;
  4703   0023D4  886B               	bsf	3947,4,c	;volatile
  4704                           
  4705                           ;i2c.c: 106: return( i2cReadData );
  4706   0023D6  C090  F08D         	movff	i2c_Read@i2cReadData,?_i2c_Read
  4707   0023DA  6B8E               	clrf	(?_i2c_Read+1)& (0+255),b
  4708                           
  4709                           ; BSR set to: 0
  4710   0023DC  0012               	return		;funcret
  4711   0023DE                     __end_of_i2c_Read:
  4712                           	callstack 0
  4713                           
  4714 ;; *************** function _i2c_Address *****************
  4715 ;; Defined at:
  4716 ;;		line 77 in file "i2c.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  address         1    wreg     unsigned char 
  4719 ;;  mode            1    1[BANK0 ] unsigned char 
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;  address         1    2[BANK0 ] unsigned char 
  4722 ;;  l_address       1    3[BANK0 ] unsigned char 
  4723 ;; Return value:  Size  Location     Type
  4724 ;;                  1    wreg      void 
  4725 ;; Registers used:
  4726 ;;		wreg, status,2, status,0, cstack
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4732 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4735 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;Total ram usage:        3 bytes
  4737 ;; Hardware stack levels used: 1
  4738 ;; Hardware stack levels required when called: 6
  4739 ;; This function calls:
  4740 ;;		_i2c_Wait
  4741 ;; This function is called by:
  4742 ;;		_write_i2c
  4743 ;;		_read_i2c
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text8
  4748   0024F2                     __ptext8:
  4749                           	callstack 0
  4750   0024F2                     _i2c_Address:
  4751                           	callstack 23
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;incstack = 0
  4755                           ;i2c_Address@address stored from wreg
  4756   0024F2  0100               	movlb	0	; () banked
  4757   0024F4  6F8E               	movwf	i2c_Address@address& (0+255),b
  4758                           
  4759                           ;i2c.c: 79: unsigned char l_address;;i2c.c: 81: l_address=address;
  4760   0024F6  C08E  F08F         	movff	i2c_Address@address,i2c_Address@l_address
  4761                           
  4762                           ;i2c.c: 82: l_address += mode;
  4763   0024FA  0100               	movlb	0	; () banked
  4764   0024FC  518D               	movf	i2c_Address@mode& (0+255),w,b
  4765   0024FE  278F               	addwf	i2c_Address@l_address& (0+255),f,b
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;i2c.c: 83: i2c_Wait();
  4769   002500  ECA7  F012         	call	_i2c_Wait	;wreg free
  4770                           
  4771                           ;i2c.c: 84: SSP2BUF = l_address;
  4772   002504  C08F  FF6F         	movff	i2c_Address@l_address,3951	;volatile
  4773   002508  0012               	return		;funcret
  4774   00250A                     __end_of_i2c_Address:
  4775                           	callstack 0
  4776                           
  4777 ;; *************** function _i2c_Wait *****************
  4778 ;; Defined at:
  4779 ;;		line 44 in file "i2c.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;		None
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;Total ram usage:        1 bytes
  4798 ;; Hardware stack levels used: 1
  4799 ;; Hardware stack levels required when called: 5
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_i2c_Start
  4804 ;;		_i2c_Restart
  4805 ;;		_i2c_Stop
  4806 ;;		_i2c_Write
  4807 ;;		_i2c_Address
  4808 ;;		_i2c_Read
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text9
  4813   00254E                     __ptext9:
  4814                           	callstack 0
  4815   00254E                     _i2c_Wait:
  4816                           	callstack 23
  4817                           
  4818                           ;i2c.c: 45: while ( ( SSP2CON2 & 0x1F ) || ( SSP2STAT & 0x04 ) );
  4819                           
  4820                           ;incstack = 0
  4821   00254E  CF6B F08C          	movff	3947,??_i2c_Wait	;volatile
  4822   002552  0E1F               	movlw	31
  4823   002554  0100               	movlb	0	; () banked
  4824   002556  178C               	andwf	??_i2c_Wait& (0+255),f,b
  4825   002558  A4D8               	btfss	status,2,c
  4826   00255A  D7F9               	goto	__ptext9
  4827                           
  4828                           ; BSR set to: 0
  4829   00255C  A46D               	btfss	109,2,c	;volatile
  4830   00255E  0012               	return	
  4831   002560  D7F6               	goto	__ptext9
  4832   002562                     __end_of_i2c_Wait:
  4833                           	callstack 0
  4834                           
  4835 ;; *************** function ___aldiv *****************
  4836 ;; Defined at:
  4837 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  dividend        4   10[BANK0 ] long 
  4840 ;;  divisor         4   14[BANK0 ] long 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  quotient        4   20[BANK0 ] long 
  4843 ;;  sign            1   19[BANK0 ] unsigned char 
  4844 ;;  counter         1   18[BANK0 ] unsigned char 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  4   10[BANK0 ] long 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4854 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;Total ram usage:       14 bytes
  4859 ;; Hardware stack levels used: 1
  4860 ;; Hardware stack levels required when called: 5
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_main
  4865 ;;		_write_i2c
  4866 ;;		_read_i2c
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text10
  4871   001CEE                     __ptext10:
  4872                           	callstack 0
  4873   001CEE                     ___aldiv:
  4874                           	callstack 24
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;incstack = 0
  4878   001CEE  0E00               	movlw	0
  4879   001CF0  0100               	movlb	0	; () banked
  4880   001CF2  6F9F               	movwf	___aldiv@sign& (0+255),b
  4881                           
  4882                           ; BSR set to: 0
  4883   001CF4  AF9D               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  4884   001CF6  D00A               	goto	l5378
  4885                           
  4886                           ; BSR set to: 0
  4887   001CF8  1F9D               	comf	(___aldiv@divisor+3)& (0+255),f,b
  4888   001CFA  1F9C               	comf	(___aldiv@divisor+2)& (0+255),f,b
  4889   001CFC  1F9B               	comf	(___aldiv@divisor+1)& (0+255),f,b
  4890   001CFE  6D9A               	negf	___aldiv@divisor& (0+255),b
  4891   001D00  0E00               	movlw	0
  4892   001D02  239B               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  4893   001D04  239C               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  4894   001D06  239D               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  4895                           
  4896                           ; BSR set to: 0
  4897   001D08  0E01               	movlw	1
  4898   001D0A  6F9F               	movwf	___aldiv@sign& (0+255),b
  4899   001D0C                     l5378:
  4900                           
  4901                           ; BSR set to: 0
  4902   001D0C  AF99               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  4903   001D0E  D00A               	goto	l5384
  4904                           
  4905                           ; BSR set to: 0
  4906   001D10  1F99               	comf	(___aldiv@dividend+3)& (0+255),f,b
  4907   001D12  1F98               	comf	(___aldiv@dividend+2)& (0+255),f,b
  4908   001D14  1F97               	comf	(___aldiv@dividend+1)& (0+255),f,b
  4909   001D16  6D96               	negf	___aldiv@dividend& (0+255),b
  4910   001D18  0E00               	movlw	0
  4911   001D1A  2397               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  4912   001D1C  2398               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  4913   001D1E  2399               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  4914                           
  4915                           ; BSR set to: 0
  4916   001D20  0E01               	movlw	1
  4917   001D22  1B9F               	xorwf	___aldiv@sign& (0+255),f,b
  4918   001D24                     l5384:
  4919                           
  4920                           ; BSR set to: 0
  4921   001D24  0E00               	movlw	0
  4922   001D26  6FA0               	movwf	___aldiv@quotient& (0+255),b
  4923   001D28  0E00               	movlw	0
  4924   001D2A  6FA1               	movwf	(___aldiv@quotient+1)& (0+255),b
  4925   001D2C  0E00               	movlw	0
  4926   001D2E  6FA2               	movwf	(___aldiv@quotient+2)& (0+255),b
  4927   001D30  0E00               	movlw	0
  4928   001D32  6FA3               	movwf	(___aldiv@quotient+3)& (0+255),b
  4929                           
  4930                           ; BSR set to: 0
  4931   001D34  519A               	movf	___aldiv@divisor& (0+255),w,b
  4932   001D36  119B               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  4933   001D38  119C               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  4934   001D3A  119D               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  4935   001D3C  B4D8               	btfsc	status,2,c
  4936   001D3E  D02A               	goto	l5406
  4937                           
  4938                           ; BSR set to: 0
  4939   001D40  0E01               	movlw	1
  4940   001D42  6F9E               	movwf	___aldiv@counter& (0+255),b
  4941   001D44  D006               	goto	l5392
  4942   001D46                     l5390:
  4943                           
  4944                           ; BSR set to: 0
  4945   001D46  90D8               	bcf	status,0,c
  4946   001D48  379A               	rlcf	___aldiv@divisor& (0+255),f,b
  4947   001D4A  379B               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  4948   001D4C  379C               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  4949   001D4E  379D               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  4950   001D50  2B9E               	incf	___aldiv@counter& (0+255),f,b
  4951   001D52                     l5392:
  4952                           
  4953                           ; BSR set to: 0
  4954   001D52  AF9D               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  4955   001D54  D7F8               	goto	l5390
  4956   001D56                     u4420:
  4957                           
  4958                           ; BSR set to: 0
  4959   001D56  90D8               	bcf	status,0,c
  4960   001D58  37A0               	rlcf	___aldiv@quotient& (0+255),f,b
  4961   001D5A  37A1               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  4962   001D5C  37A2               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  4963   001D5E  37A3               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  4964                           
  4965                           ; BSR set to: 0
  4966   001D60  519A               	movf	___aldiv@divisor& (0+255),w,b
  4967   001D62  5D96               	subwf	___aldiv@dividend& (0+255),w,b
  4968   001D64  519B               	movf	(___aldiv@divisor+1)& (0+255),w,b
  4969   001D66  5997               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  4970   001D68  519C               	movf	(___aldiv@divisor+2)& (0+255),w,b
  4971   001D6A  5998               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  4972   001D6C  519D               	movf	(___aldiv@divisor+3)& (0+255),w,b
  4973   001D6E  5999               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  4974   001D70  A0D8               	btfss	status,0,c
  4975   001D72  D009               	goto	l5402
  4976                           
  4977                           ; BSR set to: 0
  4978   001D74  519A               	movf	___aldiv@divisor& (0+255),w,b
  4979   001D76  5F96               	subwf	___aldiv@dividend& (0+255),f,b
  4980   001D78  519B               	movf	(___aldiv@divisor+1)& (0+255),w,b
  4981   001D7A  5B97               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  4982   001D7C  519C               	movf	(___aldiv@divisor+2)& (0+255),w,b
  4983   001D7E  5B98               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  4984   001D80  519D               	movf	(___aldiv@divisor+3)& (0+255),w,b
  4985   001D82  5B99               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  4986                           
  4987                           ; BSR set to: 0
  4988   001D84  81A0               	bsf	___aldiv@quotient& (0+255),0,b
  4989   001D86                     l5402:
  4990                           
  4991                           ; BSR set to: 0
  4992   001D86  90D8               	bcf	status,0,c
  4993   001D88  339D               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  4994   001D8A  339C               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  4995   001D8C  339B               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  4996   001D8E  339A               	rrcf	___aldiv@divisor& (0+255),f,b
  4997                           
  4998                           ; BSR set to: 0
  4999   001D90  2F9E               	decfsz	___aldiv@counter& (0+255),f,b
  5000   001D92  D7E1               	goto	u4420
  5001   001D94                     l5406:
  5002                           
  5003                           ; BSR set to: 0
  5004   001D94  519F               	movf	___aldiv@sign& (0+255),w,b
  5005   001D96  B4D8               	btfsc	status,2,c
  5006   001D98  D008               	goto	l5410
  5007                           
  5008                           ; BSR set to: 0
  5009   001D9A  1FA3               	comf	(___aldiv@quotient+3)& (0+255),f,b
  5010   001D9C  1FA2               	comf	(___aldiv@quotient+2)& (0+255),f,b
  5011   001D9E  1FA1               	comf	(___aldiv@quotient+1)& (0+255),f,b
  5012   001DA0  6DA0               	negf	___aldiv@quotient& (0+255),b
  5013   001DA2  0E00               	movlw	0
  5014   001DA4  23A1               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  5015   001DA6  23A2               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  5016   001DA8  23A3               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  5017   001DAA                     l5410:
  5018                           
  5019                           ; BSR set to: 0
  5020   001DAA  C0A0  F096         	movff	___aldiv@quotient,?___aldiv
  5021   001DAE  C0A1  F097         	movff	___aldiv@quotient+1,?___aldiv+1
  5022   001DB2  C0A2  F098         	movff	___aldiv@quotient+2,?___aldiv+2
  5023   001DB6  C0A3  F099         	movff	___aldiv@quotient+3,?___aldiv+3
  5024                           
  5025                           ; BSR set to: 0
  5026   001DBA  0012               	return		;funcret
  5027   001DBC                     __end_of___aldiv:
  5028                           	callstack 0
  5029                           
  5030 ;; *************** function _initUSART *****************
  5031 ;; Defined at:
  5032 ;;		line 16 in file "usart.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		wreg, status,2
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5050 ;;Total ram usage:        0 bytes
  5051 ;; Hardware stack levels used: 1
  5052 ;; Hardware stack levels required when called: 5
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_main
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text11
  5061   00247C                     __ptext11:
  5062                           	callstack 0
  5063   00247C                     _initUSART:
  5064                           	callstack 25
  5065                           
  5066                           ;usart.c: 19: TXSTA2bits.SYNC = 0;
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;incstack = 0
  5070   00247C  98A8               	bcf	168,4,c	;volatile
  5071                           
  5072                           ;usart.c: 20: TXSTA2bits.TX9 = 0;
  5073   00247E  9CA8               	bcf	168,6,c	;volatile
  5074                           
  5075                           ;usart.c: 21: TXSTA2bits.TXEN = 1;
  5076   002480  8AA8               	bsf	168,5,c	;volatile
  5077                           
  5078                           ;usart.c: 22: RCSTA2bits.RX9 = 0;
  5079   002482  9C9C               	bcf	156,6,c	;volatile
  5080                           
  5081                           ;usart.c: 23: RCSTA2bits.CREN = 1;
  5082   002484  889C               	bsf	156,4,c	;volatile
  5083                           
  5084                           ;usart.c: 24: TXSTA2bits.CSRC = 0;
  5085   002486  9EA8               	bcf	168,7,c	;volatile
  5086                           
  5087                           ;usart.c: 25: RCSTA2bits.ADDEN = 1;
  5088   002488  869C               	bsf	156,3,c	;volatile
  5089                           
  5090                           ;usart.c: 26: RCSTA2bits.SPEN = 1;
  5091   00248A  8E9C               	bsf	156,7,c	;volatile
  5092                           
  5093                           ;usart.c: 29: BAUDCON2bits.BRG16 = 0;
  5094   00248C  967C               	bcf	124,3,c	;volatile
  5095                           
  5096                           ;usart.c: 30: TXSTA2bits.BRGH = 1;
  5097   00248E  84A8               	bsf	168,2,c	;volatile
  5098                           
  5099                           ;usart.c: 31: PIE3bits.RC2IE = 1;
  5100   002490  8AA3               	bsf	163,5,c	;volatile
  5101                           
  5102                           ;usart.c: 32: PIE3bits.TX2IE = 0;
  5103   002492  98A3               	bcf	163,4,c	;volatile
  5104                           
  5105                           ;usart.c: 34: SPBRG2 = 25;
  5106   002494  0E19               	movlw	25
  5107   002496  6EAB               	movwf	171,c	;volatile
  5108                           
  5109                           ;usart.c: 35: SPBRGH2 = 0;
  5110   002498  0E00               	movlw	0
  5111   00249A  6E7D               	movwf	125,c	;volatile
  5112   00249C  0012               	return		;funcret
  5113   00249E                     __end_of_initUSART:
  5114                           	callstack 0
  5115                           
  5116 ;; *************** function _init *****************
  5117 ;; Defined at:
  5118 ;;		line 1271 in file "main.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;Total ram usage:        0 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; Hardware stack levels required when called: 5
  5139 ;; This function calls:
  5140 ;;		Nothing
  5141 ;; This function is called by:
  5142 ;;		_main
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text12
  5147   00222A                     __ptext12:
  5148                           	callstack 0
  5149   00222A                     _init:
  5150                           	callstack 25
  5151                           
  5152                           ;main.c: 1273: PORTA=0;
  5153                           
  5154                           ;incstack = 0
  5155   00222A  0E00               	movlw	0
  5156   00222C  6E80               	movwf	128,c	;volatile
  5157                           
  5158                           ;main.c: 1281: LATA=0;
  5159   00222E  0E00               	movlw	0
  5160   002230  6E89               	movwf	137,c	;volatile
  5161                           
  5162                           ;main.c: 1290: ADCON0bits.VCFG1 = 0;
  5163   002232  9EC2               	bcf	194,7,c	;volatile
  5164                           
  5165                           ;main.c: 1291: ADCON0bits.VCFG0 = 0;
  5166   002234  9CC2               	bcf	194,6,c	;volatile
  5167                           
  5168                           ;main.c: 1293: ADCON1bits.ADFM = 1;
  5169   002236  8EC1               	bsf	193,7,c	;volatile
  5170                           
  5171                           ;main.c: 1294: ADCON1bits.ADCAL = 0;
  5172   002238  9CC1               	bcf	193,6,c	;volatile
  5173                           
  5174                           ;main.c: 1295: ADCON1bits.ACQT2 = 0;
  5175   00223A  9AC1               	bcf	193,5,c	;volatile
  5176                           
  5177                           ;main.c: 1296: ADCON1bits.ACQT1 = 1;
  5178   00223C  88C1               	bsf	193,4,c	;volatile
  5179                           
  5180                           ;main.c: 1297: ADCON1bits.ACQT0 = 0;
  5181   00223E  96C1               	bcf	193,3,c	;volatile
  5182                           
  5183                           ;main.c: 1298: ADCON1bits.ADCS2 = 1;
  5184   002240  84C1               	bsf	193,2,c	;volatile
  5185                           
  5186                           ;main.c: 1299: ADCON1bits.ADCS1 = 0;
  5187   002242  92C1               	bcf	193,1,c	;volatile
  5188                           
  5189                           ;main.c: 1300: ADCON1bits.ADCS0 = 0;
  5190   002244  90C1               	bcf	193,0,c	;volatile
  5191                           
  5192                           ;main.c: 1302: WDTCONbits.ADSHR = 1;
  5193   002246  88C0               	bsf	192,4,c	;volatile
  5194                           
  5195                           ;main.c: 1305: ANCON0bits.PCFG0 = 0;
  5196   002248  90C1               	bcf	193,0,c	;volatile
  5197                           
  5198                           ;main.c: 1306: ANCON0bits.PCFG1 = 1;
  5199   00224A  82C1               	bsf	193,1,c	;volatile
  5200                           
  5201                           ;main.c: 1307: ANCON0bits.PCFG2 = 1;
  5202   00224C  84C1               	bsf	193,2,c	;volatile
  5203                           
  5204                           ;main.c: 1308: ANCON0bits.PCFG3 = 1;
  5205   00224E  86C1               	bsf	193,3,c	;volatile
  5206                           
  5207                           ;main.c: 1309: ANCON0bits.PCFG4 = 1;
  5208   002250  88C1               	bsf	193,4,c	;volatile
  5209                           
  5210                           ;main.c: 1311: WDTCONbits.ADSHR = 0;
  5211   002252  98C0               	bcf	192,4,c	;volatile
  5212                           
  5213                           ;main.c: 1312: ADCON0bits.ADON=1;
  5214   002254  80C2               	bsf	194,0,c	;volatile
  5215                           
  5216                           ;main.c: 1318: TRISA = 0b00000000;
  5217   002256  0E00               	movlw	0
  5218   002258  6E92               	movwf	146,c	;volatile
  5219                           
  5220                           ;main.c: 1319: TRISB = 0b00000101;
  5221   00225A  0E05               	movlw	5
  5222   00225C  6E93               	movwf	147,c	;volatile
  5223                           
  5224                           ;main.c: 1320: TRISC = 0b10000000;
  5225   00225E  0E80               	movlw	128
  5226   002260  6E94               	movwf	148,c	;volatile
  5227                           
  5228                           ;main.c: 1321: TRISD = 0b01101111;
  5229   002262  0E6F               	movlw	111
  5230   002264  6E95               	movwf	149,c	;volatile
  5231                           
  5232                           ;main.c: 1322: TRISE = 0b11011001;
  5233   002266  0ED9               	movlw	217
  5234   002268  6E96               	movwf	150,c	;volatile
  5235                           
  5236                           ;main.c: 1323: TRISF = 0b00100000;
  5237   00226A  0E20               	movlw	32
  5238   00226C  6E97               	movwf	151,c	;volatile
  5239                           
  5240                           ;main.c: 1324: TRISG = 0b00000101;
  5241   00226E  0E05               	movlw	5
  5242   002270  6E98               	movwf	152,c	;volatile
  5243                           
  5244                           ;main.c: 1326: LATBbits.LATB3 = 0;
  5245   002272  968A               	bcf	138,3,c	;volatile
  5246                           
  5247                           ;main.c: 1327: LATCbits.LATC2 = 0;
  5248   002274  948B               	bcf	139,2,c	;volatile
  5249                           
  5250                           ;main.c: 1328: LATCbits.LATC3 = 0;
  5251   002276  968B               	bcf	139,3,c	;volatile
  5252                           
  5253                           ;main.c: 1329: LATCbits.LATC4 = 0;
  5254   002278  988B               	bcf	139,4,c	;volatile
  5255                           
  5256                           ;main.c: 1330: LATCbits.LATC5 = 0;
  5257   00227A  9A8B               	bcf	139,5,c	;volatile
  5258                           
  5259                           ;main.c: 1331: PORTDbits.RD5 = 1;
  5260   00227C  8A83               	bsf	131,5,c	;volatile
  5261                           
  5262                           ;main.c: 1332: PORTDbits.RD6 = 1;
  5263   00227E  8C83               	bsf	131,6,c	;volatile
  5264                           
  5265                           ;main.c: 1333: LATEbits.LATE5 = 0;
  5266   002280  9A8D               	bcf	141,5,c	;volatile
  5267                           
  5268                           ;main.c: 1334: LATFbits.LATF7 = 0;
  5269   002282  9E8E               	bcf	142,7,c	;volatile
  5270                           
  5271                           ;main.c: 1335: LATFbits.LATF6 = 0;
  5272   002284  9C8E               	bcf	142,6,c	;volatile
  5273   002286  0012               	return		;funcret
  5274   002288                     __end_of_init:
  5275                           	callstack 0
  5276                           
  5277 ;; *************** function _i2c_Init *****************
  5278 ;; Defined at:
  5279 ;;		line 27 in file "i2c.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;		None
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      void 
  5286 ;; Registers used:
  5287 ;;		wreg, status,2
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;Total ram usage:        0 bytes
  5298 ;; Hardware stack levels used: 1
  5299 ;; Hardware stack levels required when called: 5
  5300 ;; This function calls:
  5301 ;;		Nothing
  5302 ;; This function is called by:
  5303 ;;		_main
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           	psect	text13
  5308   002522                     __ptext13:
  5309                           	callstack 0
  5310   002522                     _i2c_Init:
  5311                           	callstack 25
  5312                           
  5313                           ;i2c.c: 31: TRISD5=1;
  5314                           
  5315                           ;incstack = 0
  5316   002522  8A95               	bsf	3989,5,c	;volatile
  5317                           
  5318                           ;i2c.c: 32: TRISD6=1;
  5319   002524  8C95               	bsf	3989,6,c	;volatile
  5320                           
  5321                           ;i2c.c: 34: SSP2CON1 = 0b00101000;
  5322   002526  0E28               	movlw	40
  5323   002528  6E6C               	movwf	108,c	;volatile
  5324                           
  5325                           ;i2c.c: 35: SSP2CON2 = 0x00;
  5326   00252A  0E00               	movlw	0
  5327   00252C  6E6B               	movwf	107,c	;volatile
  5328                           
  5329                           ;i2c.c: 37: SSP2ADD = 39;
  5330   00252E  0E27               	movlw	39
  5331   002530  6E6E               	movwf	110,c	;volatile
  5332                           
  5333                           ;i2c.c: 39: SSP2STAT = 0b11000000;
  5334   002532  0EC0               	movlw	192
  5335   002534  6E6D               	movwf	109,c	;volatile
  5336   002536  0012               	return		;funcret
  5337   002538                     __end_of_i2c_Init:
  5338                           	callstack 0
  5339                           
  5340 ;; *************** function _flushOut *****************
  5341 ;; Defined at:
  5342 ;;		line 1555 in file "main.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  i               2    0[BANK0 ] int 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5360 ;;Total ram usage:        2 bytes
  5361 ;; Hardware stack levels used: 1
  5362 ;; Hardware stack levels required when called: 5
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_main
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text14
  5371   00237E                     __ptext14:
  5372                           	callstack 0
  5373   00237E                     _flushOut:
  5374                           	callstack 25
  5375                           
  5376                           ;main.c: 1557: int i;;main.c: 1559: for(i=0; i<16; i++)
  5377                           
  5378                           ;incstack = 0
  5379   00237E  0E00               	movlw	0
  5380   002380  0100               	movlb	0	; () banked
  5381   002382  6F8D               	movwf	(flushOut@i+1)& (0+255),b
  5382   002384  0E00               	movlw	0
  5383   002386  6F8C               	movwf	flushOut@i& (0+255),b
  5384   002388                     l5604:
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;main.c: 1560: {;main.c: 1561: Serial_Buffer_Out[i]=0x00;
  5388   002388  0E60               	movlw	low _Serial_Buffer_Out
  5389   00238A  258C               	addwf	flushOut@i& (0+255),w,b
  5390   00238C  6ED9               	movwf	fsr2l,c
  5391   00238E  0E00               	movlw	high _Serial_Buffer_Out
  5392   002390  218D               	addwfc	(flushOut@i+1)& (0+255),w,b
  5393   002392  6EDA               	movwf	fsr2h,c
  5394   002394  0E00               	movlw	0
  5395   002396  6EDF               	movwf	indf2,c
  5396                           
  5397                           ; BSR set to: 0
  5398   002398  4B8C               	infsnz	flushOut@i& (0+255),f,b
  5399   00239A  2B8D               	incf	(flushOut@i+1)& (0+255),f,b
  5400                           
  5401                           ; BSR set to: 0
  5402   00239C  BF8D               	btfsc	(flushOut@i+1)& (0+255),7,b
  5403   00239E  D7F4               	goto	l5604
  5404   0023A0  518D               	movf	(flushOut@i+1)& (0+255),w,b
  5405   0023A2  E105               	bnz	u4530
  5406   0023A4  0E10               	movlw	16
  5407   0023A6  5D8C               	subwf	flushOut@i& (0+255),w,b
  5408   0023A8  B0D8               	btfsc	status,0,c
  5409   0023AA  0012               	return	
  5410   0023AC  D7ED               	goto	l5604
  5411   0023AE                     u4530:
  5412                           
  5413                           ; BSR set to: 0
  5414   0023AE  0012               	return		;funcret
  5415   0023B0                     __end_of_flushOut:
  5416                           	callstack 0
  5417                           
  5418 ;; *************** function _displayinit *****************
  5419 ;; Defined at:
  5420 ;;		line 19 in file "7segment.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;		None
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;		None
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		None
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;Total ram usage:        0 bytes
  5439 ;; Hardware stack levels used: 1
  5440 ;; Hardware stack levels required when called: 5
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_main
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text15
  5449   0024BE                     __ptext15:
  5450                           	callstack 0
  5451   0024BE                     _displayinit:
  5452                           	callstack 25
  5453                           
  5454                           ;7segment.c: 21: LATCbits.LATC2 = 1;
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;incstack = 0
  5458   0024BE  848B               	bsf	139,2,c	;volatile
  5459                           
  5460                           ;7segment.c: 22: LATCbits.LATC3 = 1;
  5461   0024C0  868B               	bsf	139,3,c	;volatile
  5462                           
  5463                           ;7segment.c: 23: LATCbits.LATC4 = 1;
  5464   0024C2  888B               	bsf	139,4,c	;volatile
  5465                           
  5466                           ;7segment.c: 24: LATCbits.LATC5 = 1;
  5467   0024C4  8A8B               	bsf	139,5,c	;volatile
  5468                           
  5469                           ;7segment.c: 25: LATAbits.LATA1 = 1;
  5470   0024C6  8289               	bsf	137,1,c	;volatile
  5471                           
  5472                           ;7segment.c: 26: LATAbits.LATA2 = 1;
  5473   0024C8  8489               	bsf	137,2,c	;volatile
  5474                           
  5475                           ;7segment.c: 27: LATAbits.LATA4 = 1;
  5476   0024CA  8889               	bsf	137,4,c	;volatile
  5477                           
  5478                           ;7segment.c: 28: LATAbits.LATA5 = 1;
  5479   0024CC  8A89               	bsf	137,5,c	;volatile
  5480                           
  5481                           ;7segment.c: 29: LATCbits.LATC0 = 1;
  5482   0024CE  808B               	bsf	139,0,c	;volatile
  5483                           
  5484                           ;7segment.c: 30: LATCbits.LATC1 = 1;
  5485   0024D0  828B               	bsf	139,1,c	;volatile
  5486                           
  5487                           ;7segment.c: 31: LATBbits.LATB4 = 1;
  5488   0024D2  888A               	bsf	138,4,c	;volatile
  5489                           
  5490                           ;7segment.c: 32: LATBbits.LATB5 = 1;
  5491   0024D4  8A8A               	bsf	138,5,c	;volatile
  5492   0024D6  0012               	return		;funcret
  5493   0024D8                     __end_of_displayinit:
  5494                           	callstack 0
  5495                           
  5496 ;; *************** function ___lmul *****************
  5497 ;; Defined at:
  5498 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5501 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  product         4    8[BANK0 ] unsigned long 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  4    0[BANK0 ] unsigned long 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5513 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5516 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5517 ;;Total ram usage:       12 bytes
  5518 ;; Hardware stack levels used: 1
  5519 ;; Hardware stack levels required when called: 5
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		_main
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           	psect	text16
  5528   002288                     __ptext16:
  5529                           	callstack 0
  5530   002288                     ___lmul:
  5531                           	callstack 25
  5532                           
  5533                           ;incstack = 0
  5534   002288  0E00               	movlw	0
  5535   00228A  0100               	movlb	0	; () banked
  5536   00228C  6F94               	movwf	___lmul@product& (0+255),b
  5537   00228E  0E00               	movlw	0
  5538   002290  6F95               	movwf	(___lmul@product+1)& (0+255),b
  5539   002292  0E00               	movlw	0
  5540   002294  6F96               	movwf	(___lmul@product+2)& (0+255),b
  5541   002296  0E00               	movlw	0
  5542   002298  6F97               	movwf	(___lmul@product+3)& (0+255),b
  5543   00229A                     l5616:
  5544                           
  5545                           ; BSR set to: 0
  5546   00229A  A18C               	btfss	___lmul@multiplier& (0+255),0,b
  5547   00229C  D008               	goto	l5620
  5548                           
  5549                           ; BSR set to: 0
  5550   00229E  5190               	movf	___lmul@multiplicand& (0+255),w,b
  5551   0022A0  2794               	addwf	___lmul@product& (0+255),f,b
  5552   0022A2  5191               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  5553   0022A4  2395               	addwfc	(___lmul@product+1)& (0+255),f,b
  5554   0022A6  5192               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  5555   0022A8  2396               	addwfc	(___lmul@product+2)& (0+255),f,b
  5556   0022AA  5193               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  5557   0022AC  2397               	addwfc	(___lmul@product+3)& (0+255),f,b
  5558   0022AE                     l5620:
  5559                           
  5560                           ; BSR set to: 0
  5561   0022AE  90D8               	bcf	status,0,c
  5562   0022B0  3790               	rlcf	___lmul@multiplicand& (0+255),f,b
  5563   0022B2  3791               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  5564   0022B4  3792               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  5565   0022B6  3793               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  5566                           
  5567                           ; BSR set to: 0
  5568   0022B8  90D8               	bcf	status,0,c
  5569   0022BA  338F               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  5570   0022BC  338E               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  5571   0022BE  338D               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  5572   0022C0  338C               	rrcf	___lmul@multiplier& (0+255),f,b
  5573   0022C2  518C               	movf	___lmul@multiplier& (0+255),w,b
  5574   0022C4  118D               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  5575   0022C6  118E               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  5576   0022C8  118F               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  5577   0022CA  A4D8               	btfss	status,2,c
  5578   0022CC  D7E6               	goto	l5616
  5579                           
  5580                           ; BSR set to: 0
  5581   0022CE  C094  F08C         	movff	___lmul@product,?___lmul
  5582   0022D2  C095  F08D         	movff	___lmul@product+1,?___lmul+1
  5583   0022D6  C096  F08E         	movff	___lmul@product+2,?___lmul+2
  5584   0022DA  C097  F08F         	movff	___lmul@product+3,?___lmul+3
  5585                           
  5586                           ; BSR set to: 0
  5587   0022DE  0012               	return		;funcret
  5588   0022E0                     __end_of___lmul:
  5589                           	callstack 0
  5590                           
  5591 ;; *************** function ___almod *****************
  5592 ;; Defined at:
  5593 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\almod.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  dividend        4    0[BANK0 ] long 
  5596 ;;  divisor         4    4[BANK0 ] long 
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;  sign            1    9[BANK0 ] unsigned char 
  5599 ;;  counter         1    8[BANK0 ] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  4    0[BANK0 ] long 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5609 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5610 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5612 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5613 ;;Total ram usage:       10 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; Hardware stack levels required when called: 5
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_main
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text17
  5624   001E88                     __ptext17:
  5625                           	callstack 0
  5626   001E88                     ___almod:
  5627                           	callstack 25
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;incstack = 0
  5631   001E88  0E00               	movlw	0
  5632   001E8A  0100               	movlb	0	; () banked
  5633   001E8C  6F95               	movwf	___almod@sign& (0+255),b
  5634                           
  5635                           ; BSR set to: 0
  5636   001E8E  AF8F               	btfss	(___almod@dividend+3)& (0+255),7,b
  5637   001E90  D00A               	goto	l5632
  5638                           
  5639                           ; BSR set to: 0
  5640   001E92  1F8F               	comf	(___almod@dividend+3)& (0+255),f,b
  5641   001E94  1F8E               	comf	(___almod@dividend+2)& (0+255),f,b
  5642   001E96  1F8D               	comf	(___almod@dividend+1)& (0+255),f,b
  5643   001E98  6D8C               	negf	___almod@dividend& (0+255),b
  5644   001E9A  0E00               	movlw	0
  5645   001E9C  238D               	addwfc	(___almod@dividend+1)& (0+255),f,b
  5646   001E9E  238E               	addwfc	(___almod@dividend+2)& (0+255),f,b
  5647   001EA0  238F               	addwfc	(___almod@dividend+3)& (0+255),f,b
  5648                           
  5649                           ; BSR set to: 0
  5650   001EA2  0E01               	movlw	1
  5651   001EA4  6F95               	movwf	___almod@sign& (0+255),b
  5652   001EA6                     l5632:
  5653                           
  5654                           ; BSR set to: 0
  5655   001EA6  AF93               	btfss	(___almod@divisor+3)& (0+255),7,b
  5656   001EA8  D008               	goto	l5636
  5657                           
  5658                           ; BSR set to: 0
  5659   001EAA  1F93               	comf	(___almod@divisor+3)& (0+255),f,b
  5660   001EAC  1F92               	comf	(___almod@divisor+2)& (0+255),f,b
  5661   001EAE  1F91               	comf	(___almod@divisor+1)& (0+255),f,b
  5662   001EB0  6D90               	negf	___almod@divisor& (0+255),b
  5663   001EB2  0E00               	movlw	0
  5664   001EB4  2391               	addwfc	(___almod@divisor+1)& (0+255),f,b
  5665   001EB6  2392               	addwfc	(___almod@divisor+2)& (0+255),f,b
  5666   001EB8  2393               	addwfc	(___almod@divisor+3)& (0+255),f,b
  5667   001EBA                     l5636:
  5668                           
  5669                           ; BSR set to: 0
  5670   001EBA  5190               	movf	___almod@divisor& (0+255),w,b
  5671   001EBC  1191               	iorwf	(___almod@divisor+1)& (0+255),w,b
  5672   001EBE  1192               	iorwf	(___almod@divisor+2)& (0+255),w,b
  5673   001EC0  1193               	iorwf	(___almod@divisor+3)& (0+255),w,b
  5674   001EC2  B4D8               	btfsc	status,2,c
  5675   001EC4  D024               	goto	l5652
  5676                           
  5677                           ; BSR set to: 0
  5678   001EC6  0E01               	movlw	1
  5679   001EC8  6F94               	movwf	___almod@counter& (0+255),b
  5680   001ECA  D006               	goto	l5642
  5681   001ECC                     l5640:
  5682                           
  5683                           ; BSR set to: 0
  5684   001ECC  90D8               	bcf	status,0,c
  5685   001ECE  3790               	rlcf	___almod@divisor& (0+255),f,b
  5686   001ED0  3791               	rlcf	(___almod@divisor+1)& (0+255),f,b
  5687   001ED2  3792               	rlcf	(___almod@divisor+2)& (0+255),f,b
  5688   001ED4  3793               	rlcf	(___almod@divisor+3)& (0+255),f,b
  5689   001ED6  2B94               	incf	___almod@counter& (0+255),f,b
  5690   001ED8                     l5642:
  5691                           
  5692                           ; BSR set to: 0
  5693   001ED8  AF93               	btfss	(___almod@divisor+3)& (0+255),7,b
  5694   001EDA  D7F8               	goto	l5640
  5695   001EDC                     u4590:
  5696                           
  5697                           ; BSR set to: 0
  5698   001EDC  5190               	movf	___almod@divisor& (0+255),w,b
  5699   001EDE  5D8C               	subwf	___almod@dividend& (0+255),w,b
  5700   001EE0  5191               	movf	(___almod@divisor+1)& (0+255),w,b
  5701   001EE2  598D               	subwfb	(___almod@dividend+1)& (0+255),w,b
  5702   001EE4  5192               	movf	(___almod@divisor+2)& (0+255),w,b
  5703   001EE6  598E               	subwfb	(___almod@dividend+2)& (0+255),w,b
  5704   001EE8  5193               	movf	(___almod@divisor+3)& (0+255),w,b
  5705   001EEA  598F               	subwfb	(___almod@dividend+3)& (0+255),w,b
  5706   001EEC  A0D8               	btfss	status,0,c
  5707   001EEE  D008               	goto	l5648
  5708                           
  5709                           ; BSR set to: 0
  5710   001EF0  5190               	movf	___almod@divisor& (0+255),w,b
  5711   001EF2  5F8C               	subwf	___almod@dividend& (0+255),f,b
  5712   001EF4  5191               	movf	(___almod@divisor+1)& (0+255),w,b
  5713   001EF6  5B8D               	subwfb	(___almod@dividend+1)& (0+255),f,b
  5714   001EF8  5192               	movf	(___almod@divisor+2)& (0+255),w,b
  5715   001EFA  5B8E               	subwfb	(___almod@dividend+2)& (0+255),f,b
  5716   001EFC  5193               	movf	(___almod@divisor+3)& (0+255),w,b
  5717   001EFE  5B8F               	subwfb	(___almod@dividend+3)& (0+255),f,b
  5718   001F00                     l5648:
  5719                           
  5720                           ; BSR set to: 0
  5721   001F00  90D8               	bcf	status,0,c
  5722   001F02  3393               	rrcf	(___almod@divisor+3)& (0+255),f,b
  5723   001F04  3392               	rrcf	(___almod@divisor+2)& (0+255),f,b
  5724   001F06  3391               	rrcf	(___almod@divisor+1)& (0+255),f,b
  5725   001F08  3390               	rrcf	___almod@divisor& (0+255),f,b
  5726                           
  5727                           ; BSR set to: 0
  5728   001F0A  2F94               	decfsz	___almod@counter& (0+255),f,b
  5729   001F0C  D7E7               	goto	u4590
  5730   001F0E                     l5652:
  5731                           
  5732                           ; BSR set to: 0
  5733   001F0E  5195               	movf	___almod@sign& (0+255),w,b
  5734   001F10  B4D8               	btfsc	status,2,c
  5735   001F12  D008               	goto	l5656
  5736                           
  5737                           ; BSR set to: 0
  5738   001F14  1F8F               	comf	(___almod@dividend+3)& (0+255),f,b
  5739   001F16  1F8E               	comf	(___almod@dividend+2)& (0+255),f,b
  5740   001F18  1F8D               	comf	(___almod@dividend+1)& (0+255),f,b
  5741   001F1A  6D8C               	negf	___almod@dividend& (0+255),b
  5742   001F1C  0E00               	movlw	0
  5743   001F1E  238D               	addwfc	(___almod@dividend+1)& (0+255),f,b
  5744   001F20  238E               	addwfc	(___almod@dividend+2)& (0+255),f,b
  5745   001F22  238F               	addwfc	(___almod@dividend+3)& (0+255),f,b
  5746   001F24                     l5656:
  5747                           
  5748                           ; BSR set to: 0
  5749   001F24  C08C  F08C         	movff	___almod@dividend,?___almod
  5750   001F28  C08D  F08D         	movff	___almod@dividend+1,?___almod+1
  5751   001F2C  C08E  F08E         	movff	___almod@dividend+2,?___almod+2
  5752   001F30  C08F  F08F         	movff	___almod@dividend+3,?___almod+3
  5753                           
  5754                           ; BSR set to: 0
  5755   001F34  0012               	return		;funcret
  5756   001F36                     __end_of___almod:
  5757                           	callstack 0
  5758                           
  5759 ;; *************** function _Write1USART *****************
  5760 ;; Defined at:
  5761 ;;		line 41 in file "usart.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  data            1    wreg     unsigned char 
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;  data            1    0[BANK0 ] unsigned char 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1    wreg      void 
  5768 ;; Registers used:
  5769 ;;		wreg
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;Total ram usage:        1 bytes
  5780 ;; Hardware stack levels used: 1
  5781 ;; Hardware stack levels required when called: 5
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_main
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           	psect	text18
  5790   0025BA                     __ptext18:
  5791                           	callstack 0
  5792   0025BA                     _Write1USART:
  5793                           	callstack 25
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;incstack = 0
  5797                           ;Write1USART@data stored from wreg
  5798   0025BA  0100               	movlb	0	; () banked
  5799   0025BC  6F8C               	movwf	Write1USART@data& (0+255),b
  5800                           
  5801                           ;usart.c: 43: TXREG2 = data;
  5802   0025BE  C08C  FFA9         	movff	Write1USART@data,4009	;volatile
  5803   0025C2                     l744:
  5804   0025C2  B2A8               	btfsc	168,1,c	;volatile
  5805   0025C4  0012               	return	
  5806   0025C6  D7FD               	goto	l744
  5807   0025C8                     __end_of_Write1USART:
  5808                           	callstack 0
  5809                           
  5810 ;; *************** function _Lifter_Up *****************
  5811 ;; Defined at:
  5812 ;;		line 1394 in file "main.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;		None
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;		None
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  1    wreg      void 
  5819 ;; Registers used:
  5820 ;;		None
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;Total ram usage:        0 bytes
  5831 ;; Hardware stack levels used: 1
  5832 ;; Hardware stack levels required when called: 5
  5833 ;; This function calls:
  5834 ;;		Nothing
  5835 ;; This function is called by:
  5836 ;;		_main
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text19
  5841   002610                     __ptext19:
  5842                           	callstack 0
  5843   002610                     _Lifter_Up:
  5844                           	callstack 25
  5845                           
  5846                           ;main.c: 1396: LATFbits.LATF7 = 1;
  5847                           
  5848                           ;incstack = 0
  5849   002610  8E8E               	bsf	142,7,c	;volatile
  5850                           
  5851                           ;main.c: 1397: LATFbits.LATF6 = 0;
  5852   002612  9C8E               	bcf	142,6,c	;volatile
  5853   002614  0012               	return		;funcret
  5854   002616                     __end_of_Lifter_Up:
  5855                           	callstack 0
  5856                           
  5857 ;; *************** function _Lifter_Init *****************
  5858 ;; Defined at:
  5859 ;;		line 1365 in file "main.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;		None
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;		None
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  1    wreg      void 
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, cstack
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5877 ;;Total ram usage:        0 bytes
  5878 ;; Hardware stack levels used: 1
  5879 ;; Hardware stack levels required when called: 6
  5880 ;; This function calls:
  5881 ;;		_Lifter_Down
  5882 ;;		_Lifter_Stop
  5883 ;; This function is called by:
  5884 ;;		_main
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           	psect	text20
  5889   002458                     __ptext20:
  5890                           	callstack 0
  5891   002458                     _Lifter_Init:
  5892                           	callstack 24
  5893                           
  5894                           ;main.c: 1368: if (PORTEbits.RE7)
  5895                           
  5896                           ;incstack = 0
  5897   002458  AE84               	btfss	132,7,c	;volatile
  5898   00245A  D00A               	goto	l5578
  5899                           
  5900                           ;main.c: 1369: {;main.c: 1370: if(PORTEbits.RE7)
  5901   00245C  AE84               	btfss	132,7,c	;volatile
  5902   00245E  0012               	return	
  5903                           
  5904                           ;main.c: 1371: {;main.c: 1372: Lifter_Down();
  5905   002460  EC0E  F013         	call	_Lifter_Down	;wreg free
  5906                           
  5907                           ;main.c: 1373: error_number = '5';
  5908   002464  0E35               	movlw	53
  5909   002466  6E55               	movwf	_error_number^0,c	;volatile
  5910                           
  5911                           ;main.c: 1374: error = 1;
  5912   002468  0E01               	movlw	1
  5913   00246A  0100               	movlb	0	; () banked
  5914   00246C  6F88               	movwf	_error& (0+255),b	;volatile
  5915   00246E  0012               	return	
  5916   002470                     l5578:
  5917                           
  5918                           ;main.c: 1377: else;main.c: 1378: {;main.c: 1379: lifter=standby;
  5919   002470  0E00               	movlw	0
  5920   002472  0100               	movlb	0	; () banked
  5921   002474  6F87               	movwf	_lifter& (0+255),b
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;main.c: 1380: Lifter_Stop();
  5925   002476  EC0B  F013         	call	_Lifter_Stop	;wreg free
  5926   00247A  0012               	return		;funcret
  5927   00247C                     __end_of_Lifter_Init:
  5928                           	callstack 0
  5929                           
  5930 ;; *************** function _Lifter_Stop *****************
  5931 ;; Defined at:
  5932 ;;		line 1387 in file "main.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;		None
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;		None
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  1    wreg      void 
  5939 ;; Registers used:
  5940 ;;		None
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;Total ram usage:        0 bytes
  5951 ;; Hardware stack levels used: 1
  5952 ;; Hardware stack levels required when called: 5
  5953 ;; This function calls:
  5954 ;;		Nothing
  5955 ;; This function is called by:
  5956 ;;		_main
  5957 ;;		_Lifter_Init
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text21
  5962   002616                     __ptext21:
  5963                           	callstack 0
  5964   002616                     _Lifter_Stop:
  5965                           	callstack 25
  5966                           
  5967                           ;main.c: 1389: LATFbits.LATF7 = 1;
  5968                           
  5969                           ;incstack = 0
  5970   002616  8E8E               	bsf	142,7,c	;volatile
  5971                           
  5972                           ;main.c: 1390: LATFbits.LATF6 = 1;
  5973   002618  8C8E               	bsf	142,6,c	;volatile
  5974   00261A  0012               	return		;funcret
  5975   00261C                     __end_of_Lifter_Stop:
  5976                           	callstack 0
  5977                           
  5978 ;; *************** function _Lifter_Down *****************
  5979 ;; Defined at:
  5980 ;;		line 1401 in file "main.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;		None
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1    wreg      void 
  5987 ;; Registers used:
  5988 ;;		None
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;Total ram usage:        0 bytes
  5999 ;; Hardware stack levels used: 1
  6000 ;; Hardware stack levels required when called: 5
  6001 ;; This function calls:
  6002 ;;		Nothing
  6003 ;; This function is called by:
  6004 ;;		_main
  6005 ;;		_Lifter_Init
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text22
  6010   00261C                     __ptext22:
  6011                           	callstack 0
  6012   00261C                     _Lifter_Down:
  6013                           	callstack 24
  6014                           
  6015                           ;main.c: 1403: LATFbits.LATF7 = 0;
  6016                           
  6017                           ;incstack = 0
  6018   00261C  9E8E               	bcf	142,7,c	;volatile
  6019                           
  6020                           ;main.c: 1404: LATFbits.LATF6 = 1;
  6021   00261E  8C8E               	bsf	142,6,c	;volatile
  6022   002620  0012               	return		;funcret
  6023   002622                     __end_of_Lifter_Down:
  6024                           	callstack 0
  6025                           
  6026 ;; *************** function _Lifter_Brake *****************
  6027 ;; Defined at:
  6028 ;;		line 1407 in file "main.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;		None
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  1    wreg      void 
  6035 ;; Registers used:
  6036 ;;		None
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;Total ram usage:        0 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; Hardware stack levels required when called: 5
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_main
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           	psect	text23
  6057   002622                     __ptext23:
  6058                           	callstack 0
  6059   002622                     _Lifter_Brake:
  6060                           	callstack 25
  6061                           
  6062                           ;main.c: 1409: LATFbits.LATF7 = 1;
  6063                           
  6064                           ;incstack = 0
  6065   002622  8E8E               	bsf	142,7,c	;volatile
  6066                           
  6067                           ;main.c: 1410: LATFbits.LATF6 = 1;
  6068   002624  8C8E               	bsf	142,6,c	;volatile
  6069   002626  0012               	return		;funcret
  6070   002628                     __end_of_Lifter_Brake:
  6071                           	callstack 0
  6072                           
  6073 ;; *************** function _InitTimer2 *****************
  6074 ;; Defined at:
  6075 ;;		line 1528 in file "main.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;Total ram usage:        0 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; Hardware stack levels required when called: 5
  6096 ;; This function calls:
  6097 ;;		Nothing
  6098 ;; This function is called by:
  6099 ;;		_main
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text24
  6104   002562                     __ptext24:
  6105                           	callstack 0
  6106   002562                     _InitTimer2:
  6107                           	callstack 25
  6108                           
  6109                           ;main.c: 1530: T2CON = 0b00101010;
  6110                           
  6111                           ;incstack = 0
  6112   002562  0E2A               	movlw	42
  6113   002564  6ECA               	movwf	202,c	;volatile
  6114                           
  6115                           ;main.c: 1531: PR2 = 0xFF;
  6116   002566  68CB               	setf	203,c	;volatile
  6117                           
  6118                           ;main.c: 1532: TMR2IF = 0;
  6119   002568  929E               	bcf	3998,1,c	;volatile
  6120                           
  6121                           ;main.c: 1533: TMR2IE = 0;
  6122   00256A  929D               	bcf	3997,1,c	;volatile
  6123                           
  6124                           ;main.c: 1534: IPR1bits.TMR2IP=1;
  6125   00256C  829F               	bsf	159,1,c	;volatile
  6126                           
  6127                           ;main.c: 1536: TMR2IF_triggered = !1;
  6128   00256E  0E00               	movlw	0
  6129   002570  0100               	movlb	0	; () banked
  6130   002572  6F89               	movwf	_TMR2IF_triggered& (0+255),b	;volatile
  6131                           
  6132                           ; BSR set to: 0
  6133   002574  0012               	return		;funcret
  6134   002576                     __end_of_InitTimer2:
  6135                           	callstack 0
  6136                           
  6137 ;; *************** function _InitTimer1 *****************
  6138 ;; Defined at:
  6139 ;;		line 1514 in file "main.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;		None
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6157 ;;Total ram usage:        0 bytes
  6158 ;; Hardware stack levels used: 1
  6159 ;; Hardware stack levels required when called: 5
  6160 ;; This function calls:
  6161 ;;		Nothing
  6162 ;; This function is called by:
  6163 ;;		_main
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text25
  6168   00250A                     __ptext25:
  6169                           	callstack 0
  6170   00250A                     _InitTimer1:
  6171                           	callstack 25
  6172                           
  6173                           ;main.c: 1516: T1CON = 0b00110001;
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;incstack = 0
  6177   00250A  0E31               	movlw	49
  6178   00250C  6ECD               	movwf	205,c	;volatile
  6179                           
  6180                           ;main.c: 1519: TMR1 = 0x9E57;
  6181   00250E  0E9E               	movlw	158
  6182   002510  6ECF               	movwf	207,c	;volatile
  6183   002512  0E57               	movlw	87
  6184   002514  6ECE               	movwf	206,c	;volatile
  6185                           
  6186                           ;main.c: 1520: TMR1IF = 0;
  6187   002516  909E               	bcf	3998,0,c	;volatile
  6188                           
  6189                           ;main.c: 1521: TMR1IE = 1;
  6190   002518  809D               	bsf	3997,0,c	;volatile
  6191                           
  6192                           ;main.c: 1522: IPR1bits.TMR1IP=1;
  6193   00251A  809F               	bsf	159,0,c	;volatile
  6194                           
  6195                           ;main.c: 1524: TMR1IF_triggered = !1;
  6196   00251C  0E00               	movlw	0
  6197   00251E  6E42               	movwf	_TMR1IF_triggered^0,c	;volatile
  6198   002520  0012               	return		;funcret
  6199   002522                     __end_of_InitTimer1:
  6200                           	callstack 0
  6201                           
  6202 ;; *************** function _InitTimer0 *****************
  6203 ;; Defined at:
  6204 ;;		line 1501 in file "main.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      void 
  6211 ;; Registers used:
  6212 ;;		wreg, status,2
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;Total ram usage:        0 bytes
  6223 ;; Hardware stack levels used: 1
  6224 ;; Hardware stack levels required when called: 5
  6225 ;; This function calls:
  6226 ;;		Nothing
  6227 ;; This function is called by:
  6228 ;;		_main
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           	psect	text26
  6233   002538                     __ptext26:
  6234                           	callstack 0
  6235   002538                     _InitTimer0:
  6236                           	callstack 25
  6237                           
  6238                           ;main.c: 1503: T0CON = 0b11000110;
  6239                           
  6240                           ;incstack = 0
  6241   002538  0EC6               	movlw	198
  6242   00253A  6ED5               	movwf	213,c	;volatile
  6243                           
  6244                           ;main.c: 1505: TMR0 = 0xF9E4;
  6245   00253C  0EF9               	movlw	249
  6246   00253E  6ED7               	movwf	215,c	;volatile
  6247   002540  0EE4               	movlw	228
  6248   002542  6ED6               	movwf	214,c	;volatile
  6249                           
  6250                           ;main.c: 1508: INTCONbits.TMR0IE = 1;
  6251   002544  8AF2               	bsf	242,5,c	;volatile
  6252                           
  6253                           ;main.c: 1509: INTCONbits.TMR0IF = 0;
  6254   002546  94F2               	bcf	242,2,c	;volatile
  6255                           
  6256                           ;main.c: 1510: TMR0IF_triggered = !1;
  6257   002548  0E00               	movlw	0
  6258   00254A  6E43               	movwf	_TMR0IF_triggered^0,c	;volatile
  6259   00254C  0012               	return		;funcret
  6260   00254E                     __end_of_InitTimer0:
  6261                           	callstack 0
  6262                           
  6263 ;; *************** function _Feeder_Stop *****************
  6264 ;; Defined at:
  6265 ;;		line 1416 in file "main.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		None
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;Total ram usage:        0 bytes
  6284 ;; Hardware stack levels used: 1
  6285 ;; Hardware stack levels required when called: 5
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_main
  6290 ;;		_CapFillingStart
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           	psect	text27
  6295   002628                     __ptext27:
  6296                           	callstack 0
  6297   002628                     _Feeder_Stop:
  6298                           	callstack 25
  6299                           
  6300                           ;main.c: 1418: LATEbits.LATE2 = 1;
  6301                           
  6302                           ;incstack = 0
  6303   002628  848D               	bsf	141,2,c	;volatile
  6304                           
  6305                           ;main.c: 1419: LATEbits.LATE1 = 1;
  6306   00262A  828D               	bsf	141,1,c	;volatile
  6307   00262C  0012               	return		;funcret
  6308   00262E                     __end_of_Feeder_Stop:
  6309                           	callstack 0
  6310                           
  6311 ;; *************** function _Feeder_Rotate2 *****************
  6312 ;; Defined at:
  6313 ;;		line 1428 in file "main.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;		None
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;		None
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  1    wreg      void 
  6320 ;; Registers used:
  6321 ;;		None
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;Total ram usage:        0 bytes
  6332 ;; Hardware stack levels used: 1
  6333 ;; Hardware stack levels required when called: 5
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_main
  6338 ;;		_CapFillingStart
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text28
  6343   00262E                     __ptext28:
  6344                           	callstack 0
  6345   00262E                     _Feeder_Rotate2:
  6346                           	callstack 25
  6347                           
  6348                           ;main.c: 1430: LATEbits.LATE2 = 1;
  6349                           
  6350                           ;incstack = 0
  6351   00262E  848D               	bsf	141,2,c	;volatile
  6352                           
  6353                           ;main.c: 1431: LATEbits.LATE1 = 0;
  6354   002630  928D               	bcf	141,1,c	;volatile
  6355   002632  0012               	return		;funcret
  6356   002634                     __end_of_Feeder_Rotate2:
  6357                           	callstack 0
  6358                           
  6359 ;; *************** function _Feeder_Rotate1 *****************
  6360 ;; Defined at:
  6361 ;;		line 1422 in file "main.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;		None
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;		None
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  1    wreg      void 
  6368 ;; Registers used:
  6369 ;;		None
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;Total ram usage:        0 bytes
  6380 ;; Hardware stack levels used: 1
  6381 ;; Hardware stack levels required when called: 5
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_main
  6386 ;;		_CapFillingStart
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text29
  6391   002634                     __ptext29:
  6392                           	callstack 0
  6393   002634                     _Feeder_Rotate1:
  6394                           	callstack 25
  6395                           
  6396                           ;main.c: 1424: LATEbits.LATE2 = 0;
  6397                           
  6398                           ;incstack = 0
  6399   002634  948D               	bcf	141,2,c	;volatile
  6400                           
  6401                           ;main.c: 1425: LATEbits.LATE1 = 1;
  6402   002636  828D               	bsf	141,1,c	;volatile
  6403   002638  0012               	return		;funcret
  6404   00263A                     __end_of_Feeder_Rotate1:
  6405                           	callstack 0
  6406                           
  6407 ;; *************** function _Display_Version *****************
  6408 ;; Defined at:
  6409 ;;		line 251 in file "7segment.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;		None
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  cdigit          2   14[BANK0 ] int 
  6414 ;;  repeat          2   12[BANK0 ] int 
  6415 ;;  loop            2   10[BANK0 ] int 
  6416 ;;  delay           2    8[BANK0 ] unsigned int 
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      void 
  6419 ;; Registers used:
  6420 ;;		wreg, status,2, status,0, cstack
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6427 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6428 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;Total ram usage:       10 bytes
  6431 ;; Hardware stack levels used: 1
  6432 ;; Hardware stack levels required when called: 6
  6433 ;; This function calls:
  6434 ;;		_DelayTime_1ms
  6435 ;;		_displayno
  6436 ;; This function is called by:
  6437 ;;		_main
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           	psect	text30
  6442   001BE0                     __ptext30:
  6443                           	callstack 0
  6444   001BE0                     _Display_Version:
  6445                           	callstack 24
  6446                           
  6447                           ;7segment.c: 253: unsigned int delay=5;
  6448                           
  6449                           ;incstack = 0
  6450   001BE0  0E00               	movlw	0
  6451   001BE2  0100               	movlb	0	; () banked
  6452   001BE4  6F95               	movwf	(Display_Version@delay+1)& (0+255),b
  6453   001BE6  0E05               	movlw	5
  6454   001BE8  6F94               	movwf	Display_Version@delay& (0+255),b
  6455                           
  6456                           ;7segment.c: 254: int cdigit=1;
  6457   001BEA  0E00               	movlw	0
  6458   001BEC  6F9B               	movwf	(Display_Version@cdigit+1)& (0+255),b
  6459   001BEE  0E01               	movlw	1
  6460   001BF0  6F9A               	movwf	Display_Version@cdigit& (0+255),b
  6461                           
  6462                           ;7segment.c: 255: int loop;;7segment.c: 256: int repeat;;7segment.c: 258: for (repeat=0;
      +                           repeat<50; repeat++) {
  6463   001BF2  0E00               	movlw	0
  6464   001BF4  6F99               	movwf	(Display_Version@repeat+1)& (0+255),b
  6465   001BF6  0E00               	movlw	0
  6466   001BF8  6F98               	movwf	Display_Version@repeat& (0+255),b
  6467   001BFA                     l5494:
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;7segment.c: 259: for(loop=0; loop<6; loop++)
  6471   001BFA  0E00               	movlw	0
  6472   001BFC  6F97               	movwf	(Display_Version@loop+1)& (0+255),b
  6473   001BFE  0E00               	movlw	0
  6474   001C00  6F96               	movwf	Display_Version@loop& (0+255),b
  6475   001C02  D052               	goto	l5526
  6476   001C04                     l5500:
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;7segment.c: 265: displayno(cdigit, 0x20);
  6480   001C04  C09A  F08C         	movff	Display_Version@cdigit,displayno@digit
  6481   001C08  C09B  F08D         	movff	Display_Version@cdigit+1,displayno@digit+1
  6482   001C0C  0E00               	movlw	0
  6483   001C0E  6F8F               	movwf	(displayno@number+1)& (0+255),b
  6484   001C10  0E20               	movlw	32
  6485   001C12  6F8E               	movwf	displayno@number& (0+255),b
  6486   001C14  EC0B  F00C         	call	_displayno	;wreg free
  6487   001C18                     l5502:
  6488                           
  6489                           ;7segment.c: 266: cdigit++;
  6490   001C18  0100               	movlb	0	; () banked
  6491   001C1A  4B9A               	infsnz	Display_Version@cdigit& (0+255),f,b
  6492   001C1C  2B9B               	incf	(Display_Version@cdigit+1)& (0+255),f,b
  6493                           
  6494                           ;7segment.c: 267: break;
  6495   001C1E  D03E               	goto	l5524
  6496   001C20                     l5504:
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;7segment.c: 269: displayno(cdigit, (23%10)+0x30);
  6500   001C20  C09A  F08C         	movff	Display_Version@cdigit,displayno@digit
  6501   001C24  C09B  F08D         	movff	Display_Version@cdigit+1,displayno@digit+1
  6502   001C28  0E00               	movlw	0
  6503   001C2A  6F8F               	movwf	(displayno@number+1)& (0+255),b
  6504   001C2C  0E33               	movlw	51
  6505   001C2E  6F8E               	movwf	displayno@number& (0+255),b
  6506   001C30  EC0B  F00C         	call	_displayno	;wreg free
  6507   001C34  D7F1               	goto	l5502
  6508   001C36                     l5508:
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;7segment.c: 274: displayno(cdigit, 0x51);
  6512   001C36  C09A  F08C         	movff	Display_Version@cdigit,displayno@digit
  6513   001C3A  C09B  F08D         	movff	Display_Version@cdigit+1,displayno@digit+1
  6514   001C3E  0E00               	movlw	0
  6515   001C40  6F8F               	movwf	(displayno@number+1)& (0+255),b
  6516   001C42  0E51               	movlw	81
  6517   001C44  6F8E               	movwf	displayno@number& (0+255),b
  6518   001C46  EC0B  F00C         	call	_displayno	;wreg free
  6519   001C4A  D7E6               	goto	l5502
  6520   001C4C                     l652:
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;7segment.c: 278: if (PORTEbits.RE3)
  6524   001C4C  A684               	btfss	132,3,c	;volatile
  6525   001C4E  D7DA               	goto	l5500
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;7segment.c: 279: displayno(cdigit, 0x50);
  6529   001C50  C09A  F08C         	movff	Display_Version@cdigit,displayno@digit
  6530   001C54  C09B  F08D         	movff	Display_Version@cdigit+1,displayno@digit+1
  6531   001C58  0E00               	movlw	0
  6532   001C5A  6F8F               	movwf	(displayno@number+1)& (0+255),b
  6533   001C5C  0E50               	movlw	80
  6534   001C5E  6F8E               	movwf	displayno@number& (0+255),b
  6535   001C60  EC0B  F00C         	call	_displayno	;wreg free
  6536   001C64  D7D9               	goto	l5502
  6537   001C66                     l5518:
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;7segment.c: 285: cdigit = 1;
  6541   001C66  0E00               	movlw	0
  6542   001C68  6F9B               	movwf	(Display_Version@cdigit+1)& (0+255),b
  6543   001C6A  0E01               	movlw	1
  6544   001C6C  6F9A               	movwf	Display_Version@cdigit& (0+255),b
  6545                           
  6546                           ;7segment.c: 286: break;
  6547   001C6E  D016               	goto	l5524
  6548   001C70                     l5522:
  6549                           
  6550                           ; BSR set to: 0
  6551   001C70  C09A  F092         	movff	Display_Version@cdigit,??_Display_Version
  6552   001C74  C09B  F093         	movff	Display_Version@cdigit+1,??_Display_Version+1
  6553                           
  6554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6555                           ; Switch size 1, requested type "simple"
  6556                           ; Number of cases is 1, Range of values is 0 to 0
  6557                           ; switch strategies available:
  6558                           ; Name         Instructions Cycles
  6559                           ; simple_byte            4     3 (average)
  6560                           ;	Chosen strategy is simple_byte
  6561   001C78  5193               	movf	(??_Display_Version+1)& (0+255),w,b
  6562   001C7A  0A00               	xorlw	0	; case 0
  6563   001C7C  A4D8               	btfss	status,2,c
  6564   001C7E  D7F3               	goto	l5518
  6565                           
  6566                           ; BSR set to: 0
  6567                           ; Switch size 1, requested type "simple"
  6568                           ; Number of cases is 4, Range of values is 1 to 4
  6569                           ; switch strategies available:
  6570                           ; Name         Instructions Cycles
  6571                           ; simple_byte           13     7 (average)
  6572                           ;	Chosen strategy is simple_byte
  6573   001C80  5192               	movf	??_Display_Version& (0+255),w,b
  6574   001C82  0A01               	xorlw	1	; case 1
  6575   001C84  B4D8               	btfsc	status,2,c
  6576   001C86  D7BE               	goto	l5500
  6577   001C88  0A03               	xorlw	3	; case 2
  6578   001C8A  B4D8               	btfsc	status,2,c
  6579   001C8C  D7C9               	goto	l5504
  6580   001C8E  0A01               	xorlw	1	; case 3
  6581   001C90  B4D8               	btfsc	status,2,c
  6582   001C92  D7D1               	goto	l5508
  6583   001C94  0A07               	xorlw	7	; case 4
  6584   001C96  B4D8               	btfsc	status,2,c
  6585   001C98  D7D9               	goto	l652
  6586   001C9A  D7E5               	goto	l5518
  6587   001C9C                     l5524:
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;7segment.c: 289: DelayTime_1ms(delay);
  6591   001C9C  C094  F08C         	movff	Display_Version@delay,DelayTime_1ms@time
  6592   001CA0  C095  F08D         	movff	Display_Version@delay+1,DelayTime_1ms@time+1
  6593   001CA4  EC04  F012         	call	_DelayTime_1ms	;wreg free
  6594   001CA8                     l5526:
  6595   001CA8  0100               	movlb	0	; () banked
  6596   001CAA  BF9B               	btfsc	(Display_Version@cdigit+1)& (0+255),7,b
  6597   001CAC  D7E1               	goto	l5522
  6598   001CAE  519B               	movf	(Display_Version@cdigit+1)& (0+255),w,b
  6599   001CB0  E104               	bnz	u4460
  6600   001CB2  0E05               	movlw	5
  6601   001CB4  5D9A               	subwf	Display_Version@cdigit& (0+255),w,b
  6602   001CB6  A0D8               	btfss	status,0,c
  6603   001CB8  D7DB               	goto	l5522
  6604   001CBA                     u4460:
  6605                           
  6606                           ; BSR set to: 0
  6607   001CBA  4B96               	infsnz	Display_Version@loop& (0+255),f,b
  6608   001CBC  2B97               	incf	(Display_Version@loop+1)& (0+255),f,b
  6609                           
  6610                           ; BSR set to: 0
  6611   001CBE  BF97               	btfsc	(Display_Version@loop+1)& (0+255),7,b
  6612   001CC0  D7F3               	goto	l5526
  6613   001CC2  5197               	movf	(Display_Version@loop+1)& (0+255),w,b
  6614   001CC4  E104               	bnz	u4470
  6615   001CC6  0E06               	movlw	6
  6616   001CC8  5D96               	subwf	Display_Version@loop& (0+255),w,b
  6617   001CCA  A0D8               	btfss	status,0,c
  6618   001CCC  D7ED               	goto	l5526
  6619   001CCE                     u4470:
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;7segment.c: 290: };7segment.c: 291: };7segment.c: 292: cdigit = 1;
  6623   001CCE  0E00               	movlw	0
  6624   001CD0  6F9B               	movwf	(Display_Version@cdigit+1)& (0+255),b
  6625   001CD2  0E01               	movlw	1
  6626   001CD4  6F9A               	movwf	Display_Version@cdigit& (0+255),b
  6627                           
  6628                           ; BSR set to: 0
  6629   001CD6  4B98               	infsnz	Display_Version@repeat& (0+255),f,b
  6630   001CD8  2B99               	incf	(Display_Version@repeat+1)& (0+255),f,b
  6631                           
  6632                           ; BSR set to: 0
  6633   001CDA  BF99               	btfsc	(Display_Version@repeat+1)& (0+255),7,b
  6634   001CDC  D78E               	goto	l5494
  6635   001CDE  5199               	movf	(Display_Version@repeat+1)& (0+255),w,b
  6636   001CE0  E105               	bnz	u4480
  6637   001CE2  0E32               	movlw	50
  6638   001CE4  5D98               	subwf	Display_Version@repeat& (0+255),w,b
  6639   001CE6  B0D8               	btfsc	status,0,c
  6640   001CE8  0012               	return	
  6641   001CEA  D787               	goto	l5494
  6642   001CEC                     u4480:
  6643                           
  6644                           ; BSR set to: 0
  6645   001CEC  0012               	return		;funcret
  6646   001CEE                     __end_of_Display_Version:
  6647                           	callstack 0
  6648                           
  6649 ;; *************** function _displayno *****************
  6650 ;; Defined at:
  6651 ;;		line 45 in file "7segment.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  digit           2    0[BANK0 ] int 
  6654 ;;  number          2    2[BANK0 ] int 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;		None
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  1    wreg      void 
  6659 ;; Registers used:
  6660 ;;		wreg, status,2, status,0
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6666 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;Total ram usage:        6 bytes
  6671 ;; Hardware stack levels used: 1
  6672 ;; Hardware stack levels required when called: 5
  6673 ;; This function calls:
  6674 ;;		Nothing
  6675 ;; This function is called by:
  6676 ;;		_Display_Version
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text31
  6681   001816                     __ptext31:
  6682                           	callstack 0
  6683   001816                     _displayno:
  6684                           	callstack 24
  6685                           
  6686                           ;7segment.c: 47: switch (digit)
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;incstack = 0
  6690   001816  D011               	goto	l5318
  6691   001818                     l594:
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;7segment.c: 50: LATCbits.LATC5 = 0;
  6695   001818  9A8B               	bcf	139,5,c	;volatile
  6696                           
  6697                           ;7segment.c: 51: LATCbits.LATC3 = 1;
  6698   00181A  868B               	bsf	139,3,c	;volatile
  6699   00181C  D006               	goto	L6
  6700   00181E                     l596:
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;7segment.c: 57: LATCbits.LATC5 = 1;
  6704   00181E  8A8B               	bsf	139,5,c	;volatile
  6705                           
  6706                           ;7segment.c: 58: LATCbits.LATC3 = 1;
  6707   001820  868B               	bsf	139,3,c	;volatile
  6708                           
  6709                           ;7segment.c: 59: LATCbits.LATC4 = 0;
  6710   001822  988B               	bcf	139,4,c	;volatile
  6711   001824  D003               	goto	L5
  6712   001826                     l597:
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;7segment.c: 64: LATCbits.LATC5 = 1;
  6716   001826  8A8B               	bsf	139,5,c	;volatile
  6717                           
  6718                           ;7segment.c: 65: LATCbits.LATC3 = 0;
  6719   001828  968B               	bcf	139,3,c	;volatile
  6720   00182A                     L6:
  6721                           
  6722                           ;7segment.c: 66: LATCbits.LATC4 = 1;
  6723   00182A  888B               	bsf	139,4,c	;volatile
  6724   00182C                     L5:
  6725                           
  6726                           ;7segment.c: 67: LATCbits.LATC2 = 1;
  6727   00182C  848B               	bsf	139,2,c	;volatile
  6728                           
  6729                           ;7segment.c: 68: break;
  6730   00182E  D0AC               	goto	l5322
  6731   001830                     l598:
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;7segment.c: 71: LATCbits.LATC5 = 1;
  6735   001830  8A8B               	bsf	139,5,c	;volatile
  6736                           
  6737                           ;7segment.c: 72: LATCbits.LATC3 = 1;
  6738   001832  868B               	bsf	139,3,c	;volatile
  6739                           
  6740                           ;7segment.c: 73: LATCbits.LATC4 = 1;
  6741   001834  888B               	bsf	139,4,c	;volatile
  6742                           
  6743                           ;7segment.c: 74: LATCbits.LATC2 = 0;
  6744   001836  948B               	bcf	139,2,c	;volatile
  6745                           
  6746                           ;7segment.c: 75: break;
  6747   001838  D0A7               	goto	l5322
  6748   00183A                     l5318:
  6749   00183A  C08C  F090         	movff	displayno@digit,??_displayno
  6750   00183E  C08D  F091         	movff	displayno@digit+1,??_displayno+1
  6751                           
  6752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6753                           ; Switch size 1, requested type "simple"
  6754                           ; Number of cases is 1, Range of values is 0 to 0
  6755                           ; switch strategies available:
  6756                           ; Name         Instructions Cycles
  6757                           ; simple_byte            4     3 (average)
  6758                           ;	Chosen strategy is simple_byte
  6759   001842  0100               	movlb	0	; () banked
  6760   001844  5191               	movf	(??_displayno+1)& (0+255),w,b
  6761   001846  0A00               	xorlw	0	; case 0
  6762   001848  A4D8               	btfss	status,2,c
  6763   00184A  D09E               	goto	l5322
  6764                           
  6765                           ; BSR set to: 0
  6766                           ; Switch size 1, requested type "simple"
  6767                           ; Number of cases is 4, Range of values is 1 to 4
  6768                           ; switch strategies available:
  6769                           ; Name         Instructions Cycles
  6770                           ; simple_byte           13     7 (average)
  6771                           ;	Chosen strategy is simple_byte
  6772   00184C  5190               	movf	??_displayno& (0+255),w,b
  6773   00184E  0A01               	xorlw	1	; case 1
  6774   001850  B4D8               	btfsc	status,2,c
  6775   001852  D7E2               	goto	l594
  6776   001854  0A03               	xorlw	3	; case 2
  6777   001856  B4D8               	btfsc	status,2,c
  6778   001858  D7E2               	goto	l596
  6779   00185A  0A01               	xorlw	1	; case 3
  6780   00185C  B4D8               	btfsc	status,2,c
  6781   00185E  D7E3               	goto	l597
  6782   001860  0A07               	xorlw	7	; case 4
  6783   001862  B4D8               	btfsc	status,2,c
  6784   001864  D7E5               	goto	l598
  6785   001866  D090               	goto	l5322
  6786   001868                     l600:
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;7segment.c: 81: LATBbits.LATB4=0; LATCbits.LATC1=0;
  6790   001868  988A               	bcf	138,4,c	;volatile
  6791   00186A  928B               	bcf	139,1,c	;volatile
  6792                           
  6793                           ;7segment.c: 82: LATAbits.LATA1=0; LATAbits.LATA5=0;
  6794   00186C  9289               	bcf	137,1,c	;volatile
  6795   00186E  9A89               	bcf	137,5,c	;volatile
  6796                           
  6797                           ;7segment.c: 83: LATCbits.LATC0=0; LATBbits.LATB5=0;
  6798   001870  908B               	bcf	139,0,c	;volatile
  6799   001872  9A8A               	bcf	138,5,c	;volatile
  6800                           
  6801                           ;7segment.c: 84: LATAbits.LATA2=1; LATAbits.LATA4 = 1;
  6802   001874  8489               	bsf	137,2,c	;volatile
  6803   001876  8889               	bsf	137,4,c	;volatile
  6804                           
  6805                           ;7segment.c: 85: break;
  6806   001878  0012               	return	
  6807   00187A                     l602:
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;7segment.c: 88: LATBbits.LATB4=1; LATCbits.LATC1=0;
  6811   00187A  888A               	bsf	138,4,c	;volatile
  6812   00187C  928B               	bcf	139,1,c	;volatile
  6813                           
  6814                           ;7segment.c: 89: LATAbits.LATA1=0; LATAbits.LATA5=1;
  6815   00187E  9289               	bcf	137,1,c	;volatile
  6816   001880  8A89               	bsf	137,5,c	;volatile
  6817                           
  6818                           ;7segment.c: 90: LATCbits.LATC0=1; LATBbits.LATB5=1;
  6819   001882  808B               	bsf	139,0,c	;volatile
  6820   001884  8A8A               	bsf	138,5,c	;volatile
  6821                           
  6822                           ;7segment.c: 91: LATAbits.LATA2=1; LATAbits.LATA4 = 1;
  6823   001886  8489               	bsf	137,2,c	;volatile
  6824   001888  8889               	bsf	137,4,c	;volatile
  6825                           
  6826                           ;7segment.c: 92: break;
  6827   00188A  0012               	return	
  6828   00188C                     l603:
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;7segment.c: 95: LATBbits.LATB4=0; LATCbits.LATC1=0;
  6832   00188C  988A               	bcf	138,4,c	;volatile
  6833   00188E  928B               	bcf	139,1,c	;volatile
  6834                           
  6835                           ;7segment.c: 96: LATAbits.LATA1=1; LATAbits.LATA5=0;
  6836   001890  8289               	bsf	137,1,c	;volatile
  6837   001892  9A89               	bcf	137,5,c	;volatile
  6838                           
  6839                           ;7segment.c: 97: LATCbits.LATC0=0; LATBbits.LATB5=1;
  6840   001894  908B               	bcf	139,0,c	;volatile
  6841   001896  8A8A               	bsf	138,5,c	;volatile
  6842                           
  6843                           ;7segment.c: 98: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
  6844   001898  9489               	bcf	137,2,c	;volatile
  6845   00189A  8889               	bsf	137,4,c	;volatile
  6846                           
  6847                           ;7segment.c: 99: break;
  6848   00189C  0012               	return	
  6849   00189E                     l604:
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;7segment.c: 102: LATBbits.LATB4=0; LATCbits.LATC1=0;
  6853   00189E  988A               	bcf	138,4,c	;volatile
  6854   0018A0  928B               	bcf	139,1,c	;volatile
  6855                           
  6856                           ;7segment.c: 103: LATAbits.LATA1=0; LATAbits.LATA5=0;
  6857   0018A2  9289               	bcf	137,1,c	;volatile
  6858   0018A4  9A89               	bcf	137,5,c	;volatile
  6859                           
  6860                           ;7segment.c: 104: LATCbits.LATC0=1; LATBbits.LATB5=1;
  6861   0018A6  808B               	bsf	139,0,c	;volatile
  6862   0018A8  8A8A               	bsf	138,5,c	;volatile
  6863                           
  6864                           ;7segment.c: 105: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
  6865   0018AA  9489               	bcf	137,2,c	;volatile
  6866   0018AC  8889               	bsf	137,4,c	;volatile
  6867                           
  6868                           ;7segment.c: 106: break;
  6869   0018AE  0012               	return	
  6870   0018B0                     l605:
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;7segment.c: 109: LATBbits.LATB4=1; LATCbits.LATC1=0;
  6874   0018B0  888A               	bsf	138,4,c	;volatile
  6875   0018B2  928B               	bcf	139,1,c	;volatile
  6876                           
  6877                           ;7segment.c: 110: LATAbits.LATA1=0; LATAbits.LATA5=1;
  6878   0018B4  9289               	bcf	137,1,c	;volatile
  6879   0018B6  8A89               	bsf	137,5,c	;volatile
  6880                           
  6881                           ;7segment.c: 111: LATCbits.LATC0=1; LATBbits.LATB5=0;
  6882   0018B8  808B               	bsf	139,0,c	;volatile
  6883   0018BA  9A8A               	bcf	138,5,c	;volatile
  6884                           
  6885                           ;7segment.c: 112: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
  6886   0018BC  9489               	bcf	137,2,c	;volatile
  6887   0018BE  8889               	bsf	137,4,c	;volatile
  6888                           
  6889                           ;7segment.c: 113: break;
  6890   0018C0  0012               	return	
  6891   0018C2                     l606:
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;7segment.c: 116: LATBbits.LATB4=0; LATCbits.LATC1=1;
  6895   0018C2  988A               	bcf	138,4,c	;volatile
  6896   0018C4  828B               	bsf	139,1,c	;volatile
  6897                           
  6898                           ;7segment.c: 117: LATAbits.LATA1=0; LATAbits.LATA5=0;
  6899   0018C6  9289               	bcf	137,1,c	;volatile
  6900   0018C8  9A89               	bcf	137,5,c	;volatile
  6901                           
  6902                           ;7segment.c: 118: LATCbits.LATC0=1; LATBbits.LATB5=0;
  6903   0018CA  808B               	bsf	139,0,c	;volatile
  6904   0018CC  9A8A               	bcf	138,5,c	;volatile
  6905                           
  6906                           ;7segment.c: 119: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
  6907   0018CE  9489               	bcf	137,2,c	;volatile
  6908   0018D0  8889               	bsf	137,4,c	;volatile
  6909                           
  6910                           ;7segment.c: 120: break;
  6911   0018D2  0012               	return	
  6912   0018D4                     l607:
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;7segment.c: 123: LATBbits.LATB4=0; LATCbits.LATC1=1;
  6916   0018D4  988A               	bcf	138,4,c	;volatile
  6917   0018D6  828B               	bsf	139,1,c	;volatile
  6918                           
  6919                           ;7segment.c: 124: LATAbits.LATA1=0; LATAbits.LATA5=0;
  6920   0018D8  9289               	bcf	137,1,c	;volatile
  6921   0018DA  9A89               	bcf	137,5,c	;volatile
  6922                           
  6923                           ;7segment.c: 125: LATCbits.LATC0=0; LATBbits.LATB5=0;
  6924   0018DC  908B               	bcf	139,0,c	;volatile
  6925   0018DE  9A8A               	bcf	138,5,c	;volatile
  6926                           
  6927                           ;7segment.c: 126: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
  6928   0018E0  9489               	bcf	137,2,c	;volatile
  6929   0018E2  8889               	bsf	137,4,c	;volatile
  6930                           
  6931                           ;7segment.c: 127: break;
  6932   0018E4  0012               	return	
  6933   0018E6                     l608:
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;7segment.c: 130: LATBbits.LATB4=0; LATCbits.LATC1=0;
  6937   0018E6  988A               	bcf	138,4,c	;volatile
  6938   0018E8  928B               	bcf	139,1,c	;volatile
  6939                           
  6940                           ;7segment.c: 131: LATAbits.LATA1=0; LATAbits.LATA5=1;
  6941   0018EA  9289               	bcf	137,1,c	;volatile
  6942   0018EC  8A89               	bsf	137,5,c	;volatile
  6943                           
  6944                           ;7segment.c: 132: LATCbits.LATC0=1; LATBbits.LATB5=1;
  6945   0018EE  808B               	bsf	139,0,c	;volatile
  6946   0018F0  8A8A               	bsf	138,5,c	;volatile
  6947                           
  6948                           ;7segment.c: 133: LATAbits.LATA2=1; LATAbits.LATA4 = 1;
  6949   0018F2  8489               	bsf	137,2,c	;volatile
  6950   0018F4  8889               	bsf	137,4,c	;volatile
  6951                           
  6952                           ;7segment.c: 134: break;
  6953   0018F6  0012               	return	
  6954   0018F8                     l609:
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;7segment.c: 137: LATBbits.LATB4=0; LATCbits.LATC1=0;
  6958   0018F8  988A               	bcf	138,4,c	;volatile
  6959   0018FA  928B               	bcf	139,1,c	;volatile
  6960                           
  6961                           ;7segment.c: 138: LATAbits.LATA1=0; LATAbits.LATA5=0;
  6962   0018FC  9289               	bcf	137,1,c	;volatile
  6963   0018FE  9A89               	bcf	137,5,c	;volatile
  6964                           
  6965                           ;7segment.c: 139: LATCbits.LATC0=0; LATBbits.LATB5=0;
  6966   001900  908B               	bcf	139,0,c	;volatile
  6967   001902  9A8A               	bcf	138,5,c	;volatile
  6968                           
  6969                           ;7segment.c: 140: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
  6970   001904  9489               	bcf	137,2,c	;volatile
  6971   001906  8889               	bsf	137,4,c	;volatile
  6972                           
  6973                           ;7segment.c: 141: break;
  6974   001908  0012               	return	
  6975   00190A                     l610:
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;7segment.c: 144: LATBbits.LATB4=0; LATCbits.LATC1=0;
  6979   00190A  988A               	bcf	138,4,c	;volatile
  6980   00190C  928B               	bcf	139,1,c	;volatile
  6981                           
  6982                           ;7segment.c: 145: LATAbits.LATA1=0; LATAbits.LATA5=1;
  6983   00190E  9289               	bcf	137,1,c	;volatile
  6984   001910  8A89               	bsf	137,5,c	;volatile
  6985                           
  6986                           ;7segment.c: 146: LATCbits.LATC0=1; LATBbits.LATB5=0;
  6987   001912  808B               	bsf	139,0,c	;volatile
  6988   001914  9A8A               	bcf	138,5,c	;volatile
  6989                           
  6990                           ;7segment.c: 147: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
  6991   001916  9489               	bcf	137,2,c	;volatile
  6992   001918  8889               	bsf	137,4,c	;volatile
  6993                           
  6994                           ;7segment.c: 148: break;
  6995   00191A  0012               	return	
  6996   00191C                     l611:
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;7segment.c: 151: LATBbits.LATB4=1; LATCbits.LATC1=1;
  7000   00191C  888A               	bsf	138,4,c	;volatile
  7001   00191E  828B               	bsf	139,1,c	;volatile
  7002                           
  7003                           ;7segment.c: 152: LATAbits.LATA1=1; LATAbits.LATA5=0;
  7004   001920  8289               	bsf	137,1,c	;volatile
  7005   001922  9A89               	bcf	137,5,c	;volatile
  7006                           
  7007                           ;7segment.c: 153: LATCbits.LATC0=0; LATBbits.LATB5=0;
  7008   001924  908B               	bcf	139,0,c	;volatile
  7009   001926  9A8A               	bcf	138,5,c	;volatile
  7010                           
  7011                           ;7segment.c: 154: LATAbits.LATA2=1; LATAbits.LATA4 = 1;
  7012   001928  8489               	bsf	137,2,c	;volatile
  7013   00192A  8889               	bsf	137,4,c	;volatile
  7014                           
  7015                           ;7segment.c: 155: break;
  7016   00192C  0012               	return	
  7017   00192E                     l612:
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;7segment.c: 158: LATBbits.LATB4=0; LATCbits.LATC1=1;
  7021   00192E  988A               	bcf	138,4,c	;volatile
  7022   001930  828B               	bsf	139,1,c	;volatile
  7023                           
  7024                           ;7segment.c: 159: LATAbits.LATA1=1; LATAbits.LATA5=0;
  7025   001932  8289               	bsf	137,1,c	;volatile
  7026   001934  9A89               	bcf	137,5,c	;volatile
  7027                           
  7028                           ;7segment.c: 160: LATCbits.LATC0=0; LATBbits.LATB5=0;
  7029   001936  908B               	bcf	139,0,c	;volatile
  7030   001938  9A8A               	bcf	138,5,c	;volatile
  7031                           
  7032                           ;7segment.c: 161: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
  7033   00193A  9489               	bcf	137,2,c	;volatile
  7034   00193C  8889               	bsf	137,4,c	;volatile
  7035                           
  7036                           ;7segment.c: 162: break;
  7037   00193E  0012               	return	
  7038   001940                     l613:
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;7segment.c: 165: LATBbits.LATB4=1; LATCbits.LATC1=1;
  7042   001940  888A               	bsf	138,4,c	;volatile
  7043   001942  828B               	bsf	139,1,c	;volatile
  7044                           
  7045                           ;7segment.c: 166: LATAbits.LATA1=1; LATAbits.LATA5=1;
  7046   001944  8289               	bsf	137,1,c	;volatile
  7047   001946  8A89               	bsf	137,5,c	;volatile
  7048                           
  7049                           ;7segment.c: 167: LATCbits.LATC0=1; LATBbits.LATB5=1;
  7050   001948  808B               	bsf	139,0,c	;volatile
  7051   00194A  8A8A               	bsf	138,5,c	;volatile
  7052                           
  7053                           ;7segment.c: 168: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
  7054   00194C  9489               	bcf	137,2,c	;volatile
  7055   00194E  8889               	bsf	137,4,c	;volatile
  7056                           
  7057                           ;7segment.c: 169: break;
  7058   001950  0012               	return	
  7059   001952                     l615:
  7060                           
  7061                           ; BSR set to: 0
  7062                           ;7segment.c: 173: LATBbits.LATB4=1; LATCbits.LATC1=1;
  7063   001952  888A               	bsf	138,4,c	;volatile
  7064   001954  828B               	bsf	139,1,c	;volatile
  7065                           
  7066                           ;7segment.c: 174: LATAbits.LATA1=1; LATAbits.LATA5=1;
  7067   001956  8289               	bsf	137,1,c	;volatile
  7068   001958  8A89               	bsf	137,5,c	;volatile
  7069                           
  7070                           ;7segment.c: 175: LATCbits.LATC0=1; LATBbits.LATB5=1;
  7071   00195A  808B               	bsf	139,0,c	;volatile
  7072   00195C  8A8A               	bsf	138,5,c	;volatile
  7073                           
  7074                           ;7segment.c: 176: LATAbits.LATA2=1; LATAbits.LATA4 = 1;
  7075   00195E  8489               	bsf	137,2,c	;volatile
  7076   001960  8889               	bsf	137,4,c	;volatile
  7077                           
  7078                           ;7segment.c: 177: break;
  7079   001962  0012               	return	
  7080   001964                     l616:
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;7segment.c: 181: LATBbits.LATB4=1; LATCbits.LATC1=0;
  7084   001964  888A               	bsf	138,4,c	;volatile
  7085   001966  928B               	bcf	139,1,c	;volatile
  7086                           
  7087                           ;7segment.c: 182: LATAbits.LATA1=0; LATAbits.LATA5=0;
  7088   001968  9289               	bcf	137,1,c	;volatile
  7089   00196A  9A89               	bcf	137,5,c	;volatile
  7090                           
  7091                           ;7segment.c: 183: LATCbits.LATC0=0; LATBbits.LATB5=0;
  7092   00196C  908B               	bcf	139,0,c	;volatile
  7093   00196E  9A8A               	bcf	138,5,c	;volatile
  7094                           
  7095                           ;7segment.c: 184: LATAbits.LATA2=1; LATAbits.LATA4 = 1;
  7096   001970  8489               	bsf	137,2,c	;volatile
  7097   001972  8889               	bsf	137,4,c	;volatile
  7098                           
  7099                           ;7segment.c: 185: break;
  7100   001974  0012               	return	
  7101   001976                     l617:
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;7segment.c: 188: LATBbits.LATB4=0; LATCbits.LATC1=0;
  7105   001976  988A               	bcf	138,4,c	;volatile
  7106   001978  928B               	bcf	139,1,c	;volatile
  7107                           
  7108                           ;7segment.c: 189: LATAbits.LATA1=1; LATAbits.LATA5=0;
  7109   00197A  8289               	bsf	137,1,c	;volatile
  7110   00197C  9A89               	bcf	137,5,c	;volatile
  7111                           
  7112                           ;7segment.c: 190: LATCbits.LATC0=0; LATBbits.LATB5=1;
  7113   00197E  908B               	bcf	139,0,c	;volatile
  7114   001980  8A8A               	bsf	138,5,c	;volatile
  7115                           
  7116                           ;7segment.c: 191: LATAbits.LATA2=0; LATAbits.LATA4 = 0;
  7117   001982  9489               	bcf	137,2,c	;volatile
  7118   001984  9889               	bcf	137,4,c	;volatile
  7119                           
  7120                           ;7segment.c: 192: break;
  7121   001986  0012               	return	
  7122   001988                     l5322:
  7123                           
  7124                           ; BSR set to: 0
  7125   001988  C08E  F090         	movff	displayno@number,??_displayno
  7126   00198C  C08F  F091         	movff	displayno@number+1,??_displayno+1
  7127                           
  7128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7129                           ; Switch size 1, requested type "simple"
  7130                           ; Number of cases is 1, Range of values is 0 to 0
  7131                           ; switch strategies available:
  7132                           ; Name         Instructions Cycles
  7133                           ; simple_byte            4     3 (average)
  7134                           ;	Chosen strategy is simple_byte
  7135   001990  5191               	movf	(??_displayno+1)& (0+255),w,b
  7136   001992  0A00               	xorlw	0	; case 0
  7137   001994  A4D8               	btfss	status,2,c
  7138   001996  D7DD               	goto	l615
  7139                           
  7140                           ; BSR set to: 0
  7141                           ; Switch size 1, requested type "simple"
  7142                           ; Number of cases is 16, Range of values is 32 to 81
  7143                           ; switch strategies available:
  7144                           ; Name         Instructions Cycles
  7145                           ; simple_byte           49    25 (average)
  7146                           ;	Chosen strategy is simple_byte
  7147   001998  5190               	movf	??_displayno& (0+255),w,b
  7148   00199A  0A20               	xorlw	32	; case 32
  7149   00199C  B4D8               	btfsc	status,2,c
  7150   00199E  D7D9               	goto	l615
  7151   0019A0  0A0D               	xorlw	13	; case 45
  7152   0019A2  B4D8               	btfsc	status,2,c
  7153   0019A4  D7CD               	goto	l613
  7154   0019A6  0A1D               	xorlw	29	; case 48
  7155   0019A8  B4D8               	btfsc	status,2,c
  7156   0019AA  D75E               	goto	l600
  7157   0019AC  0A01               	xorlw	1	; case 49
  7158   0019AE  B4D8               	btfsc	status,2,c
  7159   0019B0  D764               	goto	l602
  7160   0019B2  0A03               	xorlw	3	; case 50
  7161   0019B4  B4D8               	btfsc	status,2,c
  7162   0019B6  D76A               	goto	l603
  7163   0019B8  0A01               	xorlw	1	; case 51
  7164   0019BA  B4D8               	btfsc	status,2,c
  7165   0019BC  D770               	goto	l604
  7166   0019BE  0A07               	xorlw	7	; case 52
  7167   0019C0  B4D8               	btfsc	status,2,c
  7168   0019C2  D776               	goto	l605
  7169   0019C4  0A01               	xorlw	1	; case 53
  7170   0019C6  B4D8               	btfsc	status,2,c
  7171   0019C8  D77C               	goto	l606
  7172   0019CA  0A03               	xorlw	3	; case 54
  7173   0019CC  B4D8               	btfsc	status,2,c
  7174   0019CE  D782               	goto	l607
  7175   0019D0  0A01               	xorlw	1	; case 55
  7176   0019D2  B4D8               	btfsc	status,2,c
  7177   0019D4  D788               	goto	l608
  7178   0019D6  0A0F               	xorlw	15	; case 56
  7179   0019D8  B4D8               	btfsc	status,2,c
  7180   0019DA  D78E               	goto	l609
  7181   0019DC  0A01               	xorlw	1	; case 57
  7182   0019DE  B4D8               	btfsc	status,2,c
  7183   0019E0  D794               	goto	l610
  7184   0019E2  0A7C               	xorlw	124	; case 69
  7185   0019E4  B4D8               	btfsc	status,2,c
  7186   0019E6  D7A3               	goto	l612
  7187   0019E8  0A09               	xorlw	9	; case 76
  7188   0019EA  B4D8               	btfsc	status,2,c
  7189   0019EC  D797               	goto	l611
  7190   0019EE  0A1C               	xorlw	28	; case 80
  7191   0019F0  B4D8               	btfsc	status,2,c
  7192   0019F2  D7B8               	goto	l616
  7193   0019F4  0A01               	xorlw	1	; case 81
  7194   0019F6  B4D8               	btfsc	status,2,c
  7195   0019F8  D7BE               	goto	l617
  7196   0019FA  D7AB               	goto	l615
  7197   0019FC                     __end_of_displayno:
  7198                           	callstack 0
  7199                           
  7200 ;; *************** function _DelayTime_1ms *****************
  7201 ;; Defined at:
  7202 ;;		line 1342 in file "main.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  time            2    0[BANK0 ] unsigned short 
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;		None
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  1    wreg      void 
  7209 ;; Registers used:
  7210 ;;		wreg, status,2, status,0
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7218 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7219 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7220 ;;Total ram usage:        3 bytes
  7221 ;; Hardware stack levels used: 1
  7222 ;; Hardware stack levels required when called: 5
  7223 ;; This function calls:
  7224 ;;		Nothing
  7225 ;; This function is called by:
  7226 ;;		_main
  7227 ;;		_Display_Version
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           	psect	text32
  7232   002408                     __ptext32:
  7233                           	callstack 0
  7234   002408                     _DelayTime_1ms:
  7235                           	callstack 24
  7236                           
  7237                           ;main.c: 1344: while(time > 0)
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;incstack = 0
  7241   002408  D00D               	goto	l502
  7242   00240A                     l5306:
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;main.c: 1345: {;main.c: 1346: _delay((unsigned long)((1)*(8000000/4000.0)));
  7246   00240A  0E03               	movlw	3
  7247   00240C  0100               	movlb	0	; () banked
  7248   00240E  6F8E               	movwf	??_DelayTime_1ms& (0+255),b
  7249   002410  0E97               	movlw	151
  7250   002412                     u6007:
  7251   002412  2EE8               	decfsz	wreg,f,c
  7252   002414  D7FE               	bra	u6007
  7253   002416  2F8E               	decfsz	??_DelayTime_1ms& (0+255),f,b
  7254   002418  D7FC               	bra	u6007
  7255   00241A  D000               	nop2	
  7256                           
  7257                           ;main.c: 1347: time--;
  7258   00241C  0100               	movlb	0	; () banked
  7259   00241E  078C               	decf	DelayTime_1ms@time& (0+255),f,b
  7260   002420  A0D8               	btfss	status,0,c
  7261   002422  078D               	decf	(DelayTime_1ms@time+1)& (0+255),f,b
  7262   002424                     l502:
  7263   002424  0100               	movlb	0	; () banked
  7264   002426  518C               	movf	DelayTime_1ms@time& (0+255),w,b
  7265   002428  118D               	iorwf	(DelayTime_1ms@time+1)& (0+255),w,b
  7266   00242A  B4D8               	btfsc	status,2,c
  7267   00242C  0012               	return	
  7268   00242E  D7ED               	goto	l5306
  7269   002430                     __end_of_DelayTime_1ms:
  7270                           	callstack 0
  7271                           
  7272 ;; *************** function _DelayTime_10ms *****************
  7273 ;; Defined at:
  7274 ;;		line 1352 in file "main.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;  time            2    0[BANK0 ] unsigned short 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, status,0
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;Total ram usage:        3 bytes
  7293 ;; Hardware stack levels used: 1
  7294 ;; Hardware stack levels required when called: 5
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_main
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text33
  7303   002430                     __ptext33:
  7304                           	callstack 0
  7305   002430                     _DelayTime_10ms:
  7306                           	callstack 25
  7307                           
  7308                           ;main.c: 1354: while(time > 0)
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;incstack = 0
  7312   002430  D00D               	goto	l508
  7313   002432                     l5592:
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;main.c: 1355: {;main.c: 1356: _delay((unsigned long)((10)*(8000000/4000.0)));
  7317   002432  0E1A               	movlw	26
  7318   002434  0100               	movlb	0	; () banked
  7319   002436  6F8E               	movwf	??_DelayTime_10ms& (0+255),b
  7320   002438  0EF8               	movlw	248
  7321   00243A                     u6017:
  7322   00243A  2EE8               	decfsz	wreg,f,c
  7323   00243C  D7FE               	bra	u6017
  7324   00243E  2F8E               	decfsz	??_DelayTime_10ms& (0+255),f,b
  7325   002440  D7FC               	bra	u6017
  7326   002442  F000               	nop	
  7327                           
  7328                           ;main.c: 1357: time--;
  7329   002444  0100               	movlb	0	; () banked
  7330   002446  078C               	decf	DelayTime_10ms@time& (0+255),f,b
  7331   002448  A0D8               	btfss	status,0,c
  7332   00244A  078D               	decf	(DelayTime_10ms@time+1)& (0+255),f,b
  7333   00244C                     l508:
  7334   00244C  0100               	movlb	0	; () banked
  7335   00244E  518C               	movf	DelayTime_10ms@time& (0+255),w,b
  7336   002450  118D               	iorwf	(DelayTime_10ms@time+1)& (0+255),w,b
  7337   002452  B4D8               	btfsc	status,2,c
  7338   002454  0012               	return	
  7339   002456  D7ED               	goto	l5592
  7340   002458                     __end_of_DelayTime_10ms:
  7341                           	callstack 0
  7342                           
  7343 ;; *************** function _high_isr *****************
  7344 ;; Defined at:
  7345 ;;		line 983 in file "main.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;		None
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;  i               1   42[COMRAM] unsigned char 
  7350 ;;  c               1   41[COMRAM] unsigned char 
  7351 ;;  Temp            1   40[COMRAM] unsigned char 
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  1    wreg      void 
  7354 ;; Registers used:
  7355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7362 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7364 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7365 ;;Total ram usage:        5 bytes
  7366 ;; Hardware stack levels used: 1
  7367 ;; Hardware stack levels required when called: 4
  7368 ;; This function calls:
  7369 ;;		_Display_Error
  7370 ;;		_Display_Warning
  7371 ;;		_ISR_UpdateDisplay
  7372 ;;		_Read1USART
  7373 ;;		i2_Feeder_Stop
  7374 ;;		i2_Lifter_Stop
  7375 ;;		i2_Write1USART
  7376 ;; This function is called by:
  7377 ;;		Interrupt level 2
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           	psect	intcode
  7382   000008                     __pintcode:
  7383                           	callstack 0
  7384   000008                     _high_isr:
  7385                           	callstack 23
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;incstack = 0
  7389   000008  8257               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7390   00000A  CFD9 F027          	movff	fsr2l,??_high_isr
  7391   00000E  CFDA F028          	movff	fsr2h,??_high_isr+1
  7392                           
  7393                           ;main.c: 985: unsigned char c, i;;main.c: 986: unsigned char Temp;;main.c: 989: if(TMR0I
      +                          F_triggered==1)
  7394   000012  0443               	decf	_TMR0IF_triggered^0,w,c	;volatile
  7395   000014  A4D8               	btfss	status,2,c
  7396   000016  D01F               	goto	i2l4860
  7397                           
  7398                           ;main.c: 990: {;main.c: 991: if(error == 1)
  7399   000018  0100               	movlb	0	; () banked
  7400   00001A  0588               	decf	_error& (0+255),w,b	;volatile
  7401   00001C  A4D8               	btfss	status,2,c
  7402   00001E  D00B               	goto	i2l4850
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;main.c: 992: {;main.c: 993: Display_Error(error_number);
  7406   000020  C055  F007         	movff	_error_number,Display_Error@enumber	;volatile
  7407   000024  6A08               	clrf	(Display_Error@enumber+1)^0,c
  7408   000026  EC30  F010         	call	_Display_Error	;wreg free
  7409                           
  7410                           ;main.c: 994: LATBbits.LATB3 = 0;
  7411   00002A  968A               	bcf	138,3,c	;volatile
  7412                           
  7413                           ;main.c: 995: Lifter_Stop();
  7414   00002C  EC1D  F013         	call	i2_Lifter_Stop	;wreg free
  7415                           
  7416                           ;main.c: 996: Feeder_Stop();
  7417   000030  EC20  F013         	call	i2_Feeder_Stop	;wreg free
  7418                           
  7419                           ;main.c: 997: }
  7420   000034  D00E               	goto	i2l4858
  7421   000036                     i2l4850:
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;main.c: 998: else if(warning == 1 && error==0)
  7425   000036  0441               	decf	_warning^0,w,c	;volatile
  7426   000038  A4D8               	btfss	status,2,c
  7427   00003A  D009               	goto	i2l4856
  7428                           
  7429                           ; BSR set to: 0
  7430   00003C  5188               	movf	_error& (0+255),w,b	;volatile
  7431   00003E  A4D8               	btfss	status,2,c
  7432   000040  D006               	goto	i2l4856
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;main.c: 999: {;main.c: 1000: Display_Warning(warning_number);
  7436   000042  C0CC  F007         	movff	_warning_number,Display_Warning@enumber	;volatile
  7437   000046  6A08               	clrf	(Display_Warning@enumber+1)^0,c
  7438   000048  ECF1  F00F         	call	_Display_Warning	;wreg free
  7439                           
  7440                           ;main.c: 1001: }
  7441   00004C  D002               	goto	i2l4858
  7442   00004E                     i2l4856:
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;main.c: 1002: else;main.c: 1003: {;main.c: 1004: ISR_UpdateDisplay();
  7446   00004E  EC7F  F00A         	call	_ISR_UpdateDisplay	;wreg free
  7447   000052                     i2l4858:
  7448                           
  7449                           ;main.c: 1005: };main.c: 1007: TMR0IF_triggered = !1;
  7450   000052  0E00               	movlw	0
  7451   000054  6E43               	movwf	_TMR0IF_triggered^0,c	;volatile
  7452   000056                     i2l4860:
  7453                           
  7454                           ;main.c: 1009: };main.c: 1011: if (TMR1IF_triggered == 1)
  7455   000056  0442               	decf	_TMR1IF_triggered^0,w,c	;volatile
  7456   000058  A4D8               	btfss	status,2,c
  7457   00005A  D0E7               	goto	i2l4928
  7458                           
  7459                           ;main.c: 1012: {;main.c: 1013: if (LiftUpHoldCounter > 0)
  7460   00005C  0100               	movlb	0	; () banked
  7461   00005E  51C6               	movf	_LiftUpHoldCounter& (0+255),w,b
  7462   000060  11C7               	iorwf	(_LiftUpHoldCounter+1)& (0+255),w,b
  7463   000062  B4D8               	btfsc	status,2,c
  7464   000064  D004               	goto	i2l4866
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;main.c: 1014: LiftUpHoldCounter--;
  7468   000066  07C6               	decf	_LiftUpHoldCounter& (0+255),f,b
  7469   000068  A0D8               	btfss	status,0,c
  7470   00006A  07C7               	decf	(_LiftUpHoldCounter+1)& (0+255),f,b
  7471   00006C  D004               	goto	i2l4868
  7472   00006E                     i2l4866:
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;main.c: 1015: else;main.c: 1016: LiftUpHoldCounter = 0;
  7476   00006E  0E00               	movlw	0
  7477   000070  6FC7               	movwf	(_LiftUpHoldCounter+1)& (0+255),b
  7478   000072  0E00               	movlw	0
  7479   000074  6FC6               	movwf	_LiftUpHoldCounter& (0+255),b
  7480   000076                     i2l4868:
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;main.c: 1018: if (LiftUpTime > 0)
  7484   000076  BFC3               	btfsc	(_LiftUpTime+1)& (0+255),7,b	;volatile
  7485   000078  D009               	goto	i2l4872
  7486   00007A  51C3               	movf	(_LiftUpTime+1)& (0+255),w,b	;volatile
  7487   00007C  E103               	bnz	i2u396_40
  7488   00007E  05C2               	decf	_LiftUpTime& (0+255),w,b	;volatile
  7489   000080  A0D8               	btfss	status,0,c
  7490   000082  D004               	goto	i2l4872
  7491   000084                     i2u396_40:
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;main.c: 1019: LiftUpTime--;
  7495   000084  07C2               	decf	_LiftUpTime& (0+255),f,b	;volatile
  7496   000086  A0D8               	btfss	status,0,c
  7497   000088  07C3               	decf	(_LiftUpTime+1)& (0+255),f,b	;volatile
  7498   00008A  D004               	goto	i2l4874
  7499   00008C                     i2l4872:
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;main.c: 1020: else;main.c: 1021: {;main.c: 1022: LiftUpTime = 0;
  7503   00008C  0E00               	movlw	0
  7504   00008E  6FC3               	movwf	(_LiftUpTime+1)& (0+255),b	;volatile
  7505   000090  0E00               	movlw	0
  7506   000092  6FC2               	movwf	_LiftUpTime& (0+255),b	;volatile
  7507   000094                     i2l4874:
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;main.c: 1023: };main.c: 1025: if(error1counter >0)
  7511   000094  BFC1               	btfsc	(_error1counter+3)& (0+255),7,b	;volatile
  7512   000096  D010               	goto	i2l4878
  7513   000098  51C1               	movf	(_error1counter+3)& (0+255),w,b	;volatile
  7514   00009A  11C0               	iorwf	(_error1counter+2)& (0+255),w,b	;volatile
  7515   00009C  11BF               	iorwf	(_error1counter+1)& (0+255),w,b	;volatile
  7516   00009E  E103               	bnz	i2u397_40
  7517   0000A0  05BE               	decf	_error1counter& (0+255),w,b	;volatile
  7518   0000A2  A0D8               	btfss	status,0,c
  7519   0000A4  D009               	goto	i2l4878
  7520   0000A6                     i2u397_40:
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;main.c: 1026: {;main.c: 1027: error1counter--;
  7524   0000A6  0EFF               	movlw	255
  7525   0000A8  27BE               	addwf	_error1counter& (0+255),f,b	;volatile
  7526   0000AA  0EFF               	movlw	255
  7527   0000AC  23BF               	addwfc	(_error1counter+1)& (0+255),f,b	;volatile
  7528   0000AE  0EFF               	movlw	255
  7529   0000B0  23C0               	addwfc	(_error1counter+2)& (0+255),f,b	;volatile
  7530   0000B2  0EFF               	movlw	255
  7531   0000B4  23C1               	addwfc	(_error1counter+3)& (0+255),f,b	;volatile
  7532                           
  7533                           ;main.c: 1028: }
  7534   0000B6  D008               	goto	i2l4880
  7535   0000B8                     i2l4878:
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;main.c: 1029: else;main.c: 1030: {;main.c: 1031: error1counter = 0;
  7539   0000B8  0E00               	movlw	0
  7540   0000BA  6FBE               	movwf	_error1counter& (0+255),b	;volatile
  7541   0000BC  0E00               	movlw	0
  7542   0000BE  6FBF               	movwf	(_error1counter+1)& (0+255),b	;volatile
  7543   0000C0  0E00               	movlw	0
  7544   0000C2  6FC0               	movwf	(_error1counter+2)& (0+255),b	;volatile
  7545   0000C4  0E00               	movlw	0
  7546   0000C6  6FC1               	movwf	(_error1counter+3)& (0+255),b	;volatile
  7547   0000C8                     i2l4880:
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;main.c: 1032: };main.c: 1034: if(error2counter >0)
  7551   0000C8  BE4A               	btfsc	(_error2counter+3)^0,7,c	;volatile
  7552   0000CA  D010               	goto	i2l4884
  7553   0000CC  504A               	movf	(_error2counter+3)^0,w,c	;volatile
  7554   0000CE  1049               	iorwf	(_error2counter+2)^0,w,c	;volatile
  7555   0000D0  1048               	iorwf	(_error2counter+1)^0,w,c	;volatile
  7556   0000D2  E103               	bnz	i2u398_40
  7557   0000D4  0447               	decf	_error2counter^0,w,c	;volatile
  7558   0000D6  A0D8               	btfss	status,0,c
  7559   0000D8  D009               	goto	i2l4884
  7560   0000DA                     i2u398_40:
  7561                           
  7562                           ; BSR set to: 0
  7563                           ;main.c: 1035: {;main.c: 1036: error2counter--;
  7564   0000DA  0EFF               	movlw	255
  7565   0000DC  2647               	addwf	_error2counter^0,f,c	;volatile
  7566   0000DE  0EFF               	movlw	255
  7567   0000E0  2248               	addwfc	(_error2counter+1)^0,f,c	;volatile
  7568   0000E2  0EFF               	movlw	255
  7569   0000E4  2249               	addwfc	(_error2counter+2)^0,f,c	;volatile
  7570   0000E6  0EFF               	movlw	255
  7571   0000E8  224A               	addwfc	(_error2counter+3)^0,f,c	;volatile
  7572                           
  7573                           ;main.c: 1037: }
  7574   0000EA  D008               	goto	i2l4886
  7575   0000EC                     i2l4884:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;main.c: 1038: else;main.c: 1039: {;main.c: 1040: error2counter = 0;
  7579   0000EC  0E00               	movlw	0
  7580   0000EE  6E47               	movwf	_error2counter^0,c	;volatile
  7581   0000F0  0E00               	movlw	0
  7582   0000F2  6E48               	movwf	(_error2counter+1)^0,c	;volatile
  7583   0000F4  0E00               	movlw	0
  7584   0000F6  6E49               	movwf	(_error2counter+2)^0,c	;volatile
  7585   0000F8  0E00               	movlw	0
  7586   0000FA  6E4A               	movwf	(_error2counter+3)^0,c	;volatile
  7587   0000FC                     i2l4886:
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;main.c: 1041: };main.c: 1043: if(error3counter >0)
  7591   0000FC  BFBD               	btfsc	(_error3counter+3)& (0+255),7,b	;volatile
  7592   0000FE  D010               	goto	i2l4890
  7593   000100  51BD               	movf	(_error3counter+3)& (0+255),w,b	;volatile
  7594   000102  11BC               	iorwf	(_error3counter+2)& (0+255),w,b	;volatile
  7595   000104  11BB               	iorwf	(_error3counter+1)& (0+255),w,b	;volatile
  7596   000106  E103               	bnz	i2u399_40
  7597   000108  05BA               	decf	_error3counter& (0+255),w,b	;volatile
  7598   00010A  A0D8               	btfss	status,0,c
  7599   00010C  D009               	goto	i2l4890
  7600   00010E                     i2u399_40:
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;main.c: 1044: {;main.c: 1045: error3counter--;
  7604   00010E  0EFF               	movlw	255
  7605   000110  27BA               	addwf	_error3counter& (0+255),f,b	;volatile
  7606   000112  0EFF               	movlw	255
  7607   000114  23BB               	addwfc	(_error3counter+1)& (0+255),f,b	;volatile
  7608   000116  0EFF               	movlw	255
  7609   000118  23BC               	addwfc	(_error3counter+2)& (0+255),f,b	;volatile
  7610   00011A  0EFF               	movlw	255
  7611   00011C  23BD               	addwfc	(_error3counter+3)& (0+255),f,b	;volatile
  7612                           
  7613                           ;main.c: 1046: }
  7614   00011E  D008               	goto	i2l4892
  7615   000120                     i2l4890:
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;main.c: 1047: else;main.c: 1048: {;main.c: 1049: error3counter = 0;
  7619   000120  0E00               	movlw	0
  7620   000122  6FBA               	movwf	_error3counter& (0+255),b	;volatile
  7621   000124  0E00               	movlw	0
  7622   000126  6FBB               	movwf	(_error3counter+1)& (0+255),b	;volatile
  7623   000128  0E00               	movlw	0
  7624   00012A  6FBC               	movwf	(_error3counter+2)& (0+255),b	;volatile
  7625   00012C  0E00               	movlw	0
  7626   00012E  6FBD               	movwf	(_error3counter+3)& (0+255),b	;volatile
  7627   000130                     i2l4892:
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;main.c: 1050: };main.c: 1052: if(error4counter>0)
  7631   000130  BFB9               	btfsc	(_error4counter+3)& (0+255),7,b	;volatile
  7632   000132  D010               	goto	i2l4896
  7633   000134  51B9               	movf	(_error4counter+3)& (0+255),w,b	;volatile
  7634   000136  11B8               	iorwf	(_error4counter+2)& (0+255),w,b	;volatile
  7635   000138  11B7               	iorwf	(_error4counter+1)& (0+255),w,b	;volatile
  7636   00013A  E103               	bnz	i2u400_40
  7637   00013C  05B6               	decf	_error4counter& (0+255),w,b	;volatile
  7638   00013E  A0D8               	btfss	status,0,c
  7639   000140  D009               	goto	i2l4896
  7640   000142                     i2u400_40:
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;main.c: 1053: {;main.c: 1054: error4counter--;
  7644   000142  0EFF               	movlw	255
  7645   000144  27B6               	addwf	_error4counter& (0+255),f,b	;volatile
  7646   000146  0EFF               	movlw	255
  7647   000148  23B7               	addwfc	(_error4counter+1)& (0+255),f,b	;volatile
  7648   00014A  0EFF               	movlw	255
  7649   00014C  23B8               	addwfc	(_error4counter+2)& (0+255),f,b	;volatile
  7650   00014E  0EFF               	movlw	255
  7651   000150  23B9               	addwfc	(_error4counter+3)& (0+255),f,b	;volatile
  7652                           
  7653                           ;main.c: 1055: }
  7654   000152  D008               	goto	i2l4898
  7655   000154                     i2l4896:
  7656                           
  7657                           ; BSR set to: 0
  7658                           ;main.c: 1056: else;main.c: 1057: {;main.c: 1058: error4counter = 0;
  7659   000154  0E00               	movlw	0
  7660   000156  6FB6               	movwf	_error4counter& (0+255),b	;volatile
  7661   000158  0E00               	movlw	0
  7662   00015A  6FB7               	movwf	(_error4counter+1)& (0+255),b	;volatile
  7663   00015C  0E00               	movlw	0
  7664   00015E  6FB8               	movwf	(_error4counter+2)& (0+255),b	;volatile
  7665   000160  0E00               	movlw	0
  7666   000162  6FB9               	movwf	(_error4counter+3)& (0+255),b	;volatile
  7667   000164                     i2l4898:
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;main.c: 1059: };main.c: 1061: if(error5counter>0)
  7671   000164  BFB5               	btfsc	(_error5counter+3)& (0+255),7,b	;volatile
  7672   000166  D010               	goto	i2l4902
  7673   000168  51B5               	movf	(_error5counter+3)& (0+255),w,b	;volatile
  7674   00016A  11B4               	iorwf	(_error5counter+2)& (0+255),w,b	;volatile
  7675   00016C  11B3               	iorwf	(_error5counter+1)& (0+255),w,b	;volatile
  7676   00016E  E103               	bnz	i2u401_40
  7677   000170  05B2               	decf	_error5counter& (0+255),w,b	;volatile
  7678   000172  A0D8               	btfss	status,0,c
  7679   000174  D009               	goto	i2l4902
  7680   000176                     i2u401_40:
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;main.c: 1062: {;main.c: 1063: error5counter--;
  7684   000176  0EFF               	movlw	255
  7685   000178  27B2               	addwf	_error5counter& (0+255),f,b	;volatile
  7686   00017A  0EFF               	movlw	255
  7687   00017C  23B3               	addwfc	(_error5counter+1)& (0+255),f,b	;volatile
  7688   00017E  0EFF               	movlw	255
  7689   000180  23B4               	addwfc	(_error5counter+2)& (0+255),f,b	;volatile
  7690   000182  0EFF               	movlw	255
  7691   000184  23B5               	addwfc	(_error5counter+3)& (0+255),f,b	;volatile
  7692                           
  7693                           ;main.c: 1064: }
  7694   000186  D008               	goto	i2l4904
  7695   000188                     i2l4902:
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;main.c: 1065: else;main.c: 1066: {;main.c: 1067: error5counter = 0;
  7699   000188  0E00               	movlw	0
  7700   00018A  6FB2               	movwf	_error5counter& (0+255),b	;volatile
  7701   00018C  0E00               	movlw	0
  7702   00018E  6FB3               	movwf	(_error5counter+1)& (0+255),b	;volatile
  7703   000190  0E00               	movlw	0
  7704   000192  6FB4               	movwf	(_error5counter+2)& (0+255),b	;volatile
  7705   000194  0E00               	movlw	0
  7706   000196  6FB5               	movwf	(_error5counter+3)& (0+255),b	;volatile
  7707   000198                     i2l4904:
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;main.c: 1068: };main.c: 1070: if(error6counter>0)
  7711   000198  BFB1               	btfsc	(_error6counter+3)& (0+255),7,b	;volatile
  7712   00019A  D010               	goto	i2l4908
  7713   00019C  51B1               	movf	(_error6counter+3)& (0+255),w,b	;volatile
  7714   00019E  11B0               	iorwf	(_error6counter+2)& (0+255),w,b	;volatile
  7715   0001A0  11AF               	iorwf	(_error6counter+1)& (0+255),w,b	;volatile
  7716   0001A2  E103               	bnz	i2u402_40
  7717   0001A4  05AE               	decf	_error6counter& (0+255),w,b	;volatile
  7718   0001A6  A0D8               	btfss	status,0,c
  7719   0001A8  D009               	goto	i2l4908
  7720   0001AA                     i2u402_40:
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;main.c: 1071: {;main.c: 1072: error6counter--;
  7724   0001AA  0EFF               	movlw	255
  7725   0001AC  27AE               	addwf	_error6counter& (0+255),f,b	;volatile
  7726   0001AE  0EFF               	movlw	255
  7727   0001B0  23AF               	addwfc	(_error6counter+1)& (0+255),f,b	;volatile
  7728   0001B2  0EFF               	movlw	255
  7729   0001B4  23B0               	addwfc	(_error6counter+2)& (0+255),f,b	;volatile
  7730   0001B6  0EFF               	movlw	255
  7731   0001B8  23B1               	addwfc	(_error6counter+3)& (0+255),f,b	;volatile
  7732                           
  7733                           ;main.c: 1073: }
  7734   0001BA  D008               	goto	i2l4910
  7735   0001BC                     i2l4908:
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;main.c: 1074: else;main.c: 1075: {;main.c: 1076: error6counter = 0;
  7739   0001BC  0E00               	movlw	0
  7740   0001BE  6FAE               	movwf	_error6counter& (0+255),b	;volatile
  7741   0001C0  0E00               	movlw	0
  7742   0001C2  6FAF               	movwf	(_error6counter+1)& (0+255),b	;volatile
  7743   0001C4  0E00               	movlw	0
  7744   0001C6  6FB0               	movwf	(_error6counter+2)& (0+255),b	;volatile
  7745   0001C8  0E00               	movlw	0
  7746   0001CA  6FB1               	movwf	(_error6counter+3)& (0+255),b	;volatile
  7747   0001CC                     i2l4910:
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;main.c: 1077: };main.c: 1079: if (sw1counter>0)
  7751   0001CC  BFC5               	btfsc	(_sw1counter+1)& (0+255),7,b	;volatile
  7752   0001CE  D009               	goto	i2l4914
  7753   0001D0  51C5               	movf	(_sw1counter+1)& (0+255),w,b	;volatile
  7754   0001D2  E103               	bnz	i2u403_40
  7755   0001D4  05C4               	decf	_sw1counter& (0+255),w,b	;volatile
  7756   0001D6  A0D8               	btfss	status,0,c
  7757   0001D8  D004               	goto	i2l4914
  7758   0001DA                     i2u403_40:
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;main.c: 1080: sw1counter--;
  7762   0001DA  07C4               	decf	_sw1counter& (0+255),f,b	;volatile
  7763   0001DC  A0D8               	btfss	status,0,c
  7764   0001DE  07C5               	decf	(_sw1counter+1)& (0+255),f,b	;volatile
  7765   0001E0  D004               	goto	i2l4916
  7766   0001E2                     i2l4914:
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;main.c: 1082: else;main.c: 1083: {;main.c: 1084: sw1counter = 0;
  7770   0001E2  0E00               	movlw	0
  7771   0001E4  6FC5               	movwf	(_sw1counter+1)& (0+255),b	;volatile
  7772   0001E6  0E00               	movlw	0
  7773   0001E8  6FC4               	movwf	_sw1counter& (0+255),b	;volatile
  7774   0001EA                     i2l4916:
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;main.c: 1085: };main.c: 1087: if (FeederRotate1Time>0)
  7778   0001EA  BE52               	btfsc	(_FeederRotate1Time+1)^0,7,c	;volatile
  7779   0001EC  D009               	goto	i2l4920
  7780   0001EE  5052               	movf	(_FeederRotate1Time+1)^0,w,c	;volatile
  7781   0001F0  E103               	bnz	i2u404_40
  7782   0001F2  0451               	decf	_FeederRotate1Time^0,w,c	;volatile
  7783   0001F4  A0D8               	btfss	status,0,c
  7784   0001F6  D004               	goto	i2l4920
  7785   0001F8                     i2u404_40:
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;main.c: 1088: FeederRotate1Time--;
  7789   0001F8  0651               	decf	_FeederRotate1Time^0,f,c	;volatile
  7790   0001FA  A0D8               	btfss	status,0,c
  7791   0001FC  0652               	decf	(_FeederRotate1Time+1)^0,f,c	;volatile
  7792   0001FE  D004               	goto	i2l4922
  7793   000200                     i2l4920:
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;main.c: 1090: else;main.c: 1091: {;main.c: 1092: FeederRotate1Time = 0;
  7797   000200  0E00               	movlw	0
  7798   000202  6E52               	movwf	(_FeederRotate1Time+1)^0,c	;volatile
  7799   000204  0E00               	movlw	0
  7800   000206  6E51               	movwf	_FeederRotate1Time^0,c	;volatile
  7801   000208                     i2l4922:
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;main.c: 1093: };main.c: 1095: if (FeederRotate2Time>0)
  7805   000208  BE50               	btfsc	(_FeederRotate2Time+1)^0,7,c	;volatile
  7806   00020A  D009               	goto	i2l4926
  7807   00020C  5050               	movf	(_FeederRotate2Time+1)^0,w,c	;volatile
  7808   00020E  E103               	bnz	i2u405_40
  7809   000210  044F               	decf	_FeederRotate2Time^0,w,c	;volatile
  7810   000212  A0D8               	btfss	status,0,c
  7811   000214  D004               	goto	i2l4926
  7812   000216                     i2u405_40:
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;main.c: 1096: FeederRotate2Time--;
  7816   000216  064F               	decf	_FeederRotate2Time^0,f,c	;volatile
  7817   000218  A0D8               	btfss	status,0,c
  7818   00021A  0650               	decf	(_FeederRotate2Time+1)^0,f,c	;volatile
  7819   00021C  D004               	goto	i2l449
  7820   00021E                     i2l4926:
  7821                           
  7822                           ; BSR set to: 0
  7823                           ;main.c: 1098: else;main.c: 1099: {;main.c: 1100: FeederRotate2Time = 0;
  7824   00021E  0E00               	movlw	0
  7825   000220  6E50               	movwf	(_FeederRotate2Time+1)^0,c	;volatile
  7826   000222  0E00               	movlw	0
  7827   000224  6E4F               	movwf	_FeederRotate2Time^0,c	;volatile
  7828   000226                     i2l449:
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;main.c: 1101: };main.c: 1103: TMR1IF_triggered = !1;
  7832   000226  0E00               	movlw	0
  7833   000228  6E42               	movwf	_TMR1IF_triggered^0,c	;volatile
  7834   00022A                     i2l4928:
  7835                           
  7836                           ;main.c: 1105: };main.c: 1108: if(TMR0IF)
  7837   00022A  A4F2               	btfss	4082,2,c	;volatile
  7838   00022C  D007               	goto	i2l4934
  7839                           
  7840                           ;main.c: 1109: {;main.c: 1110: TMR0 = 0xF9E4;
  7841   00022E  0EF9               	movlw	249
  7842   000230  6ED7               	movwf	215,c	;volatile
  7843   000232  0EE4               	movlw	228
  7844   000234  6ED6               	movwf	214,c	;volatile
  7845                           
  7846                           ;main.c: 1111: TMR0IF = 0;
  7847   000236  94F2               	bcf	4082,2,c	;volatile
  7848                           
  7849                           ;main.c: 1112: TMR0IF_triggered = 1;
  7850   000238  0E01               	movlw	1
  7851   00023A  6E43               	movwf	_TMR0IF_triggered^0,c	;volatile
  7852   00023C                     i2l4934:
  7853                           
  7854                           ;main.c: 1113: };main.c: 1114: if(TMR1IF)
  7855   00023C  A09E               	btfss	3998,0,c	;volatile
  7856   00023E  D007               	goto	i2l4940
  7857                           
  7858                           ;main.c: 1115: {;main.c: 1116: TMR1 = 0x9E57;
  7859   000240  0E9E               	movlw	158
  7860   000242  6ECF               	movwf	207,c	;volatile
  7861   000244  0E57               	movlw	87
  7862   000246  6ECE               	movwf	206,c	;volatile
  7863                           
  7864                           ;main.c: 1117: TMR1IF = 0;
  7865   000248  909E               	bcf	3998,0,c	;volatile
  7866                           
  7867                           ;main.c: 1118: TMR1IF_triggered = 1;
  7868   00024A  0E01               	movlw	1
  7869   00024C  6E42               	movwf	_TMR1IF_triggered^0,c	;volatile
  7870   00024E                     i2l4940:
  7871                           
  7872                           ;main.c: 1119: };main.c: 1120: if(TMR2IF)
  7873   00024E  A29E               	btfss	3998,1,c	;volatile
  7874   000250  D004               	goto	i2l4946
  7875                           
  7876                           ;main.c: 1121: {;main.c: 1122: TMR2IF = 0;
  7877   000252  929E               	bcf	3998,1,c	;volatile
  7878                           
  7879                           ;main.c: 1123: TMR2IF_triggered = 1;
  7880   000254  0E01               	movlw	1
  7881   000256  0100               	movlb	0	; () banked
  7882   000258  6F89               	movwf	_TMR2IF_triggered& (0+255),b	;volatile
  7883   00025A                     i2l4946:
  7884                           
  7885                           ;main.c: 1124: };main.c: 1126: if ((PIR3bits.RC2IF))
  7886   00025A  AAA4               	btfss	164,5,c	;volatile
  7887   00025C  D084               	goto	i2l453
  7888                           
  7889                           ;main.c: 1127: {;main.c: 1129: c=Read1USART();
  7890   00025E  EC6C  F012         	call	_Read1USART	;wreg free
  7891   000262  6E2A               	movwf	high_isr@c^0,c
  7892                           
  7893                           ;main.c: 1131: if ((c == 0xA5) && ((Serial_Flag == 0)||(Busy == 1)))
  7894   000264  0EA5               	movlw	165
  7895   000266  182A               	xorwf	high_isr@c^0,w,c
  7896   000268  A4D8               	btfss	status,2,c
  7897   00026A  D018               	goto	i2l4962
  7898   00026C  0100               	movlb	0	; () banked
  7899   00026E  518B               	movf	_Serial_Flag& (0+255),w,b
  7900   000270  B4D8               	btfsc	status,2,c
  7901   000272  D003               	goto	i2u412_40
  7902                           
  7903                           ; BSR set to: 0
  7904   000274  058A               	decf	_Busy& (0+255),w,b
  7905   000276  A4D8               	btfss	status,2,c
  7906   000278  D011               	goto	i2l4962
  7907   00027A                     i2u412_40:
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;main.c: 1132: {;main.c: 1133: Serial_GData = 1;
  7911   00027A  0E01               	movlw	1
  7912   00027C  6E46               	movwf	_Serial_GData^0,c
  7913                           
  7914                           ;main.c: 1134: Serial_Count = 0;
  7915   00027E  0E00               	movlw	0
  7916   000280  6E3B               	movwf	(_Serial_Count+1)^0,c
  7917   000282  0E00               	movlw	0
  7918   000284  6E3A               	movwf	_Serial_Count^0,c
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;main.c: 1135: Serial_Buffer[Serial_Count] = c;
  7922   000286  0E70               	movlw	low _Serial_Buffer
  7923   000288  243A               	addwf	_Serial_Count^0,w,c
  7924   00028A  6ED9               	movwf	fsr2l,c
  7925   00028C  0E00               	movlw	high _Serial_Buffer
  7926   00028E  203B               	addwfc	(_Serial_Count+1)^0,w,c
  7927   000290  6EDA               	movwf	fsr2h,c
  7928   000292  C02A  FFDF         	movff	high_isr@c,indf2
  7929   000296                     i2l4960:
  7930                           
  7931                           ;main.c: 1136: Serial_Count++;
  7932   000296  4A3A               	infsnz	_Serial_Count^0,f,c
  7933   000298  2A3B               	incf	(_Serial_Count+1)^0,f,c
  7934                           
  7935                           ;main.c: 1137: }
  7936   00029A  D06A               	goto	i2l477
  7937   00029C                     i2l4962:
  7938                           
  7939                           ;main.c: 1138: else if (Serial_GData == 1)
  7940   00029C  0446               	decf	_Serial_GData^0,w,c
  7941   00029E  A4D8               	btfss	status,2,c
  7942   0002A0  D067               	goto	i2l477
  7943                           
  7944                           ;main.c: 1139: {;main.c: 1140: Serial_Buffer[Serial_Count] = c;
  7945   0002A2  0E70               	movlw	low _Serial_Buffer
  7946   0002A4  243A               	addwf	_Serial_Count^0,w,c
  7947   0002A6  6ED9               	movwf	fsr2l,c
  7948   0002A8  0E00               	movlw	high _Serial_Buffer
  7949   0002AA  203B               	addwfc	(_Serial_Count+1)^0,w,c
  7950   0002AC  6EDA               	movwf	fsr2h,c
  7951   0002AE  C02A  FFDF         	movff	high_isr@c,indf2
  7952                           
  7953                           ;main.c: 1142: if(Serial_Count<5)
  7954   0002B2  503B               	movf	(_Serial_Count+1)^0,w,c
  7955   0002B4  E155               	bnz	i2l5020
  7956   0002B6  0E05               	movlw	5
  7957   0002B8  5C3A               	subwf	_Serial_Count^0,w,c
  7958   0002BA  B0D8               	btfsc	status,0,c
  7959   0002BC  D051               	goto	i2l5020
  7960                           
  7961                           ;main.c: 1143: {;main.c: 1144: if (c == 0x5A)
  7962   0002BE  0E5A               	movlw	90
  7963   0002C0  182A               	xorwf	high_isr@c^0,w,c
  7964   0002C2  A4D8               	btfss	status,2,c
  7965   0002C4  D7E8               	goto	i2l4960
  7966                           
  7967                           ;main.c: 1145: {;main.c: 1146: Temp = Serial_Buffer[1] ^ Serial_Buffer[2];
  7968   0002C6  0100               	movlb	0	; () banked
  7969   0002C8  5171               	movf	(_Serial_Buffer+1)& (0+255),w,b
  7970   0002CA  1972               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  7971   0002CC  6E29               	movwf	high_isr@Temp^0,c
  7972                           
  7973                           ;main.c: 1148: if (Temp == Serial_Buffer[3])
  7974   0002CE  5029               	movf	high_isr@Temp^0,w,c
  7975   0002D0  1973               	xorwf	(_Serial_Buffer+3)& (0+255),w,b
  7976   0002D2  A4D8               	btfss	status,2,c
  7977   0002D4  D02A               	goto	i2l5002
  7978                           
  7979                           ; BSR set to: 0
  7980                           ;main.c: 1149: {;main.c: 1150: if(Busy==0 || Serial_Buffer[2]==0xF5)
  7981   0002D6  518A               	movf	_Busy& (0+255),w,b
  7982   0002D8  B4D8               	btfsc	status,2,c
  7983   0002DA  D004               	goto	i2u418_40
  7984                           
  7985                           ; BSR set to: 0
  7986   0002DC  0EF5               	movlw	245
  7987   0002DE  1972               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  7988   0002E0  A4D8               	btfss	status,2,c
  7989   0002E2  D010               	goto	i2l4988
  7990   0002E4                     i2u418_40:
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;main.c: 1151: {;main.c: 1152: for (i=0; i<5; i++)
  7994   0002E4  0E00               	movlw	0
  7995   0002E6  6E2B               	movwf	high_isr@i^0,c
  7996   0002E8                     i2l4982:
  7997                           
  7998                           ;main.c: 1153: {;main.c: 1154: Write1USART(Serial_Buffer[i]);
  7999   0002E8  0E70               	movlw	low _Serial_Buffer
  8000   0002EA  242B               	addwf	high_isr@i^0,w,c
  8001   0002EC  6ED9               	movwf	fsr2l,c
  8002   0002EE  6ADA               	clrf	fsr2h,c
  8003   0002F0  0E00               	movlw	high _Serial_Buffer
  8004   0002F2  22DA               	addwfc	fsr2h,f,c
  8005   0002F4  50DF               	movf	indf2,w,c
  8006   0002F6  ECE4  F012         	call	i2_Write1USART
  8007   0002FA  2A2B               	incf	high_isr@i^0,f,c
  8008   0002FC  0E04               	movlw	4
  8009   0002FE  642B               	cpfsgt	high_isr@i^0,c
  8010   000300  D7F3               	goto	i2l4982
  8011   000302  D009               	goto	i2u420_40
  8012   000304                     i2l4988:
  8013                           
  8014                           ; BSR set to: 0
  8015                           ;main.c: 1157: else;main.c: 1158: {;main.c: 1159: for (i=0; i<5; i++)
  8016   000304  0E00               	movlw	0
  8017   000306  6E2B               	movwf	high_isr@i^0,c
  8018   000308                     i2l4994:
  8019                           
  8020                           ;main.c: 1160: Write1USART(0x16);
  8021   000308  0E16               	movlw	22
  8022   00030A  ECE4  F012         	call	i2_Write1USART
  8023   00030E  2A2B               	incf	high_isr@i^0,f,c
  8024   000310  0E04               	movlw	4
  8025   000312  642B               	cpfsgt	high_isr@i^0,c
  8026   000314  D7F9               	goto	i2l4994
  8027   000316                     i2u420_40:
  8028                           
  8029                           ;main.c: 1161: };main.c: 1163: Serial_Flag = 1;
  8030   000316  0E01               	movlw	1
  8031   000318  0100               	movlb	0	; () banked
  8032   00031A  6F8B               	movwf	_Serial_Flag& (0+255),b
  8033                           
  8034                           ;main.c: 1164: Serial_Count = 0;
  8035   00031C  0E00               	movlw	0
  8036   00031E  6E3B               	movwf	(_Serial_Count+1)^0,c
  8037   000320  0E00               	movlw	0
  8038   000322  6E3A               	movwf	_Serial_Count^0,c
  8039                           
  8040                           ;main.c: 1165: OpMode = AUTO_MODE;
  8041   000324  0E02               	movlw	2
  8042   000326  6E56               	movwf	_OpMode^0,c	;volatile
  8043                           
  8044                           ;main.c: 1167: }
  8045   000328  D00F               	goto	i2u421_40
  8046   00032A                     i2l5002:
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;main.c: 1168: else;main.c: 1169: {;main.c: 1170: Serial_Flag = 0;
  8050   00032A  0E00               	movlw	0
  8051   00032C  6F8B               	movwf	_Serial_Flag& (0+255),b
  8052                           
  8053                           ;main.c: 1171: Serial_Count = 0;
  8054   00032E  0E00               	movlw	0
  8055   000330  6E3B               	movwf	(_Serial_Count+1)^0,c
  8056   000332  0E00               	movlw	0
  8057   000334  6E3A               	movwf	_Serial_Count^0,c
  8058                           
  8059                           ;main.c: 1172: for (i=0; i<5; i++)
  8060   000336  0E00               	movlw	0
  8061   000338  6E2B               	movwf	high_isr@i^0,c
  8062   00033A                     i2l5008:
  8063                           
  8064                           ;main.c: 1173: Write1USART(0x15);
  8065   00033A  0E15               	movlw	21
  8066   00033C  ECE4  F012         	call	i2_Write1USART
  8067   000340  2A2B               	incf	high_isr@i^0,f,c
  8068   000342  0E04               	movlw	4
  8069   000344  642B               	cpfsgt	high_isr@i^0,c
  8070   000346  D7F9               	goto	i2l5008
  8071   000348                     i2u421_40:
  8072                           
  8073                           ;main.c: 1174: };main.c: 1176: if(Serial_Buffer[2]==0xF5 && OpMode == AUTO_MODE)
  8074   000348  0EF5               	movlw	245
  8075   00034A  0100               	movlb	0	; () banked
  8076   00034C  1972               	xorwf	(_Serial_Buffer+2)& (0+255),w,b
  8077   00034E  A4D8               	btfss	status,2,c
  8078   000350  D7A2               	goto	i2l4960
  8079                           
  8080                           ; BSR set to: 0
  8081   000352  0E02               	movlw	2
  8082   000354  1856               	xorwf	_OpMode^0,w,c	;volatile
  8083   000356  A4D8               	btfss	status,2,c
  8084   000358  D79E               	goto	i2l4960
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;main.c: 1177: {;main.c: 1178: Stop = 1;
  8088   00035A  0E01               	movlw	1
  8089   00035C  6E45               	movwf	_Stop^0,c
  8090   00035E  D79B               	goto	i2l4960
  8091   000360                     i2l5020:
  8092                           
  8093                           ;main.c: 1182: else;main.c: 1183: {;main.c: 1184: Serial_GData = 0;
  8094   000360  0E00               	movlw	0
  8095   000362  6E46               	movwf	_Serial_GData^0,c
  8096   000364  D798               	goto	i2l4960
  8097   000366                     i2l453:
  8098                           
  8099                           ;main.c: 1190: else;main.c: 1191: {;main.c: 1192: if (RCSTA1bits.OERR == 1)
  8100   000366  A2AC               	btfss	172,1,c	;volatile
  8101   000368  D003               	goto	i2l477
  8102                           
  8103                           ;main.c: 1193: {;main.c: 1194: RCSTA1bits.OERR = 0;
  8104   00036A  92AC               	bcf	172,1,c	;volatile
  8105                           
  8106                           ;main.c: 1195: RCSTA1bits.CREN = 0;
  8107   00036C  98AC               	bcf	172,4,c	;volatile
  8108                           
  8109                           ;main.c: 1196: RCSTA1bits.CREN = 1;
  8110   00036E  88AC               	bsf	172,4,c	;volatile
  8111   000370                     i2l477:
  8112   000370  C028  FFDA         	movff	??_high_isr+1,fsr2h
  8113   000374  C027  FFD9         	movff	??_high_isr,fsr2l
  8114   000378  9257               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8115   00037A  0011               	retfie		f
  8116   00037C                     __end_of_high_isr:
  8117                           	callstack 0
  8118                           
  8119 ;; *************** function i2_Write1USART *****************
  8120 ;; Defined at:
  8121 ;;		line 41 in file "usart.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;  data            1    wreg     unsigned char 
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;  data            1    0[COMRAM] unsigned char 
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  1    wreg      void 
  8128 ;; Registers used:
  8129 ;;		wreg
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8139 ;;Total ram usage:        1 bytes
  8140 ;; Hardware stack levels used: 1
  8141 ;; This function calls:
  8142 ;;		Nothing
  8143 ;; This function is called by:
  8144 ;;		_high_isr
  8145 ;; This function uses a non-reentrant model
  8146 ;;
  8147                           
  8148                           	psect	text35
  8149   0025C8                     __ptext35:
  8150                           	callstack 0
  8151   0025C8                     i2_Write1USART:
  8152                           	callstack 26
  8153                           
  8154                           ;incstack = 0
  8155                           ;i2Write1USART@data stored from wreg
  8156   0025C8  6E01               	movwf	i2Write1USART@data^0,c
  8157                           
  8158                           ;usart.c: 43: TXREG2 = data;
  8159   0025CA  C001  FFA9         	movff	i2Write1USART@data,4009	;volatile
  8160   0025CE                     i2l744:
  8161   0025CE  B2A8               	btfsc	168,1,c	;volatile
  8162   0025D0  0012               	return	
  8163   0025D2  D7FD               	goto	i2l744
  8164   0025D4                     __end_ofi2_Write1USART:
  8165                           	callstack 0
  8166                           
  8167 ;; *************** function i2_Lifter_Stop *****************
  8168 ;; Defined at:
  8169 ;;		line 1387 in file "main.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;		None
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;		None
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  1    wreg      void 
  8176 ;; Registers used:
  8177 ;;		None
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8187 ;;Total ram usage:        0 bytes
  8188 ;; Hardware stack levels used: 1
  8189 ;; This function calls:
  8190 ;;		Nothing
  8191 ;; This function is called by:
  8192 ;;		_high_isr
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text36
  8197   00263A                     __ptext36:
  8198                           	callstack 0
  8199   00263A                     i2_Lifter_Stop:
  8200                           	callstack 26
  8201                           
  8202                           ;main.c: 1389: LATFbits.LATF7 = 1;
  8203                           
  8204                           ;incstack = 0
  8205   00263A  8E8E               	bsf	142,7,c	;volatile
  8206                           
  8207                           ;main.c: 1390: LATFbits.LATF6 = 1;
  8208   00263C  8C8E               	bsf	142,6,c	;volatile
  8209   00263E  0012               	return		;funcret
  8210   002640                     __end_ofi2_Lifter_Stop:
  8211                           	callstack 0
  8212                           
  8213 ;; *************** function i2_Feeder_Stop *****************
  8214 ;; Defined at:
  8215 ;;		line 1416 in file "main.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;		None
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;		None
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  1    wreg      void 
  8222 ;; Registers used:
  8223 ;;		None
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8233 ;;Total ram usage:        0 bytes
  8234 ;; Hardware stack levels used: 1
  8235 ;; This function calls:
  8236 ;;		Nothing
  8237 ;; This function is called by:
  8238 ;;		_high_isr
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           	psect	text37
  8243   002640                     __ptext37:
  8244                           	callstack 0
  8245   002640                     i2_Feeder_Stop:
  8246                           	callstack 26
  8247                           
  8248                           ;main.c: 1418: LATEbits.LATE2 = 1;
  8249                           
  8250                           ;incstack = 0
  8251   002640  848D               	bsf	141,2,c	;volatile
  8252                           
  8253                           ;main.c: 1419: LATEbits.LATE1 = 1;
  8254   002642  828D               	bsf	141,1,c	;volatile
  8255   002644  0012               	return		;funcret
  8256   002646                     __end_ofi2_Feeder_Stop:
  8257                           	callstack 0
  8258                           
  8259 ;; *************** function _Read1USART *****************
  8260 ;; Defined at:
  8261 ;;		line 51 in file "usart.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;		None
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;  result          1    0[COMRAM] unsigned char 
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      unsigned char 
  8268 ;; Registers used:
  8269 ;;		wreg, status,2
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;Total ram usage:        1 bytes
  8280 ;; Hardware stack levels used: 1
  8281 ;; This function calls:
  8282 ;;		Nothing
  8283 ;; This function is called by:
  8284 ;;		_high_isr
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text38
  8289   0024D8                     __ptext38:
  8290                           	callstack 0
  8291   0024D8                     _Read1USART:
  8292                           	callstack 26
  8293                           
  8294                           ;usart.c: 53: char result;;usart.c: 55: if (RCSTA2bits.OERR)
  8295                           
  8296                           ;incstack = 0
  8297   0024D8  A29C               	btfss	156,1,c	;volatile
  8298   0024DA  D007               	goto	i2l750
  8299                           
  8300                           ;usart.c: 56: {;usart.c: 57: RCSTA2bits.CREN = 0;
  8301   0024DC  989C               	bcf	156,4,c	;volatile
  8302                           
  8303                           ;usart.c: 58: result = RCREG2;
  8304   0024DE  CFAA F001          	movff	4010,Read1USART@result	;volatile
  8305                           
  8306                           ;usart.c: 59: result = RCREG2;
  8307   0024E2  CFAA F001          	movff	4010,Read1USART@result	;volatile
  8308                           
  8309                           ;usart.c: 60: RCSTA2bits.CREN = 1;
  8310   0024E6  889C               	bsf	156,4,c	;volatile
  8311                           
  8312                           ;usart.c: 61: }
  8313   0024E8  D002               	goto	i2l3960
  8314   0024EA                     i2l750:
  8315                           
  8316                           ;usart.c: 62: else;usart.c: 63: {;usart.c: 64: result = RCREG2;
  8317   0024EA  CFAA F001          	movff	4010,Read1USART@result	;volatile
  8318   0024EE                     i2l3960:
  8319                           
  8320                           ;usart.c: 65: };usart.c: 67: return result;
  8321   0024EE  5001               	movf	Read1USART@result^0,w,c
  8322   0024F0  0012               	return		;funcret
  8323   0024F2                     __end_of_Read1USART:
  8324                           	callstack 0
  8325                           
  8326 ;; *************** function _ISR_UpdateDisplay *****************
  8327 ;; Defined at:
  8328 ;;		line 1204 in file "main.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;		None
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;		None
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  1    wreg      void 
  8335 ;; Registers used:
  8336 ;;		wreg, status,2, status,0, cstack
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8344 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8345 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8346 ;;Total ram usage:        8 bytes
  8347 ;; Hardware stack levels used: 1
  8348 ;; Hardware stack levels required when called: 3
  8349 ;; This function calls:
  8350 ;;		i2___aldiv
  8351 ;;		i2___almod
  8352 ;;		i2_displayno
  8353 ;;		i2_read_i2c
  8354 ;;		i2_write_i2c
  8355 ;; This function is called by:
  8356 ;;		_high_isr
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           	psect	text39
  8361   0014FE                     __ptext39:
  8362                           	callstack 0
  8363   0014FE                     _ISR_UpdateDisplay:
  8364                           	callstack 23
  8365                           
  8366                           ;main.c: 1206: if (number != Old_Number)
  8367                           
  8368                           ;incstack = 0
  8369   0014FE  504B               	movf	_Old_Number^0,w,c	;volatile
  8370   001500  0100               	movlb	0	; () banked
  8371   001502  19D5               	xorwf	_number& (0+255),w,b	;volatile
  8372   001504  E10B               	bnz	i2u252_40
  8373   001506  504C               	movf	(_Old_Number+1)^0,w,c	;volatile
  8374   001508  19D6               	xorwf	(_number+1)& (0+255),w,b	;volatile
  8375   00150A  E108               	bnz	i2u252_40
  8376   00150C  504D               	movf	(_Old_Number+2)^0,w,c	;volatile
  8377   00150E  19D7               	xorwf	(_number+2)& (0+255),w,b	;volatile
  8378   001510  E105               	bnz	i2u252_40
  8379   001512  504E               	movf	(_Old_Number+3)^0,w,c	;volatile
  8380   001514  19D8               	xorwf	(_number+3)& (0+255),w,b	;volatile
  8381   001516  A4D8               	btfss	status,2,c
  8382   001518  D094               	goto	i2l3916
  8383   00151A  D167               	goto	i2l3942
  8384   00151C                     i2u252_40:
  8385   00151C  D092               	goto	i2l3916
  8386   00151E                     i2l3896:
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;main.c: 1211: Temp = number&0x00FF;
  8390   00151E  51D5               	movf	_number& (0+255),w,b	;volatile
  8391   001520  6E2C               	movwf	_Temp^0,c	;volatile
  8392   001522  6A2D               	clrf	(_Temp+1)^0,c	;volatile
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;main.c: 1212: write_i2c(EAdd_Low, Temp);
  8396   001524  C0E1  F019         	movff	_EAdd_Low,i2write_i2c@address	;volatile
  8397   001528  C0E2  F01A         	movff	_EAdd_Low+1,i2write_i2c@address+1	;volatile
  8398   00152C  0E00               	movlw	0
  8399   00152E  BE1A               	btfsc	(i2write_i2c@address+1)^0,7,c
  8400   001530  0EFF               	movlw	-1
  8401   001532  6E1B               	movwf	(i2write_i2c@address+2)^0,c
  8402   001534  6E1C               	movwf	(i2write_i2c@address+3)^0,c
  8403   001536  C02C  F01D         	movff	_Temp,i2write_i2c@data	;volatile
  8404   00153A  C02D  F01E         	movff	_Temp+1,i2write_i2c@data+1	;volatile
  8405   00153E  EC9A  F011         	call	i2_write_i2c	;wreg free
  8406                           
  8407                           ;main.c: 1213: Edigit++;
  8408   001542  4A2E               	infsnz	_Edigit^0,f,c	;volatile
  8409   001544  2A2F               	incf	(_Edigit+1)^0,f,c	;volatile
  8410                           
  8411                           ;main.c: 1214: break;
  8412   001546  D091               	goto	i2l3918
  8413   001548                     i2l3902:
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;main.c: 1216: if (((number/0x100)&0x00FF) != read_i2c(EAdd_High)) {
  8417   001548  C0E3  F019         	movff	_EAdd_High,i2read_i2c@address	;volatile
  8418   00154C  C0E4  F01A         	movff	_EAdd_High+1,i2read_i2c@address+1	;volatile
  8419   001550  0E00               	movlw	0
  8420   001552  BE1A               	btfsc	(i2read_i2c@address+1)^0,7,c
  8421   001554  0EFF               	movlw	-1
  8422   001556  6E1B               	movwf	(i2read_i2c@address+2)^0,c
  8423   001558  6E1C               	movwf	(i2read_i2c@address+3)^0,c
  8424   00155A  ECE1  F010         	call	i2_read_i2c	;wreg free
  8425   00155E  C019  F01F         	movff	?i2_read_i2c,??_ISR_UpdateDisplay
  8426   001562  C01A  F020         	movff	?i2_read_i2c+1,??_ISR_UpdateDisplay+1
  8427   001566  0E00               	movlw	0
  8428   001568  BE20               	btfsc	(??_ISR_UpdateDisplay+1)^0,7,c
  8429   00156A  0EFF               	movlw	255
  8430   00156C  6E21               	movwf	(??_ISR_UpdateDisplay+2)^0,c
  8431   00156E  6E22               	movwf	(??_ISR_UpdateDisplay+3)^0,c
  8432   001570  C0D5  F00B         	movff	_number,i2___aldiv@dividend	;volatile
  8433   001574  C0D6  F00C         	movff	_number+1,i2___aldiv@dividend+1	;volatile
  8434   001578  C0D7  F00D         	movff	_number+2,i2___aldiv@dividend+2	;volatile
  8435   00157C  C0D8  F00E         	movff	_number+3,i2___aldiv@dividend+3	;volatile
  8436   001580  0E00               	movlw	0
  8437   001582  6E0F               	movwf	i2___aldiv@divisor^0,c
  8438   001584  0E01               	movlw	1
  8439   001586  6E10               	movwf	(i2___aldiv@divisor+1)^0,c
  8440   001588  0E00               	movlw	0
  8441   00158A  6E11               	movwf	(i2___aldiv@divisor+2)^0,c
  8442   00158C  0E00               	movlw	0
  8443   00158E  6E12               	movwf	(i2___aldiv@divisor+3)^0,c
  8444   001590  ECDE  F00E         	call	i2___aldiv	;wreg free
  8445   001594  0EFF               	movlw	255
  8446   001596  140B               	andwf	?i2___aldiv^0,w,c
  8447   001598  6E23               	movwf	(??_ISR_UpdateDisplay+4)^0,c
  8448   00159A  0E00               	movlw	0
  8449   00159C  140C               	andwf	(?i2___aldiv+1)^0,w,c
  8450   00159E  6E24               	movwf	(??_ISR_UpdateDisplay+5)^0,c
  8451   0015A0  0E00               	movlw	0
  8452   0015A2  140D               	andwf	(?i2___aldiv+2)^0,w,c
  8453   0015A4  6E25               	movwf	(??_ISR_UpdateDisplay+6)^0,c
  8454   0015A6  0E00               	movlw	0
  8455   0015A8  140E               	andwf	(?i2___aldiv+3)^0,w,c
  8456   0015AA  6E26               	movwf	(??_ISR_UpdateDisplay+7)^0,c
  8457   0015AC  501F               	movf	??_ISR_UpdateDisplay^0,w,c
  8458   0015AE  1823               	xorwf	(??_ISR_UpdateDisplay+4)^0,w,c
  8459   0015B0  E10A               	bnz	i2u253_40
  8460   0015B2  5020               	movf	(??_ISR_UpdateDisplay+1)^0,w,c
  8461   0015B4  1824               	xorwf	(??_ISR_UpdateDisplay+5)^0,w,c
  8462   0015B6  E107               	bnz	i2u253_40
  8463   0015B8  5021               	movf	(??_ISR_UpdateDisplay+2)^0,w,c
  8464   0015BA  1825               	xorwf	(??_ISR_UpdateDisplay+6)^0,w,c
  8465   0015BC  E104               	bnz	i2u253_40
  8466   0015BE  5022               	movf	(??_ISR_UpdateDisplay+3)^0,w,c
  8467   0015C0  1826               	xorwf	(??_ISR_UpdateDisplay+7)^0,w,c
  8468   0015C2  B4D8               	btfsc	status,2,c
  8469   0015C4  D024               	goto	i2l3906
  8470   0015C6                     i2u253_40:
  8471                           
  8472                           ;main.c: 1217: Temp = (number/0x100)&0x00FF;
  8473   0015C6  C0D5  F00B         	movff	_number,i2___aldiv@dividend	;volatile
  8474   0015CA  C0D6  F00C         	movff	_number+1,i2___aldiv@dividend+1	;volatile
  8475   0015CE  C0D7  F00D         	movff	_number+2,i2___aldiv@dividend+2	;volatile
  8476   0015D2  C0D8  F00E         	movff	_number+3,i2___aldiv@dividend+3	;volatile
  8477   0015D6  0E00               	movlw	0
  8478   0015D8  6E0F               	movwf	i2___aldiv@divisor^0,c
  8479   0015DA  0E01               	movlw	1
  8480   0015DC  6E10               	movwf	(i2___aldiv@divisor+1)^0,c
  8481   0015DE  0E00               	movlw	0
  8482   0015E0  6E11               	movwf	(i2___aldiv@divisor+2)^0,c
  8483   0015E2  0E00               	movlw	0
  8484   0015E4  6E12               	movwf	(i2___aldiv@divisor+3)^0,c
  8485   0015E6  ECDE  F00E         	call	i2___aldiv	;wreg free
  8486   0015EA  500B               	movf	?i2___aldiv^0,w,c
  8487   0015EC  6E2C               	movwf	_Temp^0,c	;volatile
  8488   0015EE  6A2D               	clrf	(_Temp+1)^0,c	;volatile
  8489                           
  8490                           ;main.c: 1218: write_i2c(EAdd_High, Temp);
  8491   0015F0  C0E3  F019         	movff	_EAdd_High,i2write_i2c@address	;volatile
  8492   0015F4  C0E4  F01A         	movff	_EAdd_High+1,i2write_i2c@address+1	;volatile
  8493   0015F8  0E00               	movlw	0
  8494   0015FA  BE1A               	btfsc	(i2write_i2c@address+1)^0,7,c
  8495   0015FC  0EFF               	movlw	-1
  8496   0015FE  6E1B               	movwf	(i2write_i2c@address+2)^0,c
  8497   001600  6E1C               	movwf	(i2write_i2c@address+3)^0,c
  8498   001602  C02C  F01D         	movff	_Temp,i2write_i2c@data	;volatile
  8499   001606  C02D  F01E         	movff	_Temp+1,i2write_i2c@data+1	;volatile
  8500   00160A  EC9A  F011         	call	i2_write_i2c	;wreg free
  8501   00160E                     i2l3906:
  8502                           
  8503                           ;main.c: 1219: };main.c: 1220: Old_Number = number;
  8504   00160E  C0D5  F04B         	movff	_number,_Old_Number	;volatile
  8505   001612  C0D6  F04C         	movff	_number+1,_Old_Number+1	;volatile
  8506   001616  C0D7  F04D         	movff	_number+2,_Old_Number+2	;volatile
  8507   00161A  C0D8  F04E         	movff	_number+3,_Old_Number+3	;volatile
  8508                           
  8509                           ;main.c: 1221: Edigit = 0;
  8510   00161E  0E00               	movlw	0
  8511   001620  6E2F               	movwf	(_Edigit+1)^0,c	;volatile
  8512   001622  0E00               	movlw	0
  8513   001624  6E2E               	movwf	_Edigit^0,c	;volatile
  8514                           
  8515                           ;main.c: 1222: break;
  8516   001626  D021               	goto	i2l3918
  8517   001628                     i2l3910:
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;main.c: 1231: Edigit = 0;
  8521   001628  0E00               	movlw	0
  8522   00162A  6E2F               	movwf	(_Edigit+1)^0,c	;volatile
  8523   00162C  0E00               	movlw	0
  8524   00162E  6E2E               	movwf	_Edigit^0,c	;volatile
  8525                           
  8526                           ; BSR set to: 0
  8527                           ;main.c: 1232: Old_Number = number;
  8528   001630  C0D5  F04B         	movff	_number,_Old_Number	;volatile
  8529   001634  C0D6  F04C         	movff	_number+1,_Old_Number+1	;volatile
  8530   001638  C0D7  F04D         	movff	_number+2,_Old_Number+2	;volatile
  8531   00163C  C0D8  F04E         	movff	_number+3,_Old_Number+3	;volatile
  8532                           
  8533                           ;main.c: 1233: break;
  8534   001640  D014               	goto	i2l3918
  8535   001642                     i2l3916:
  8536                           
  8537                           ; BSR set to: 0
  8538   001642  C02E  F01F         	movff	_Edigit,??_ISR_UpdateDisplay	;volatile
  8539   001646  C02F  F020         	movff	_Edigit+1,??_ISR_UpdateDisplay+1	;volatile
  8540                           
  8541                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8542                           ; Switch size 1, requested type "simple"
  8543                           ; Number of cases is 1, Range of values is 0 to 0
  8544                           ; switch strategies available:
  8545                           ; Name         Instructions Cycles
  8546                           ; simple_byte            4     3 (average)
  8547                           ;	Chosen strategy is simple_byte
  8548   00164A  5020               	movf	(??_ISR_UpdateDisplay+1)^0,w,c
  8549   00164C  0A00               	xorlw	0	; case 0
  8550   00164E  A4D8               	btfss	status,2,c
  8551   001650  D7EB               	goto	i2l3910
  8552                           
  8553                           ; BSR set to: 0
  8554                           ; Switch size 1, requested type "simple"
  8555                           ; Number of cases is 4, Range of values is 0 to 3
  8556                           ; switch strategies available:
  8557                           ; Name         Instructions Cycles
  8558                           ; simple_byte           13     7 (average)
  8559                           ;	Chosen strategy is simple_byte
  8560   001652  501F               	movf	??_ISR_UpdateDisplay^0,w,c
  8561   001654  0A00               	xorlw	0	; case 0
  8562   001656  B4D8               	btfsc	status,2,c
  8563   001658  D762               	goto	i2l3896
  8564   00165A  0A01               	xorlw	1	; case 1
  8565   00165C  B4D8               	btfsc	status,2,c
  8566   00165E  D774               	goto	i2l3902
  8567   001660  0A03               	xorlw	3	; case 2
  8568   001662  B4D8               	btfsc	status,2,c
  8569   001664  D7E1               	goto	i2l3910
  8570   001666  0A01               	xorlw	1	; case 3
  8571   001668  D7DF               	goto	i2l3910
  8572   00166A                     i2l3918:
  8573                           
  8574                           ;main.c: 1235: units = 0x30+(number%10);
  8575   00166A  C0D5  F001         	movff	_number,i2___almod@dividend	;volatile
  8576   00166E  C0D6  F002         	movff	_number+1,i2___almod@dividend+1	;volatile
  8577   001672  C0D7  F003         	movff	_number+2,i2___almod@dividend+2	;volatile
  8578   001676  C0D8  F004         	movff	_number+3,i2___almod@dividend+3	;volatile
  8579   00167A  0E0A               	movlw	10
  8580   00167C  6E05               	movwf	i2___almod@divisor^0,c
  8581   00167E  0E00               	movlw	0
  8582   001680  6E06               	movwf	(i2___almod@divisor+1)^0,c
  8583   001682  0E00               	movlw	0
  8584   001684  6E07               	movwf	(i2___almod@divisor+2)^0,c
  8585   001686  0E00               	movlw	0
  8586   001688  6E08               	movwf	(i2___almod@divisor+3)^0,c
  8587   00168A  EC9B  F00F         	call	i2___almod	;wreg free
  8588   00168E  0E30               	movlw	48
  8589   001690  2401               	addwf	?i2___almod^0,w,c
  8590   001692  6E36               	movwf	_units^0,c	;volatile
  8591   001694  0E00               	movlw	0
  8592   001696  2002               	addwfc	(?i2___almod+1)^0,w,c
  8593   001698  6E37               	movwf	(_units+1)^0,c	;volatile
  8594                           
  8595                           ;main.c: 1236: tens = 0x30+((number%100)/10);
  8596   00169A  0E64               	movlw	100
  8597   00169C  6E05               	movwf	i2___almod@divisor^0,c
  8598   00169E  0E00               	movlw	0
  8599   0016A0  6E06               	movwf	(i2___almod@divisor+1)^0,c
  8600   0016A2  0E00               	movlw	0
  8601   0016A4  6E07               	movwf	(i2___almod@divisor+2)^0,c
  8602   0016A6  0E00               	movlw	0
  8603   0016A8  6E08               	movwf	(i2___almod@divisor+3)^0,c
  8604   0016AA  C0D5  F001         	movff	_number,i2___almod@dividend	;volatile
  8605   0016AE  C0D6  F002         	movff	_number+1,i2___almod@dividend+1	;volatile
  8606   0016B2  C0D7  F003         	movff	_number+2,i2___almod@dividend+2	;volatile
  8607   0016B6  C0D8  F004         	movff	_number+3,i2___almod@dividend+3	;volatile
  8608   0016BA  EC9B  F00F         	call	i2___almod	;wreg free
  8609   0016BE  C001  F00B         	movff	?i2___almod,i2___aldiv@dividend
  8610   0016C2  C002  F00C         	movff	?i2___almod+1,i2___aldiv@dividend+1
  8611   0016C6  C003  F00D         	movff	?i2___almod+2,i2___aldiv@dividend+2
  8612   0016CA  C004  F00E         	movff	?i2___almod+3,i2___aldiv@dividend+3
  8613   0016CE  0E0A               	movlw	10
  8614   0016D0  6E0F               	movwf	i2___aldiv@divisor^0,c
  8615   0016D2  0E00               	movlw	0
  8616   0016D4  6E10               	movwf	(i2___aldiv@divisor+1)^0,c
  8617   0016D6  0E00               	movlw	0
  8618   0016D8  6E11               	movwf	(i2___aldiv@divisor+2)^0,c
  8619   0016DA  0E00               	movlw	0
  8620   0016DC  6E12               	movwf	(i2___aldiv@divisor+3)^0,c
  8621   0016DE  ECDE  F00E         	call	i2___aldiv	;wreg free
  8622   0016E2  0E30               	movlw	48
  8623   0016E4  240B               	addwf	?i2___aldiv^0,w,c
  8624   0016E6  6E34               	movwf	_tens^0,c	;volatile
  8625   0016E8  0E00               	movlw	0
  8626   0016EA  200C               	addwfc	(?i2___aldiv+1)^0,w,c
  8627   0016EC  6E35               	movwf	(_tens+1)^0,c	;volatile
  8628                           
  8629                           ;main.c: 1237: hundreds =0x30+((number%1000)/100);
  8630   0016EE  0EE8               	movlw	232
  8631   0016F0  6E05               	movwf	i2___almod@divisor^0,c
  8632   0016F2  0E03               	movlw	3
  8633   0016F4  6E06               	movwf	(i2___almod@divisor+1)^0,c
  8634   0016F6  0E00               	movlw	0
  8635   0016F8  6E07               	movwf	(i2___almod@divisor+2)^0,c
  8636   0016FA  0E00               	movlw	0
  8637   0016FC  6E08               	movwf	(i2___almod@divisor+3)^0,c
  8638   0016FE  C0D5  F001         	movff	_number,i2___almod@dividend	;volatile
  8639   001702  C0D6  F002         	movff	_number+1,i2___almod@dividend+1	;volatile
  8640   001706  C0D7  F003         	movff	_number+2,i2___almod@dividend+2	;volatile
  8641   00170A  C0D8  F004         	movff	_number+3,i2___almod@dividend+3	;volatile
  8642   00170E  EC9B  F00F         	call	i2___almod	;wreg free
  8643   001712  C001  F00B         	movff	?i2___almod,i2___aldiv@dividend
  8644   001716  C002  F00C         	movff	?i2___almod+1,i2___aldiv@dividend+1
  8645   00171A  C003  F00D         	movff	?i2___almod+2,i2___aldiv@dividend+2
  8646   00171E  C004  F00E         	movff	?i2___almod+3,i2___aldiv@dividend+3
  8647   001722  0E64               	movlw	100
  8648   001724  6E0F               	movwf	i2___aldiv@divisor^0,c
  8649   001726  0E00               	movlw	0
  8650   001728  6E10               	movwf	(i2___aldiv@divisor+1)^0,c
  8651   00172A  0E00               	movlw	0
  8652   00172C  6E11               	movwf	(i2___aldiv@divisor+2)^0,c
  8653   00172E  0E00               	movlw	0
  8654   001730  6E12               	movwf	(i2___aldiv@divisor+3)^0,c
  8655   001732  ECDE  F00E         	call	i2___aldiv	;wreg free
  8656   001736  0E30               	movlw	48
  8657   001738  240B               	addwf	?i2___aldiv^0,w,c
  8658   00173A  6E32               	movwf	_hundreds^0,c	;volatile
  8659   00173C  0E00               	movlw	0
  8660   00173E  200C               	addwfc	(?i2___aldiv+1)^0,w,c
  8661   001740  6E33               	movwf	(_hundreds+1)^0,c	;volatile
  8662                           
  8663                           ;main.c: 1238: thousands = 0x30+(number/1000);
  8664   001742  C0D5  F00B         	movff	_number,i2___aldiv@dividend	;volatile
  8665   001746  C0D6  F00C         	movff	_number+1,i2___aldiv@dividend+1	;volatile
  8666   00174A  C0D7  F00D         	movff	_number+2,i2___aldiv@dividend+2	;volatile
  8667   00174E  C0D8  F00E         	movff	_number+3,i2___aldiv@dividend+3	;volatile
  8668   001752  0EE8               	movlw	232
  8669   001754  6E0F               	movwf	i2___aldiv@divisor^0,c
  8670   001756  0E03               	movlw	3
  8671   001758  6E10               	movwf	(i2___aldiv@divisor+1)^0,c
  8672   00175A  0E00               	movlw	0
  8673   00175C  6E11               	movwf	(i2___aldiv@divisor+2)^0,c
  8674   00175E  0E00               	movlw	0
  8675   001760  6E12               	movwf	(i2___aldiv@divisor+3)^0,c
  8676   001762  ECDE  F00E         	call	i2___aldiv	;wreg free
  8677   001766  0E30               	movlw	48
  8678   001768  240B               	addwf	?i2___aldiv^0,w,c
  8679   00176A  6E30               	movwf	_thousands^0,c	;volatile
  8680   00176C  0E00               	movlw	0
  8681   00176E  200C               	addwfc	(?i2___aldiv+1)^0,w,c
  8682   001770  6E31               	movwf	(_thousands+1)^0,c	;volatile
  8683   001772  D03B               	goto	i2l3942
  8684   001774                     i2l3920:
  8685                           
  8686                           ;main.c: 1244: displayno(digit,units);
  8687   001774  C053  F001         	movff	_digit,i2displayno@digit	;volatile
  8688   001778  C054  F002         	movff	_digit+1,i2displayno@digit+1	;volatile
  8689   00177C  C036  F003         	movff	_units,i2displayno@number	;volatile
  8690   001780  C037  F004         	movff	_units+1,i2displayno@number+1	;volatile
  8691   001784  ECFE  F00C         	call	i2_displayno	;wreg free
  8692   001788                     i2l3922:
  8693                           
  8694                           ;main.c: 1245: digit++;
  8695   001788  4A53               	infsnz	_digit^0,f,c	;volatile
  8696   00178A  2A54               	incf	(_digit+1)^0,f,c	;volatile
  8697                           
  8698                           ;main.c: 1246: break;
  8699   00178C  0012               	return	
  8700   00178E                     i2l3924:
  8701                           
  8702                           ;main.c: 1248: displayno(digit,tens);
  8703   00178E  C053  F001         	movff	_digit,i2displayno@digit	;volatile
  8704   001792  C054  F002         	movff	_digit+1,i2displayno@digit+1	;volatile
  8705   001796  C034  F003         	movff	_tens,i2displayno@number	;volatile
  8706   00179A  C035  F004         	movff	_tens+1,i2displayno@number+1	;volatile
  8707   00179E  ECFE  F00C         	call	i2_displayno	;wreg free
  8708   0017A2  D7F2               	goto	i2l3922
  8709   0017A4                     i2l3928:
  8710                           
  8711                           ;main.c: 1252: displayno(digit,hundreds);
  8712   0017A4  C053  F001         	movff	_digit,i2displayno@digit	;volatile
  8713   0017A8  C054  F002         	movff	_digit+1,i2displayno@digit+1	;volatile
  8714   0017AC  C032  F003         	movff	_hundreds,i2displayno@number	;volatile
  8715   0017B0  C033  F004         	movff	_hundreds+1,i2displayno@number+1	;volatile
  8716   0017B4  ECFE  F00C         	call	i2_displayno	;wreg free
  8717   0017B8  D7E7               	goto	i2l3922
  8718   0017BA                     i2l3932:
  8719                           
  8720                           ;main.c: 1256: displayno(digit,thousands);
  8721   0017BA  C053  F001         	movff	_digit,i2displayno@digit	;volatile
  8722   0017BE  C054  F002         	movff	_digit+1,i2displayno@digit+1	;volatile
  8723   0017C2  C030  F003         	movff	_thousands,i2displayno@number	;volatile
  8724   0017C6  C031  F004         	movff	_thousands+1,i2displayno@number+1	;volatile
  8725   0017CA  ECFE  F00C         	call	i2_displayno	;wreg free
  8726                           
  8727                           ;main.c: 1257: digit=1;
  8728   0017CE  0E00               	movlw	0
  8729   0017D0  6E54               	movwf	(_digit+1)^0,c	;volatile
  8730   0017D2  0E01               	movlw	1
  8731   0017D4  6E53               	movwf	_digit^0,c	;volatile
  8732                           
  8733                           ;main.c: 1258: update_7seg = !1;
  8734   0017D6  0E00               	movlw	0
  8735   0017D8  6E44               	movwf	_update_7seg^0,c	;volatile
  8736                           
  8737                           ;main.c: 1259: break;
  8738   0017DA  0012               	return	
  8739   0017DC                     i2l3938:
  8740                           
  8741                           ;main.c: 1261: digit = 1;
  8742   0017DC  0E00               	movlw	0
  8743   0017DE  6E54               	movwf	(_digit+1)^0,c	;volatile
  8744   0017E0  0E01               	movlw	1
  8745   0017E2  6E53               	movwf	_digit^0,c	;volatile
  8746                           
  8747                           ;main.c: 1262: update_7seg = !1;
  8748   0017E4  0E00               	movlw	0
  8749   0017E6  6E44               	movwf	_update_7seg^0,c	;volatile
  8750                           
  8751                           ;main.c: 1263: break;
  8752   0017E8  0012               	return	
  8753   0017EA                     i2l3942:
  8754   0017EA  C053  F01F         	movff	_digit,??_ISR_UpdateDisplay	;volatile
  8755   0017EE  C054  F020         	movff	_digit+1,??_ISR_UpdateDisplay+1	;volatile
  8756                           
  8757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8758                           ; Switch size 1, requested type "simple"
  8759                           ; Number of cases is 1, Range of values is 0 to 0
  8760                           ; switch strategies available:
  8761                           ; Name         Instructions Cycles
  8762                           ; simple_byte            4     3 (average)
  8763                           ;	Chosen strategy is simple_byte
  8764   0017F2  5020               	movf	(??_ISR_UpdateDisplay+1)^0,w,c
  8765   0017F4  0A00               	xorlw	0	; case 0
  8766   0017F6  A4D8               	btfss	status,2,c
  8767   0017F8  D7F1               	goto	i2l3938
  8768                           
  8769                           ; Switch size 1, requested type "simple"
  8770                           ; Number of cases is 4, Range of values is 1 to 4
  8771                           ; switch strategies available:
  8772                           ; Name         Instructions Cycles
  8773                           ; simple_byte           13     7 (average)
  8774                           ;	Chosen strategy is simple_byte
  8775   0017FA  501F               	movf	??_ISR_UpdateDisplay^0,w,c
  8776   0017FC  0A01               	xorlw	1	; case 1
  8777   0017FE  B4D8               	btfsc	status,2,c
  8778   001800  D7B9               	goto	i2l3920
  8779   001802  0A03               	xorlw	3	; case 2
  8780   001804  B4D8               	btfsc	status,2,c
  8781   001806  D7C3               	goto	i2l3924
  8782   001808  0A01               	xorlw	1	; case 3
  8783   00180A  B4D8               	btfsc	status,2,c
  8784   00180C  D7CB               	goto	i2l3928
  8785   00180E  0A07               	xorlw	7	; case 4
  8786   001810  B4D8               	btfsc	status,2,c
  8787   001812  D7D3               	goto	i2l3932
  8788   001814  D7E3               	goto	i2l3938
  8789   001816                     __end_of_ISR_UpdateDisplay:
  8790                           	callstack 0
  8791                           
  8792 ;; *************** function i2_write_i2c *****************
  8793 ;; Defined at:
  8794 ;;		line 112 in file "i2c.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  address         4   24[COMRAM] long 
  8797 ;;  data            2   28[COMRAM] int 
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;		None
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  1    wreg      void 
  8802 ;; Registers used:
  8803 ;;		wreg, status,2, status,0, cstack
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8809 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8812 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8813 ;;Total ram usage:        6 bytes
  8814 ;; Hardware stack levels used: 1
  8815 ;; Hardware stack levels required when called: 2
  8816 ;; This function calls:
  8817 ;;		i2___aldiv
  8818 ;;		i2_i2c_Address
  8819 ;;		i2_i2c_Start
  8820 ;;		i2_i2c_Stop
  8821 ;;		i2_i2c_Write
  8822 ;; This function is called by:
  8823 ;;		_ISR_UpdateDisplay
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text40
  8828   002334                     __ptext40:
  8829                           	callstack 0
  8830   002334                     i2_write_i2c:
  8831                           	callstack 23
  8832                           
  8833                           ;i2c.c: 114: i2c_Start();
  8834                           
  8835                           ;incstack = 0
  8836   002334  EC00  F013         	call	i2_i2c_Start	;wreg free
  8837                           
  8838                           ;i2c.c: 115: i2c_Address(0xA0, 0);
  8839   002338  0E00               	movlw	0
  8840   00233A  6E02               	movwf	i2i2c_Address@mode^0,c
  8841   00233C  0EA0               	movlw	160
  8842   00233E  ECBB  F012         	call	i2_i2c_Address
  8843                           
  8844                           ;i2c.c: 116: i2c_Write((unsigned char)(address/0x100));
  8845   002342  C019  F00B         	movff	i2write_i2c@address,i2___aldiv@dividend
  8846   002346  C01A  F00C         	movff	i2write_i2c@address+1,i2___aldiv@dividend+1
  8847   00234A  C01B  F00D         	movff	i2write_i2c@address+2,i2___aldiv@dividend+2
  8848   00234E  C01C  F00E         	movff	i2write_i2c@address+3,i2___aldiv@dividend+3
  8849   002352  0E00               	movlw	0
  8850   002354  6E0F               	movwf	i2___aldiv@divisor^0,c
  8851   002356  0E01               	movlw	1
  8852   002358  6E10               	movwf	(i2___aldiv@divisor+1)^0,c
  8853   00235A  0E00               	movlw	0
  8854   00235C  6E11               	movwf	(i2___aldiv@divisor+2)^0,c
  8855   00235E  0E00               	movlw	0
  8856   002360  6E12               	movwf	(i2___aldiv@divisor+3)^0,c
  8857   002362  ECDE  F00E         	call	i2___aldiv	;wreg free
  8858   002366  500B               	movf	?i2___aldiv^0,w,c
  8859   002368  ECEA  F012         	call	i2_i2c_Write
  8860                           
  8861                           ;i2c.c: 117: i2c_Write((unsigned char)(address&0xFF));
  8862   00236C  5019               	movf	i2write_i2c@address^0,w,c
  8863   00236E  ECEA  F012         	call	i2_i2c_Write
  8864                           
  8865                           ;i2c.c: 118: i2c_Write((unsigned char)data);
  8866   002372  501D               	movf	i2write_i2c@data^0,w,c
  8867   002374  ECEA  F012         	call	i2_i2c_Write
  8868                           
  8869                           ;i2c.c: 119: i2c_Stop();
  8870   002378  ECFC  F012         	call	i2_i2c_Stop	;wreg free
  8871   00237C  0012               	return		;funcret
  8872   00237E                     __end_ofi2_write_i2c:
  8873                           	callstack 0
  8874                           
  8875 ;; *************** function i2_read_i2c *****************
  8876 ;; Defined at:
  8877 ;;		line 122 in file "i2c.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;  address         4   24[COMRAM] long 
  8880 ;; Auto vars:     Size  Location     Type
  8881 ;;  read_byte       2   28[COMRAM] int 
  8882 ;; Return value:  Size  Location     Type
  8883 ;;                  2   24[COMRAM] int 
  8884 ;; Registers used:
  8885 ;;		wreg, status,2, status,0, cstack
  8886 ;; Tracked objects:
  8887 ;;		On entry : 0/0
  8888 ;;		On exit  : 0/0
  8889 ;;		Unchanged: 0/0
  8890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8891 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8892 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8894 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8895 ;;Total ram usage:        6 bytes
  8896 ;; Hardware stack levels used: 1
  8897 ;; Hardware stack levels required when called: 2
  8898 ;; This function calls:
  8899 ;;		i2___aldiv
  8900 ;;		i2_i2c_Address
  8901 ;;		i2_i2c_Read
  8902 ;;		i2_i2c_Restart
  8903 ;;		i2_i2c_Start
  8904 ;;		i2_i2c_Stop
  8905 ;;		i2_i2c_Write
  8906 ;; This function is called by:
  8907 ;;		_ISR_UpdateDisplay
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911                           	psect	text41
  8912   0021C2                     __ptext41:
  8913                           	callstack 0
  8914   0021C2                     i2_read_i2c:
  8915                           	callstack 23
  8916                           
  8917                           ;i2c.c: 124: int read_byte;;i2c.c: 127: i2c_Start();
  8918                           
  8919                           ;incstack = 0
  8920   0021C2  EC00  F013         	call	i2_i2c_Start	;wreg free
  8921                           
  8922                           ;i2c.c: 128: i2c_Address(0xA0, 0);
  8923   0021C6  0E00               	movlw	0
  8924   0021C8  6E02               	movwf	i2i2c_Address@mode^0,c
  8925   0021CA  0EA0               	movlw	160
  8926   0021CC  ECBB  F012         	call	i2_i2c_Address
  8927                           
  8928                           ;i2c.c: 129: i2c_Write((unsigned char)(address/0x100));
  8929   0021D0  C019  F00B         	movff	i2read_i2c@address,i2___aldiv@dividend
  8930   0021D4  C01A  F00C         	movff	i2read_i2c@address+1,i2___aldiv@dividend+1
  8931   0021D8  C01B  F00D         	movff	i2read_i2c@address+2,i2___aldiv@dividend+2
  8932   0021DC  C01C  F00E         	movff	i2read_i2c@address+3,i2___aldiv@dividend+3
  8933   0021E0  0E00               	movlw	0
  8934   0021E2  6E0F               	movwf	i2___aldiv@divisor^0,c
  8935   0021E4  0E01               	movlw	1
  8936   0021E6  6E10               	movwf	(i2___aldiv@divisor+1)^0,c
  8937   0021E8  0E00               	movlw	0
  8938   0021EA  6E11               	movwf	(i2___aldiv@divisor+2)^0,c
  8939   0021EC  0E00               	movlw	0
  8940   0021EE  6E12               	movwf	(i2___aldiv@divisor+3)^0,c
  8941   0021F0  ECDE  F00E         	call	i2___aldiv	;wreg free
  8942   0021F4  500B               	movf	?i2___aldiv^0,w,c
  8943   0021F6  ECEA  F012         	call	i2_i2c_Write
  8944                           
  8945                           ;i2c.c: 130: i2c_Write((unsigned char)(address&0xFF));
  8946   0021FA  5019               	movf	i2read_i2c@address^0,w,c
  8947   0021FC  ECEA  F012         	call	i2_i2c_Write
  8948                           
  8949                           ;i2c.c: 131: i2c_Restart();
  8950   002200  EC04  F013         	call	i2_i2c_Restart	;wreg free
  8951                           
  8952                           ;i2c.c: 132: i2c_Address(0xA0, 1);
  8953   002204  0E01               	movlw	1
  8954   002206  6E02               	movwf	i2i2c_Address@mode^0,c
  8955   002208  0EA0               	movlw	160
  8956   00220A  ECBB  F012         	call	i2_i2c_Address
  8957                           
  8958                           ;i2c.c: 133: read_byte = i2c_Read(0);
  8959   00220E  0E00               	movlw	0
  8960   002210  ECEF  F011         	call	i2_i2c_Read
  8961   002214  C002  F01D         	movff	?i2_i2c_Read,i2read_i2c@read_byte
  8962   002218  C003  F01E         	movff	?i2_i2c_Read+1,i2read_i2c@read_byte+1
  8963                           
  8964                           ;i2c.c: 137: i2c_Stop();
  8965   00221C  ECFC  F012         	call	i2_i2c_Stop	;wreg free
  8966                           
  8967                           ;i2c.c: 138: return (read_byte);
  8968   002220  C01D  F019         	movff	i2read_i2c@read_byte,?i2_read_i2c
  8969   002224  C01E  F01A         	movff	i2read_i2c@read_byte+1,?i2_read_i2c+1
  8970   002228  0012               	return		;funcret
  8971   00222A                     __end_ofi2_read_i2c:
  8972                           	callstack 0
  8973                           
  8974 ;; *************** function i2_i2c_Write *****************
  8975 ;; Defined at:
  8976 ;;		line 69 in file "i2c.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  data            1    wreg     unsigned char 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;  data            1    1[COMRAM] unsigned char 
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		wreg, status,2, status,0, cstack
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8994 ;;Total ram usage:        1 bytes
  8995 ;; Hardware stack levels used: 1
  8996 ;; Hardware stack levels required when called: 1
  8997 ;; This function calls:
  8998 ;;		i2_i2c_Wait
  8999 ;; This function is called by:
  9000 ;;		i2_write_i2c
  9001 ;;		i2_read_i2c
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           	psect	text42
  9006   0025D4                     __ptext42:
  9007                           	callstack 0
  9008   0025D4                     i2_i2c_Write:
  9009                           	callstack 23
  9010                           
  9011                           ;incstack = 0
  9012                           ;i2i2c_Write@data stored from wreg
  9013   0025D4  6E02               	movwf	i2i2c_Write@data^0,c
  9014                           
  9015                           ;i2c.c: 71: i2c_Wait();
  9016   0025D6  ECC5  F012         	call	i2_i2c_Wait	;wreg free
  9017                           
  9018                           ;i2c.c: 72: SSP2BUF = data;
  9019   0025DA  C002  FF6F         	movff	i2i2c_Write@data,3951	;volatile
  9020   0025DE  0012               	return		;funcret
  9021   0025E0                     __end_ofi2_i2c_Write:
  9022                           	callstack 0
  9023                           
  9024 ;; *************** function i2_i2c_Stop *****************
  9025 ;; Defined at:
  9026 ;;		line 62 in file "i2c.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;		None
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;		None
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  1    wreg      void 
  9033 ;; Registers used:
  9034 ;;		wreg, status,2, status,0, cstack
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9044 ;;Total ram usage:        0 bytes
  9045 ;; Hardware stack levels used: 1
  9046 ;; Hardware stack levels required when called: 1
  9047 ;; This function calls:
  9048 ;;		i2_i2c_Wait
  9049 ;; This function is called by:
  9050 ;;		i2_write_i2c
  9051 ;;		i2_read_i2c
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           	psect	text43
  9056   0025F8                     __ptext43:
  9057                           	callstack 0
  9058   0025F8                     i2_i2c_Stop:
  9059                           	callstack 23
  9060                           
  9061                           ;i2c.c: 64: i2c_Wait();
  9062                           
  9063                           ;incstack = 0
  9064   0025F8  ECC5  F012         	call	i2_i2c_Wait	;wreg free
  9065                           
  9066                           ;i2c.c: 65: PEN2=1;
  9067   0025FC  846B               	bsf	3947,2,c	;volatile
  9068   0025FE  0012               	return		;funcret
  9069   002600                     __end_ofi2_i2c_Stop:
  9070                           	callstack 0
  9071                           
  9072 ;; *************** function i2_i2c_Start *****************
  9073 ;; Defined at:
  9074 ;;		line 49 in file "i2c.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;		None
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;		None
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      void 
  9081 ;; Registers used:
  9082 ;;		wreg, status,2, status,0, cstack
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9092 ;;Total ram usage:        0 bytes
  9093 ;; Hardware stack levels used: 1
  9094 ;; Hardware stack levels required when called: 1
  9095 ;; This function calls:
  9096 ;;		i2_i2c_Wait
  9097 ;; This function is called by:
  9098 ;;		i2_write_i2c
  9099 ;;		i2_read_i2c
  9100 ;; This function uses a non-reentrant model
  9101 ;;
  9102                           
  9103                           	psect	text44
  9104   002600                     __ptext44:
  9105                           	callstack 0
  9106   002600                     i2_i2c_Start:
  9107                           	callstack 23
  9108                           
  9109                           ;i2c.c: 51: i2c_Wait();
  9110                           
  9111                           ;incstack = 0
  9112   002600  ECC5  F012         	call	i2_i2c_Wait	;wreg free
  9113                           
  9114                           ;i2c.c: 52: SEN2=1;
  9115   002604  806B               	bsf	3947,0,c	;volatile
  9116   002606  0012               	return		;funcret
  9117   002608                     __end_ofi2_i2c_Start:
  9118                           	callstack 0
  9119                           
  9120 ;; *************** function i2_i2c_Restart *****************
  9121 ;; Defined at:
  9122 ;;		line 56 in file "i2c.c"
  9123 ;; Parameters:    Size  Location     Type
  9124 ;;		None
  9125 ;; Auto vars:     Size  Location     Type
  9126 ;;		None
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  1    wreg      void 
  9129 ;; Registers used:
  9130 ;;		wreg, status,2, status,0, cstack
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9140 ;;Total ram usage:        0 bytes
  9141 ;; Hardware stack levels used: 1
  9142 ;; Hardware stack levels required when called: 1
  9143 ;; This function calls:
  9144 ;;		i2_i2c_Wait
  9145 ;; This function is called by:
  9146 ;;		i2_read_i2c
  9147 ;; This function uses a non-reentrant model
  9148 ;;
  9149                           
  9150                           	psect	text45
  9151   002608                     __ptext45:
  9152                           	callstack 0
  9153   002608                     i2_i2c_Restart:
  9154                           	callstack 23
  9155                           
  9156                           ;i2c.c: 57: i2c_Wait();
  9157                           
  9158                           ;incstack = 0
  9159   002608  ECC5  F012         	call	i2_i2c_Wait	;wreg free
  9160                           
  9161                           ;i2c.c: 58: RSEN2=1;
  9162   00260C  826B               	bsf	3947,1,c	;volatile
  9163   00260E  0012               	return		;funcret
  9164   002610                     __end_ofi2_i2c_Restart:
  9165                           	callstack 0
  9166                           
  9167 ;; *************** function i2_i2c_Read *****************
  9168 ;; Defined at:
  9169 ;;		line 88 in file "i2c.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;  ack             1    wreg     unsigned char 
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;  ack             1    3[COMRAM] unsigned char 
  9174 ;;  i2cReadData     1    4[COMRAM] unsigned char 
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  2    1[COMRAM] int 
  9177 ;; Registers used:
  9178 ;;		wreg, status,2, status,0, cstack
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;Total ram usage:        4 bytes
  9189 ;; Hardware stack levels used: 1
  9190 ;; Hardware stack levels required when called: 1
  9191 ;; This function calls:
  9192 ;;		i2_i2c_Wait
  9193 ;; This function is called by:
  9194 ;;		i2_read_i2c
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           	psect	text46
  9199   0023DE                     __ptext46:
  9200                           	callstack 0
  9201   0023DE                     i2_i2c_Read:
  9202                           	callstack 23
  9203                           
  9204                           ;incstack = 0
  9205                           ;i2i2c_Read@ack stored from wreg
  9206   0023DE  6E04               	movwf	i2i2c_Read@ack^0,c
  9207                           
  9208                           ;i2c.c: 93: unsigned char i2cReadData;;i2c.c: 95: i2c_Wait();
  9209   0023E0  ECC5  F012         	call	i2_i2c_Wait	;wreg free
  9210                           
  9211                           ;i2c.c: 96: RCEN2=1;
  9212   0023E4  866B               	bsf	3947,3,c	;volatile
  9213                           
  9214                           ;i2c.c: 97: i2c_Wait();
  9215   0023E6  ECC5  F012         	call	i2_i2c_Wait	;wreg free
  9216                           
  9217                           ;i2c.c: 98: i2cReadData = SSP2BUF;
  9218   0023EA  CF6F F005          	movff	3951,i2i2c_Read@i2cReadData	;volatile
  9219                           
  9220                           ;i2c.c: 99: i2c_Wait();
  9221   0023EE  ECC5  F012         	call	i2_i2c_Wait	;wreg free
  9222                           
  9223                           ;i2c.c: 100: if ( ack )
  9224   0023F2  5004               	movf	i2i2c_Read@ack^0,w,c
  9225   0023F4  B4D8               	btfsc	status,2,c
  9226   0023F6  D002               	goto	i2l712
  9227                           
  9228                           ;i2c.c: 101: ACKDT2=0;
  9229   0023F8  9A6B               	bcf	3947,5,c	;volatile
  9230   0023FA  D001               	goto	i2l713
  9231   0023FC                     i2l712:
  9232                           
  9233                           ;i2c.c: 102: else;i2c.c: 103: ACKDT2=1;
  9234   0023FC  8A6B               	bsf	3947,5,c	;volatile
  9235   0023FE                     i2l713:
  9236                           
  9237                           ;i2c.c: 104: ACKEN2=1;
  9238   0023FE  886B               	bsf	3947,4,c	;volatile
  9239                           
  9240                           ;i2c.c: 106: return( i2cReadData );
  9241   002400  C005  F002         	movff	i2i2c_Read@i2cReadData,?i2_i2c_Read
  9242   002404  6A03               	clrf	(?i2_i2c_Read+1)^0,c
  9243   002406  0012               	return		;funcret
  9244   002408                     __end_ofi2_i2c_Read:
  9245                           	callstack 0
  9246                           
  9247 ;; *************** function i2_i2c_Address *****************
  9248 ;; Defined at:
  9249 ;;		line 77 in file "i2c.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;  address         1    wreg     unsigned char 
  9252 ;;  mode            1    1[COMRAM] unsigned char 
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;  address         1    2[COMRAM] unsigned char 
  9255 ;;  l_address       1    3[COMRAM] unsigned char 
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  1    wreg      void 
  9258 ;; Registers used:
  9259 ;;		wreg, status,2, status,0, cstack
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9265 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9268 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9269 ;;Total ram usage:        3 bytes
  9270 ;; Hardware stack levels used: 1
  9271 ;; Hardware stack levels required when called: 1
  9272 ;; This function calls:
  9273 ;;		i2_i2c_Wait
  9274 ;; This function is called by:
  9275 ;;		i2_write_i2c
  9276 ;;		i2_read_i2c
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           	psect	text47
  9281   002576                     __ptext47:
  9282                           	callstack 0
  9283   002576                     i2_i2c_Address:
  9284                           	callstack 23
  9285                           
  9286                           ;incstack = 0
  9287                           ;i2i2c_Address@address stored from wreg
  9288   002576  6E03               	movwf	i2i2c_Address@address^0,c
  9289                           
  9290                           ;i2c.c: 79: unsigned char l_address;;i2c.c: 81: l_address=address;
  9291   002578  C003  F004         	movff	i2i2c_Address@address,i2i2c_Address@l_address
  9292                           
  9293                           ;i2c.c: 82: l_address += mode;
  9294   00257C  5002               	movf	i2i2c_Address@mode^0,w,c
  9295   00257E  2604               	addwf	i2i2c_Address@l_address^0,f,c
  9296                           
  9297                           ;i2c.c: 83: i2c_Wait();
  9298   002580  ECC5  F012         	call	i2_i2c_Wait	;wreg free
  9299                           
  9300                           ;i2c.c: 84: SSP2BUF = l_address;
  9301   002584  C004  FF6F         	movff	i2i2c_Address@l_address,3951	;volatile
  9302   002588  0012               	return		;funcret
  9303   00258A                     __end_ofi2_i2c_Address:
  9304                           	callstack 0
  9305                           
  9306 ;; *************** function i2_i2c_Wait *****************
  9307 ;; Defined at:
  9308 ;;		line 44 in file "i2c.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;		None
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;		None
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1    wreg      void 
  9315 ;; Registers used:
  9316 ;;		wreg, status,2, status,0
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9326 ;;Total ram usage:        1 bytes
  9327 ;; Hardware stack levels used: 1
  9328 ;; This function calls:
  9329 ;;		Nothing
  9330 ;; This function is called by:
  9331 ;;		i2_i2c_Start
  9332 ;;		i2_i2c_Restart
  9333 ;;		i2_i2c_Stop
  9334 ;;		i2_i2c_Write
  9335 ;;		i2_i2c_Address
  9336 ;;		i2_i2c_Read
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           	psect	text48
  9341   00258A                     __ptext48:
  9342                           	callstack 0
  9343   00258A                     i2_i2c_Wait:
  9344                           	callstack 23
  9345                           
  9346                           ;i2c.c: 45: while ( ( SSP2CON2 & 0x1F ) || ( SSP2STAT & 0x04 ) );
  9347                           
  9348                           ;incstack = 0
  9349   00258A  CF6B F001          	movff	3947,??i2_i2c_Wait	;volatile
  9350   00258E  0E1F               	movlw	31
  9351   002590  1601               	andwf	??i2_i2c_Wait^0,f,c
  9352   002592  A4D8               	btfss	status,2,c
  9353   002594  D7FA               	goto	__ptext48
  9354   002596  A46D               	btfss	109,2,c	;volatile
  9355   002598  0012               	return	
  9356   00259A  D7F7               	goto	__ptext48
  9357   00259C                     __end_ofi2_i2c_Wait:
  9358                           	callstack 0
  9359                           
  9360 ;; *************** function i2___aldiv *****************
  9361 ;; Defined at:
  9362 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  dividend        4   10[COMRAM] long 
  9365 ;;  divisor         4   14[COMRAM] long 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;  quotient        4   20[COMRAM] long 
  9368 ;;  sign            1   19[COMRAM] unsigned char 
  9369 ;;  counter         1   18[COMRAM] unsigned char 
  9370 ;; Return value:  Size  Location     Type
  9371 ;;                  4   10[COMRAM] long 
  9372 ;; Registers used:
  9373 ;;		wreg, status,2, status,0
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9379 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9380 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9382 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9383 ;;Total ram usage:       14 bytes
  9384 ;; Hardware stack levels used: 1
  9385 ;; This function calls:
  9386 ;;		Nothing
  9387 ;; This function is called by:
  9388 ;;		_ISR_UpdateDisplay
  9389 ;;		i2_write_i2c
  9390 ;;		i2_read_i2c
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           	psect	text49
  9395   001DBC                     __ptext49:
  9396                           	callstack 0
  9397   001DBC                     i2___aldiv:
  9398                           	callstack 24
  9399                           
  9400                           ;incstack = 0
  9401   001DBC  0E00               	movlw	0
  9402   001DBE  6E14               	movwf	i2___aldiv@sign^0,c
  9403   001DC0  AE12               	btfss	(i2___aldiv@divisor+3)^0,7,c
  9404   001DC2  D00A               	goto	i2l3430
  9405   001DC4  1E12               	comf	(i2___aldiv@divisor+3)^0,f,c
  9406   001DC6  1E11               	comf	(i2___aldiv@divisor+2)^0,f,c
  9407   001DC8  1E10               	comf	(i2___aldiv@divisor+1)^0,f,c
  9408   001DCA  6C0F               	negf	i2___aldiv@divisor^0,c
  9409   001DCC  0E00               	movlw	0
  9410   001DCE  2210               	addwfc	(i2___aldiv@divisor+1)^0,f,c
  9411   001DD0  2211               	addwfc	(i2___aldiv@divisor+2)^0,f,c
  9412   001DD2  2212               	addwfc	(i2___aldiv@divisor+3)^0,f,c
  9413   001DD4  0E01               	movlw	1
  9414   001DD6  6E14               	movwf	i2___aldiv@sign^0,c
  9415   001DD8                     i2l3430:
  9416   001DD8  AE0E               	btfss	(i2___aldiv@dividend+3)^0,7,c
  9417   001DDA  D00A               	goto	i2l3436
  9418   001DDC  1E0E               	comf	(i2___aldiv@dividend+3)^0,f,c
  9419   001DDE  1E0D               	comf	(i2___aldiv@dividend+2)^0,f,c
  9420   001DE0  1E0C               	comf	(i2___aldiv@dividend+1)^0,f,c
  9421   001DE2  6C0B               	negf	i2___aldiv@dividend^0,c
  9422   001DE4  0E00               	movlw	0
  9423   001DE6  220C               	addwfc	(i2___aldiv@dividend+1)^0,f,c
  9424   001DE8  220D               	addwfc	(i2___aldiv@dividend+2)^0,f,c
  9425   001DEA  220E               	addwfc	(i2___aldiv@dividend+3)^0,f,c
  9426   001DEC  0E01               	movlw	1
  9427   001DEE  1A14               	xorwf	i2___aldiv@sign^0,f,c
  9428   001DF0                     i2l3436:
  9429   001DF0  0E00               	movlw	0
  9430   001DF2  6E15               	movwf	i2___aldiv@quotient^0,c
  9431   001DF4  0E00               	movlw	0
  9432   001DF6  6E16               	movwf	(i2___aldiv@quotient+1)^0,c
  9433   001DF8  0E00               	movlw	0
  9434   001DFA  6E17               	movwf	(i2___aldiv@quotient+2)^0,c
  9435   001DFC  0E00               	movlw	0
  9436   001DFE  6E18               	movwf	(i2___aldiv@quotient+3)^0,c
  9437   001E00  500F               	movf	i2___aldiv@divisor^0,w,c
  9438   001E02  1010               	iorwf	(i2___aldiv@divisor+1)^0,w,c
  9439   001E04  1011               	iorwf	(i2___aldiv@divisor+2)^0,w,c
  9440   001E06  1012               	iorwf	(i2___aldiv@divisor+3)^0,w,c
  9441   001E08  B4D8               	btfsc	status,2,c
  9442   001E0A  D02A               	goto	i2l3458
  9443   001E0C  0E01               	movlw	1
  9444   001E0E  6E13               	movwf	i2___aldiv@counter^0,c
  9445   001E10  D006               	goto	i2l3444
  9446   001E12                     i2l3442:
  9447   001E12  90D8               	bcf	status,0,c
  9448   001E14  360F               	rlcf	i2___aldiv@divisor^0,f,c
  9449   001E16  3610               	rlcf	(i2___aldiv@divisor+1)^0,f,c
  9450   001E18  3611               	rlcf	(i2___aldiv@divisor+2)^0,f,c
  9451   001E1A  3612               	rlcf	(i2___aldiv@divisor+3)^0,f,c
  9452   001E1C  2A13               	incf	i2___aldiv@counter^0,f,c
  9453   001E1E                     i2l3444:
  9454   001E1E  AE12               	btfss	(i2___aldiv@divisor+3)^0,7,c
  9455   001E20  D7F8               	goto	i2l3442
  9456   001E22                     i2u226_40:
  9457   001E22  90D8               	bcf	status,0,c
  9458   001E24  3615               	rlcf	i2___aldiv@quotient^0,f,c
  9459   001E26  3616               	rlcf	(i2___aldiv@quotient+1)^0,f,c
  9460   001E28  3617               	rlcf	(i2___aldiv@quotient+2)^0,f,c
  9461   001E2A  3618               	rlcf	(i2___aldiv@quotient+3)^0,f,c
  9462   001E2C  500F               	movf	i2___aldiv@divisor^0,w,c
  9463   001E2E  5C0B               	subwf	i2___aldiv@dividend^0,w,c
  9464   001E30  5010               	movf	(i2___aldiv@divisor+1)^0,w,c
  9465   001E32  580C               	subwfb	(i2___aldiv@dividend+1)^0,w,c
  9466   001E34  5011               	movf	(i2___aldiv@divisor+2)^0,w,c
  9467   001E36  580D               	subwfb	(i2___aldiv@dividend+2)^0,w,c
  9468   001E38  5012               	movf	(i2___aldiv@divisor+3)^0,w,c
  9469   001E3A  580E               	subwfb	(i2___aldiv@dividend+3)^0,w,c
  9470   001E3C  A0D8               	btfss	status,0,c
  9471   001E3E  D009               	goto	i2l3454
  9472   001E40  500F               	movf	i2___aldiv@divisor^0,w,c
  9473   001E42  5E0B               	subwf	i2___aldiv@dividend^0,f,c
  9474   001E44  5010               	movf	(i2___aldiv@divisor+1)^0,w,c
  9475   001E46  5A0C               	subwfb	(i2___aldiv@dividend+1)^0,f,c
  9476   001E48  5011               	movf	(i2___aldiv@divisor+2)^0,w,c
  9477   001E4A  5A0D               	subwfb	(i2___aldiv@dividend+2)^0,f,c
  9478   001E4C  5012               	movf	(i2___aldiv@divisor+3)^0,w,c
  9479   001E4E  5A0E               	subwfb	(i2___aldiv@dividend+3)^0,f,c
  9480   001E50  8015               	bsf	i2___aldiv@quotient^0,0,c
  9481   001E52                     i2l3454:
  9482   001E52  90D8               	bcf	status,0,c
  9483   001E54  3212               	rrcf	(i2___aldiv@divisor+3)^0,f,c
  9484   001E56  3211               	rrcf	(i2___aldiv@divisor+2)^0,f,c
  9485   001E58  3210               	rrcf	(i2___aldiv@divisor+1)^0,f,c
  9486   001E5A  320F               	rrcf	i2___aldiv@divisor^0,f,c
  9487   001E5C  2E13               	decfsz	i2___aldiv@counter^0,f,c
  9488   001E5E  D7E1               	goto	i2u226_40
  9489   001E60                     i2l3458:
  9490   001E60  5014               	movf	i2___aldiv@sign^0,w,c
  9491   001E62  B4D8               	btfsc	status,2,c
  9492   001E64  D008               	goto	i2l3462
  9493   001E66  1E18               	comf	(i2___aldiv@quotient+3)^0,f,c
  9494   001E68  1E17               	comf	(i2___aldiv@quotient+2)^0,f,c
  9495   001E6A  1E16               	comf	(i2___aldiv@quotient+1)^0,f,c
  9496   001E6C  6C15               	negf	i2___aldiv@quotient^0,c
  9497   001E6E  0E00               	movlw	0
  9498   001E70  2216               	addwfc	(i2___aldiv@quotient+1)^0,f,c
  9499   001E72  2217               	addwfc	(i2___aldiv@quotient+2)^0,f,c
  9500   001E74  2218               	addwfc	(i2___aldiv@quotient+3)^0,f,c
  9501   001E76                     i2l3462:
  9502   001E76  C015  F00B         	movff	i2___aldiv@quotient,?i2___aldiv
  9503   001E7A  C016  F00C         	movff	i2___aldiv@quotient+1,?i2___aldiv+1
  9504   001E7E  C017  F00D         	movff	i2___aldiv@quotient+2,?i2___aldiv+2
  9505   001E82  C018  F00E         	movff	i2___aldiv@quotient+3,?i2___aldiv+3
  9506   001E86  0012               	return		;funcret
  9507   001E88                     __end_ofi2___aldiv:
  9508                           	callstack 0
  9509                           
  9510 ;; *************** function i2___almod *****************
  9511 ;; Defined at:
  9512 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\almod.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;  dividend        4    0[COMRAM] long 
  9515 ;;  divisor         4    4[COMRAM] long 
  9516 ;; Auto vars:     Size  Location     Type
  9517 ;;  sign            1    9[COMRAM] unsigned char 
  9518 ;;  counter         1    8[COMRAM] unsigned char 
  9519 ;; Return value:  Size  Location     Type
  9520 ;;                  4    0[COMRAM] long 
  9521 ;; Registers used:
  9522 ;;		wreg, status,2, status,0
  9523 ;; Tracked objects:
  9524 ;;		On entry : 0/0
  9525 ;;		On exit  : 0/0
  9526 ;;		Unchanged: 0/0
  9527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9528 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9531 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9532 ;;Total ram usage:       10 bytes
  9533 ;; Hardware stack levels used: 1
  9534 ;; This function calls:
  9535 ;;		Nothing
  9536 ;; This function is called by:
  9537 ;;		_ISR_UpdateDisplay
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           	psect	text50
  9542   001F36                     __ptext50:
  9543                           	callstack 0
  9544   001F36                     i2___almod:
  9545                           	callstack 25
  9546                           
  9547                           ;incstack = 0
  9548   001F36  0E00               	movlw	0
  9549   001F38  6E0A               	movwf	i2___almod@sign^0,c
  9550   001F3A  AE04               	btfss	(i2___almod@dividend+3)^0,7,c
  9551   001F3C  D00A               	goto	i2l3606
  9552   001F3E  1E04               	comf	(i2___almod@dividend+3)^0,f,c
  9553   001F40  1E03               	comf	(i2___almod@dividend+2)^0,f,c
  9554   001F42  1E02               	comf	(i2___almod@dividend+1)^0,f,c
  9555   001F44  6C01               	negf	i2___almod@dividend^0,c
  9556   001F46  0E00               	movlw	0
  9557   001F48  2202               	addwfc	(i2___almod@dividend+1)^0,f,c
  9558   001F4A  2203               	addwfc	(i2___almod@dividend+2)^0,f,c
  9559   001F4C  2204               	addwfc	(i2___almod@dividend+3)^0,f,c
  9560   001F4E  0E01               	movlw	1
  9561   001F50  6E0A               	movwf	i2___almod@sign^0,c
  9562   001F52                     i2l3606:
  9563   001F52  AE08               	btfss	(i2___almod@divisor+3)^0,7,c
  9564   001F54  D008               	goto	i2l3610
  9565   001F56  1E08               	comf	(i2___almod@divisor+3)^0,f,c
  9566   001F58  1E07               	comf	(i2___almod@divisor+2)^0,f,c
  9567   001F5A  1E06               	comf	(i2___almod@divisor+1)^0,f,c
  9568   001F5C  6C05               	negf	i2___almod@divisor^0,c
  9569   001F5E  0E00               	movlw	0
  9570   001F60  2206               	addwfc	(i2___almod@divisor+1)^0,f,c
  9571   001F62  2207               	addwfc	(i2___almod@divisor+2)^0,f,c
  9572   001F64  2208               	addwfc	(i2___almod@divisor+3)^0,f,c
  9573   001F66                     i2l3610:
  9574   001F66  5005               	movf	i2___almod@divisor^0,w,c
  9575   001F68  1006               	iorwf	(i2___almod@divisor+1)^0,w,c
  9576   001F6A  1007               	iorwf	(i2___almod@divisor+2)^0,w,c
  9577   001F6C  1008               	iorwf	(i2___almod@divisor+3)^0,w,c
  9578   001F6E  B4D8               	btfsc	status,2,c
  9579   001F70  D024               	goto	i2l3626
  9580   001F72  0E01               	movlw	1
  9581   001F74  6E09               	movwf	i2___almod@counter^0,c
  9582   001F76  D006               	goto	i2l3616
  9583   001F78                     i2l3614:
  9584   001F78  90D8               	bcf	status,0,c
  9585   001F7A  3605               	rlcf	i2___almod@divisor^0,f,c
  9586   001F7C  3606               	rlcf	(i2___almod@divisor+1)^0,f,c
  9587   001F7E  3607               	rlcf	(i2___almod@divisor+2)^0,f,c
  9588   001F80  3608               	rlcf	(i2___almod@divisor+3)^0,f,c
  9589   001F82  2A09               	incf	i2___almod@counter^0,f,c
  9590   001F84                     i2l3616:
  9591   001F84  AE08               	btfss	(i2___almod@divisor+3)^0,7,c
  9592   001F86  D7F8               	goto	i2l3614
  9593   001F88                     i2u240_40:
  9594   001F88  5005               	movf	i2___almod@divisor^0,w,c
  9595   001F8A  5C01               	subwf	i2___almod@dividend^0,w,c
  9596   001F8C  5006               	movf	(i2___almod@divisor+1)^0,w,c
  9597   001F8E  5802               	subwfb	(i2___almod@dividend+1)^0,w,c
  9598   001F90  5007               	movf	(i2___almod@divisor+2)^0,w,c
  9599   001F92  5803               	subwfb	(i2___almod@dividend+2)^0,w,c
  9600   001F94  5008               	movf	(i2___almod@divisor+3)^0,w,c
  9601   001F96  5804               	subwfb	(i2___almod@dividend+3)^0,w,c
  9602   001F98  A0D8               	btfss	status,0,c
  9603   001F9A  D008               	goto	i2l3622
  9604   001F9C  5005               	movf	i2___almod@divisor^0,w,c
  9605   001F9E  5E01               	subwf	i2___almod@dividend^0,f,c
  9606   001FA0  5006               	movf	(i2___almod@divisor+1)^0,w,c
  9607   001FA2  5A02               	subwfb	(i2___almod@dividend+1)^0,f,c
  9608   001FA4  5007               	movf	(i2___almod@divisor+2)^0,w,c
  9609   001FA6  5A03               	subwfb	(i2___almod@dividend+2)^0,f,c
  9610   001FA8  5008               	movf	(i2___almod@divisor+3)^0,w,c
  9611   001FAA  5A04               	subwfb	(i2___almod@dividend+3)^0,f,c
  9612   001FAC                     i2l3622:
  9613   001FAC  90D8               	bcf	status,0,c
  9614   001FAE  3208               	rrcf	(i2___almod@divisor+3)^0,f,c
  9615   001FB0  3207               	rrcf	(i2___almod@divisor+2)^0,f,c
  9616   001FB2  3206               	rrcf	(i2___almod@divisor+1)^0,f,c
  9617   001FB4  3205               	rrcf	i2___almod@divisor^0,f,c
  9618   001FB6  2E09               	decfsz	i2___almod@counter^0,f,c
  9619   001FB8  D7E7               	goto	i2u240_40
  9620   001FBA                     i2l3626:
  9621   001FBA  500A               	movf	i2___almod@sign^0,w,c
  9622   001FBC  B4D8               	btfsc	status,2,c
  9623   001FBE  D008               	goto	i2l3630
  9624   001FC0  1E04               	comf	(i2___almod@dividend+3)^0,f,c
  9625   001FC2  1E03               	comf	(i2___almod@dividend+2)^0,f,c
  9626   001FC4  1E02               	comf	(i2___almod@dividend+1)^0,f,c
  9627   001FC6  6C01               	negf	i2___almod@dividend^0,c
  9628   001FC8  0E00               	movlw	0
  9629   001FCA  2202               	addwfc	(i2___almod@dividend+1)^0,f,c
  9630   001FCC  2203               	addwfc	(i2___almod@dividend+2)^0,f,c
  9631   001FCE  2204               	addwfc	(i2___almod@dividend+3)^0,f,c
  9632   001FD0                     i2l3630:
  9633   001FD0  C001  F001         	movff	i2___almod@dividend,?i2___almod
  9634   001FD4  C002  F002         	movff	i2___almod@dividend+1,?i2___almod+1
  9635   001FD8  C003  F003         	movff	i2___almod@dividend+2,?i2___almod+2
  9636   001FDC  C004  F004         	movff	i2___almod@dividend+3,?i2___almod+3
  9637   001FE0  0012               	return		;funcret
  9638   001FE2                     __end_ofi2___almod:
  9639                           	callstack 0
  9640                           
  9641 ;; *************** function _Display_Warning *****************
  9642 ;; Defined at:
  9643 ;;		line 224 in file "7segment.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;  enumber         2    6[COMRAM] int 
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;		None
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      void 
  9650 ;; Registers used:
  9651 ;;		wreg, status,2, status,0, cstack
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9660 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9661 ;;Total ram usage:        4 bytes
  9662 ;; Hardware stack levels used: 1
  9663 ;; Hardware stack levels required when called: 1
  9664 ;; This function calls:
  9665 ;;		i2_displayno
  9666 ;; This function is called by:
  9667 ;;		_high_isr
  9668 ;; This function uses a non-reentrant model
  9669 ;;
  9670                           
  9671                           	psect	text51
  9672   001FE2                     __ptext51:
  9673                           	callstack 0
  9674   001FE2                     _Display_Warning:
  9675                           	callstack 25
  9676                           
  9677                           ;7segment.c: 227: switch (edigit) {
  9678                           
  9679                           ;incstack = 0
  9680   001FE2  D028               	goto	i2l3886
  9681   001FE4                     i2l3866:
  9682                           
  9683                           ;7segment.c: 229: displayno(edigit, 0x20);
  9684   001FE4  C03C  F001         	movff	_edigit,i2displayno@digit
  9685   001FE8  C03D  F002         	movff	_edigit+1,i2displayno@digit+1
  9686   001FEC  0E00               	movlw	0
  9687   001FEE  6E04               	movwf	(i2displayno@number+1)^0,c
  9688   001FF0  0E20               	movlw	32
  9689   001FF2  6E03               	movwf	i2displayno@number^0,c
  9690   001FF4  ECFE  F00C         	call	i2_displayno	;wreg free
  9691   001FF8                     i2l3868:
  9692                           
  9693                           ;7segment.c: 230: edigit++;
  9694   001FF8  4A3C               	infsnz	_edigit^0,f,c
  9695   001FFA  2A3D               	incf	(_edigit+1)^0,f,c
  9696                           
  9697                           ;7segment.c: 231: break;
  9698   001FFC  0012               	return	
  9699   001FFE                     i2l3870:
  9700                           
  9701                           ;7segment.c: 233: displayno(edigit, enumber);
  9702   001FFE  C03C  F001         	movff	_edigit,i2displayno@digit
  9703   002002  C03D  F002         	movff	_edigit+1,i2displayno@digit+1
  9704   002006  C007  F003         	movff	Display_Warning@enumber,i2displayno@number
  9705   00200A  C008  F004         	movff	Display_Warning@enumber+1,i2displayno@number+1
  9706   00200E  ECFE  F00C         	call	i2_displayno	;wreg free
  9707   002012  D7F2               	goto	i2l3868
  9708   002014                     i2l3874:
  9709                           
  9710                           ;7segment.c: 237: displayno(edigit, 0x4C);
  9711   002014  C03C  F001         	movff	_edigit,i2displayno@digit
  9712   002018  C03D  F002         	movff	_edigit+1,i2displayno@digit+1
  9713   00201C  0E00               	movlw	0
  9714   00201E  6E04               	movwf	(i2displayno@number+1)^0,c
  9715   002020  0E4C               	movlw	76
  9716   002022  6E03               	movwf	i2displayno@number^0,c
  9717   002024  ECFE  F00C         	call	i2_displayno	;wreg free
  9718   002028  D7E7               	goto	i2l3868
  9719   00202A                     i2l3882:
  9720                           
  9721                           ;7segment.c: 245: edigit = 1;
  9722   00202A  0E00               	movlw	0
  9723   00202C  6E3D               	movwf	(_edigit+1)^0,c
  9724   00202E  0E01               	movlw	1
  9725   002030  6E3C               	movwf	_edigit^0,c
  9726                           
  9727                           ;7segment.c: 246: break;
  9728   002032  0012               	return	
  9729   002034                     i2l3886:
  9730   002034  C03C  F009         	movff	_edigit,??_Display_Warning
  9731   002038  C03D  F00A         	movff	_edigit+1,??_Display_Warning+1
  9732                           
  9733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9734                           ; Switch size 1, requested type "simple"
  9735                           ; Number of cases is 1, Range of values is 0 to 0
  9736                           ; switch strategies available:
  9737                           ; Name         Instructions Cycles
  9738                           ; simple_byte            4     3 (average)
  9739                           ;	Chosen strategy is simple_byte
  9740   00203C  500A               	movf	(??_Display_Warning+1)^0,w,c
  9741   00203E  0A00               	xorlw	0	; case 0
  9742   002040  A4D8               	btfss	status,2,c
  9743   002042  D7F3               	goto	i2l3882
  9744                           
  9745                           ; Switch size 1, requested type "simple"
  9746                           ; Number of cases is 4, Range of values is 1 to 4
  9747                           ; switch strategies available:
  9748                           ; Name         Instructions Cycles
  9749                           ; simple_byte           13     7 (average)
  9750                           ;	Chosen strategy is simple_byte
  9751   002044  5009               	movf	??_Display_Warning^0,w,c
  9752   002046  0A01               	xorlw	1	; case 1
  9753   002048  B4D8               	btfsc	status,2,c
  9754   00204A  D7CC               	goto	i2l3866
  9755   00204C  0A03               	xorlw	3	; case 2
  9756   00204E  B4D8               	btfsc	status,2,c
  9757   002050  D7D6               	goto	i2l3870
  9758   002052  0A01               	xorlw	1	; case 3
  9759   002054  B4D8               	btfsc	status,2,c
  9760   002056  D7DE               	goto	i2l3874
  9761   002058  0A07               	xorlw	7	; case 4
  9762   00205A  B4D8               	btfsc	status,2,c
  9763   00205C  D7C3               	goto	i2l3866
  9764   00205E  D7E5               	goto	i2l3882
  9765   002060                     __end_of_Display_Warning:
  9766                           	callstack 0
  9767                           
  9768 ;; *************** function _Display_Error *****************
  9769 ;; Defined at:
  9770 ;;		line 197 in file "7segment.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;  enumber         2    6[COMRAM] int 
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;		None
  9775 ;; Return value:  Size  Location     Type
  9776 ;;                  1    wreg      void 
  9777 ;; Registers used:
  9778 ;;		wreg, status,2, status,0, cstack
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/0
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9786 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9787 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9788 ;;Total ram usage:        4 bytes
  9789 ;; Hardware stack levels used: 1
  9790 ;; Hardware stack levels required when called: 1
  9791 ;; This function calls:
  9792 ;;		i2_displayno
  9793 ;; This function is called by:
  9794 ;;		_high_isr
  9795 ;; This function uses a non-reentrant model
  9796 ;;
  9797                           
  9798                           	psect	text52
  9799   002060                     __ptext52:
  9800                           	callstack 0
  9801   002060                     _Display_Error:
  9802                           	callstack 25
  9803                           
  9804                           ;7segment.c: 200: switch (edigit) {
  9805                           
  9806                           ;incstack = 0
  9807   002060  D028               	goto	i2l3858
  9808   002062                     i2l3838:
  9809                           
  9810                           ;7segment.c: 202: displayno(edigit, 0x20);
  9811   002062  C03C  F001         	movff	_edigit,i2displayno@digit
  9812   002066  C03D  F002         	movff	_edigit+1,i2displayno@digit+1
  9813   00206A  0E00               	movlw	0
  9814   00206C  6E04               	movwf	(i2displayno@number+1)^0,c
  9815   00206E  0E20               	movlw	32
  9816   002070  6E03               	movwf	i2displayno@number^0,c
  9817   002072  ECFE  F00C         	call	i2_displayno	;wreg free
  9818   002076                     i2l3840:
  9819                           
  9820                           ;7segment.c: 203: edigit++;
  9821   002076  4A3C               	infsnz	_edigit^0,f,c
  9822   002078  2A3D               	incf	(_edigit+1)^0,f,c
  9823                           
  9824                           ;7segment.c: 204: break;
  9825   00207A  0012               	return	
  9826   00207C                     i2l3842:
  9827                           
  9828                           ;7segment.c: 206: displayno(edigit, enumber);
  9829   00207C  C03C  F001         	movff	_edigit,i2displayno@digit
  9830   002080  C03D  F002         	movff	_edigit+1,i2displayno@digit+1
  9831   002084  C007  F003         	movff	Display_Error@enumber,i2displayno@number
  9832   002088  C008  F004         	movff	Display_Error@enumber+1,i2displayno@number+1
  9833   00208C  ECFE  F00C         	call	i2_displayno	;wreg free
  9834   002090  D7F2               	goto	i2l3840
  9835   002092                     i2l3846:
  9836                           
  9837                           ;7segment.c: 210: displayno(edigit, 0x45);
  9838   002092  C03C  F001         	movff	_edigit,i2displayno@digit
  9839   002096  C03D  F002         	movff	_edigit+1,i2displayno@digit+1
  9840   00209A  0E00               	movlw	0
  9841   00209C  6E04               	movwf	(i2displayno@number+1)^0,c
  9842   00209E  0E45               	movlw	69
  9843   0020A0  6E03               	movwf	i2displayno@number^0,c
  9844   0020A2  ECFE  F00C         	call	i2_displayno	;wreg free
  9845   0020A6  D7E7               	goto	i2l3840
  9846   0020A8                     i2l3854:
  9847                           
  9848                           ;7segment.c: 218: edigit = 1;
  9849   0020A8  0E00               	movlw	0
  9850   0020AA  6E3D               	movwf	(_edigit+1)^0,c
  9851   0020AC  0E01               	movlw	1
  9852   0020AE  6E3C               	movwf	_edigit^0,c
  9853                           
  9854                           ;7segment.c: 219: break;
  9855   0020B0  0012               	return	
  9856   0020B2                     i2l3858:
  9857   0020B2  C03C  F009         	movff	_edigit,??_Display_Error
  9858   0020B6  C03D  F00A         	movff	_edigit+1,??_Display_Error+1
  9859                           
  9860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9861                           ; Switch size 1, requested type "simple"
  9862                           ; Number of cases is 1, Range of values is 0 to 0
  9863                           ; switch strategies available:
  9864                           ; Name         Instructions Cycles
  9865                           ; simple_byte            4     3 (average)
  9866                           ;	Chosen strategy is simple_byte
  9867   0020BA  500A               	movf	(??_Display_Error+1)^0,w,c
  9868   0020BC  0A00               	xorlw	0	; case 0
  9869   0020BE  A4D8               	btfss	status,2,c
  9870   0020C0  D7F3               	goto	i2l3854
  9871                           
  9872                           ; Switch size 1, requested type "simple"
  9873                           ; Number of cases is 4, Range of values is 1 to 4
  9874                           ; switch strategies available:
  9875                           ; Name         Instructions Cycles
  9876                           ; simple_byte           13     7 (average)
  9877                           ;	Chosen strategy is simple_byte
  9878   0020C2  5009               	movf	??_Display_Error^0,w,c
  9879   0020C4  0A01               	xorlw	1	; case 1
  9880   0020C6  B4D8               	btfsc	status,2,c
  9881   0020C8  D7CC               	goto	i2l3838
  9882   0020CA  0A03               	xorlw	3	; case 2
  9883   0020CC  B4D8               	btfsc	status,2,c
  9884   0020CE  D7D6               	goto	i2l3842
  9885   0020D0  0A01               	xorlw	1	; case 3
  9886   0020D2  B4D8               	btfsc	status,2,c
  9887   0020D4  D7DE               	goto	i2l3846
  9888   0020D6  0A07               	xorlw	7	; case 4
  9889   0020D8  B4D8               	btfsc	status,2,c
  9890   0020DA  D7C3               	goto	i2l3838
  9891   0020DC  D7E5               	goto	i2l3854
  9892   0020DE                     __end_of_Display_Error:
  9893                           	callstack 0
  9894                           
  9895 ;; *************** function i2_displayno *****************
  9896 ;; Defined at:
  9897 ;;		line 45 in file "7segment.c"
  9898 ;; Parameters:    Size  Location     Type
  9899 ;;  digit           2    0[COMRAM] int 
  9900 ;;  number          2    2[COMRAM] int 
  9901 ;; Auto vars:     Size  Location     Type
  9902 ;;		None
  9903 ;; Return value:  Size  Location     Type
  9904 ;;                  1    wreg      void 
  9905 ;; Registers used:
  9906 ;;		wreg, status,2, status,0
  9907 ;; Tracked objects:
  9908 ;;		On entry : 0/0
  9909 ;;		On exit  : 0/0
  9910 ;;		Unchanged: 0/0
  9911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9912 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9915 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9916 ;;Total ram usage:        6 bytes
  9917 ;; Hardware stack levels used: 1
  9918 ;; This function calls:
  9919 ;;		Nothing
  9920 ;; This function is called by:
  9921 ;;		_ISR_UpdateDisplay
  9922 ;;		_Display_Error
  9923 ;;		_Display_Warning
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           	psect	text53
  9928   0019FC                     __ptext53:
  9929                           	callstack 0
  9930   0019FC                     i2_displayno:
  9931                           	callstack 25
  9932                           
  9933                           ;7segment.c: 47: switch (digit)
  9934                           
  9935                           ;incstack = 0
  9936   0019FC  D011               	goto	i2l3576
  9937   0019FE                     i2l594:
  9938                           
  9939                           ;7segment.c: 50: LATCbits.LATC5 = 0;
  9940   0019FE  9A8B               	bcf	139,5,c	;volatile
  9941                           
  9942                           ;7segment.c: 51: LATCbits.LATC3 = 1;
  9943   001A00  868B               	bsf	139,3,c	;volatile
  9944   001A02  D006               	goto	L9
  9945   001A04                     i2l596:
  9946                           
  9947                           ;7segment.c: 57: LATCbits.LATC5 = 1;
  9948   001A04  8A8B               	bsf	139,5,c	;volatile
  9949                           
  9950                           ;7segment.c: 58: LATCbits.LATC3 = 1;
  9951   001A06  868B               	bsf	139,3,c	;volatile
  9952                           
  9953                           ;7segment.c: 59: LATCbits.LATC4 = 0;
  9954   001A08  988B               	bcf	139,4,c	;volatile
  9955   001A0A  D003               	goto	L8
  9956   001A0C                     i2l597:
  9957                           
  9958                           ;7segment.c: 64: LATCbits.LATC5 = 1;
  9959   001A0C  8A8B               	bsf	139,5,c	;volatile
  9960                           
  9961                           ;7segment.c: 65: LATCbits.LATC3 = 0;
  9962   001A0E  968B               	bcf	139,3,c	;volatile
  9963   001A10                     L9:
  9964                           
  9965                           ;7segment.c: 66: LATCbits.LATC4 = 1;
  9966   001A10  888B               	bsf	139,4,c	;volatile
  9967   001A12                     L8:
  9968                           
  9969                           ;7segment.c: 67: LATCbits.LATC2 = 1;
  9970   001A12  848B               	bsf	139,2,c	;volatile
  9971                           
  9972                           ;7segment.c: 68: break;
  9973   001A14  D0AB               	goto	i2l3580
  9974   001A16                     i2l598:
  9975                           
  9976                           ;7segment.c: 71: LATCbits.LATC5 = 1;
  9977   001A16  8A8B               	bsf	139,5,c	;volatile
  9978                           
  9979                           ;7segment.c: 72: LATCbits.LATC3 = 1;
  9980   001A18  868B               	bsf	139,3,c	;volatile
  9981                           
  9982                           ;7segment.c: 73: LATCbits.LATC4 = 1;
  9983   001A1A  888B               	bsf	139,4,c	;volatile
  9984                           
  9985                           ;7segment.c: 74: LATCbits.LATC2 = 0;
  9986   001A1C  948B               	bcf	139,2,c	;volatile
  9987                           
  9988                           ;7segment.c: 75: break;
  9989   001A1E  D0A6               	goto	i2l3580
  9990   001A20                     i2l3576:
  9991   001A20  C001  F005         	movff	i2displayno@digit,??i2_displayno
  9992   001A24  C002  F006         	movff	i2displayno@digit+1,??i2_displayno+1
  9993                           
  9994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9995                           ; Switch size 1, requested type "simple"
  9996                           ; Number of cases is 1, Range of values is 0 to 0
  9997                           ; switch strategies available:
  9998                           ; Name         Instructions Cycles
  9999                           ; simple_byte            4     3 (average)
 10000                           ;	Chosen strategy is simple_byte
 10001   001A28  5006               	movf	(??i2_displayno+1)^0,w,c
 10002   001A2A  0A00               	xorlw	0	; case 0
 10003   001A2C  A4D8               	btfss	status,2,c
 10004   001A2E  D09E               	goto	i2l3580
 10005                           
 10006                           ; Switch size 1, requested type "simple"
 10007                           ; Number of cases is 4, Range of values is 1 to 4
 10008                           ; switch strategies available:
 10009                           ; Name         Instructions Cycles
 10010                           ; simple_byte           13     7 (average)
 10011                           ;	Chosen strategy is simple_byte
 10012   001A30  5005               	movf	??i2_displayno^0,w,c
 10013   001A32  0A01               	xorlw	1	; case 1
 10014   001A34  B4D8               	btfsc	status,2,c
 10015   001A36  D7E3               	goto	i2l594
 10016   001A38  0A03               	xorlw	3	; case 2
 10017   001A3A  B4D8               	btfsc	status,2,c
 10018   001A3C  D7E3               	goto	i2l596
 10019   001A3E  0A01               	xorlw	1	; case 3
 10020   001A40  B4D8               	btfsc	status,2,c
 10021   001A42  D7E4               	goto	i2l597
 10022   001A44  0A07               	xorlw	7	; case 4
 10023   001A46  B4D8               	btfsc	status,2,c
 10024   001A48  D7E6               	goto	i2l598
 10025   001A4A  D090               	goto	i2l3580
 10026   001A4C                     i2l600:
 10027                           
 10028                           ;7segment.c: 81: LATBbits.LATB4=0; LATCbits.LATC1=0;
 10029   001A4C  988A               	bcf	138,4,c	;volatile
 10030   001A4E  928B               	bcf	139,1,c	;volatile
 10031                           
 10032                           ;7segment.c: 82: LATAbits.LATA1=0; LATAbits.LATA5=0;
 10033   001A50  9289               	bcf	137,1,c	;volatile
 10034   001A52  9A89               	bcf	137,5,c	;volatile
 10035                           
 10036                           ;7segment.c: 83: LATCbits.LATC0=0; LATBbits.LATB5=0;
 10037   001A54  908B               	bcf	139,0,c	;volatile
 10038   001A56  9A8A               	bcf	138,5,c	;volatile
 10039                           
 10040                           ;7segment.c: 84: LATAbits.LATA2=1; LATAbits.LATA4 = 1;
 10041   001A58  8489               	bsf	137,2,c	;volatile
 10042   001A5A  8889               	bsf	137,4,c	;volatile
 10043                           
 10044                           ;7segment.c: 85: break;
 10045   001A5C  0012               	return	
 10046   001A5E                     i2l602:
 10047                           
 10048                           ;7segment.c: 88: LATBbits.LATB4=1; LATCbits.LATC1=0;
 10049   001A5E  888A               	bsf	138,4,c	;volatile
 10050   001A60  928B               	bcf	139,1,c	;volatile
 10051                           
 10052                           ;7segment.c: 89: LATAbits.LATA1=0; LATAbits.LATA5=1;
 10053   001A62  9289               	bcf	137,1,c	;volatile
 10054   001A64  8A89               	bsf	137,5,c	;volatile
 10055                           
 10056                           ;7segment.c: 90: LATCbits.LATC0=1; LATBbits.LATB5=1;
 10057   001A66  808B               	bsf	139,0,c	;volatile
 10058   001A68  8A8A               	bsf	138,5,c	;volatile
 10059                           
 10060                           ;7segment.c: 91: LATAbits.LATA2=1; LATAbits.LATA4 = 1;
 10061   001A6A  8489               	bsf	137,2,c	;volatile
 10062   001A6C  8889               	bsf	137,4,c	;volatile
 10063                           
 10064                           ;7segment.c: 92: break;
 10065   001A6E  0012               	return	
 10066   001A70                     i2l603:
 10067                           
 10068                           ;7segment.c: 95: LATBbits.LATB4=0; LATCbits.LATC1=0;
 10069   001A70  988A               	bcf	138,4,c	;volatile
 10070   001A72  928B               	bcf	139,1,c	;volatile
 10071                           
 10072                           ;7segment.c: 96: LATAbits.LATA1=1; LATAbits.LATA5=0;
 10073   001A74  8289               	bsf	137,1,c	;volatile
 10074   001A76  9A89               	bcf	137,5,c	;volatile
 10075                           
 10076                           ;7segment.c: 97: LATCbits.LATC0=0; LATBbits.LATB5=1;
 10077   001A78  908B               	bcf	139,0,c	;volatile
 10078   001A7A  8A8A               	bsf	138,5,c	;volatile
 10079                           
 10080                           ;7segment.c: 98: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
 10081   001A7C  9489               	bcf	137,2,c	;volatile
 10082   001A7E  8889               	bsf	137,4,c	;volatile
 10083                           
 10084                           ;7segment.c: 99: break;
 10085   001A80  0012               	return	
 10086   001A82                     i2l604:
 10087                           
 10088                           ;7segment.c: 102: LATBbits.LATB4=0; LATCbits.LATC1=0;
 10089   001A82  988A               	bcf	138,4,c	;volatile
 10090   001A84  928B               	bcf	139,1,c	;volatile
 10091                           
 10092                           ;7segment.c: 103: LATAbits.LATA1=0; LATAbits.LATA5=0;
 10093   001A86  9289               	bcf	137,1,c	;volatile
 10094   001A88  9A89               	bcf	137,5,c	;volatile
 10095                           
 10096                           ;7segment.c: 104: LATCbits.LATC0=1; LATBbits.LATB5=1;
 10097   001A8A  808B               	bsf	139,0,c	;volatile
 10098   001A8C  8A8A               	bsf	138,5,c	;volatile
 10099                           
 10100                           ;7segment.c: 105: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
 10101   001A8E  9489               	bcf	137,2,c	;volatile
 10102   001A90  8889               	bsf	137,4,c	;volatile
 10103                           
 10104                           ;7segment.c: 106: break;
 10105   001A92  0012               	return	
 10106   001A94                     i2l605:
 10107                           
 10108                           ;7segment.c: 109: LATBbits.LATB4=1; LATCbits.LATC1=0;
 10109   001A94  888A               	bsf	138,4,c	;volatile
 10110   001A96  928B               	bcf	139,1,c	;volatile
 10111                           
 10112                           ;7segment.c: 110: LATAbits.LATA1=0; LATAbits.LATA5=1;
 10113   001A98  9289               	bcf	137,1,c	;volatile
 10114   001A9A  8A89               	bsf	137,5,c	;volatile
 10115                           
 10116                           ;7segment.c: 111: LATCbits.LATC0=1; LATBbits.LATB5=0;
 10117   001A9C  808B               	bsf	139,0,c	;volatile
 10118   001A9E  9A8A               	bcf	138,5,c	;volatile
 10119                           
 10120                           ;7segment.c: 112: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
 10121   001AA0  9489               	bcf	137,2,c	;volatile
 10122   001AA2  8889               	bsf	137,4,c	;volatile
 10123                           
 10124                           ;7segment.c: 113: break;
 10125   001AA4  0012               	return	
 10126   001AA6                     i2l606:
 10127                           
 10128                           ;7segment.c: 116: LATBbits.LATB4=0; LATCbits.LATC1=1;
 10129   001AA6  988A               	bcf	138,4,c	;volatile
 10130   001AA8  828B               	bsf	139,1,c	;volatile
 10131                           
 10132                           ;7segment.c: 117: LATAbits.LATA1=0; LATAbits.LATA5=0;
 10133   001AAA  9289               	bcf	137,1,c	;volatile
 10134   001AAC  9A89               	bcf	137,5,c	;volatile
 10135                           
 10136                           ;7segment.c: 118: LATCbits.LATC0=1; LATBbits.LATB5=0;
 10137   001AAE  808B               	bsf	139,0,c	;volatile
 10138   001AB0  9A8A               	bcf	138,5,c	;volatile
 10139                           
 10140                           ;7segment.c: 119: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
 10141   001AB2  9489               	bcf	137,2,c	;volatile
 10142   001AB4  8889               	bsf	137,4,c	;volatile
 10143                           
 10144                           ;7segment.c: 120: break;
 10145   001AB6  0012               	return	
 10146   001AB8                     i2l607:
 10147                           
 10148                           ;7segment.c: 123: LATBbits.LATB4=0; LATCbits.LATC1=1;
 10149   001AB8  988A               	bcf	138,4,c	;volatile
 10150   001ABA  828B               	bsf	139,1,c	;volatile
 10151                           
 10152                           ;7segment.c: 124: LATAbits.LATA1=0; LATAbits.LATA5=0;
 10153   001ABC  9289               	bcf	137,1,c	;volatile
 10154   001ABE  9A89               	bcf	137,5,c	;volatile
 10155                           
 10156                           ;7segment.c: 125: LATCbits.LATC0=0; LATBbits.LATB5=0;
 10157   001AC0  908B               	bcf	139,0,c	;volatile
 10158   001AC2  9A8A               	bcf	138,5,c	;volatile
 10159                           
 10160                           ;7segment.c: 126: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
 10161   001AC4  9489               	bcf	137,2,c	;volatile
 10162   001AC6  8889               	bsf	137,4,c	;volatile
 10163                           
 10164                           ;7segment.c: 127: break;
 10165   001AC8  0012               	return	
 10166   001ACA                     i2l608:
 10167                           
 10168                           ;7segment.c: 130: LATBbits.LATB4=0; LATCbits.LATC1=0;
 10169   001ACA  988A               	bcf	138,4,c	;volatile
 10170   001ACC  928B               	bcf	139,1,c	;volatile
 10171                           
 10172                           ;7segment.c: 131: LATAbits.LATA1=0; LATAbits.LATA5=1;
 10173   001ACE  9289               	bcf	137,1,c	;volatile
 10174   001AD0  8A89               	bsf	137,5,c	;volatile
 10175                           
 10176                           ;7segment.c: 132: LATCbits.LATC0=1; LATBbits.LATB5=1;
 10177   001AD2  808B               	bsf	139,0,c	;volatile
 10178   001AD4  8A8A               	bsf	138,5,c	;volatile
 10179                           
 10180                           ;7segment.c: 133: LATAbits.LATA2=1; LATAbits.LATA4 = 1;
 10181   001AD6  8489               	bsf	137,2,c	;volatile
 10182   001AD8  8889               	bsf	137,4,c	;volatile
 10183                           
 10184                           ;7segment.c: 134: break;
 10185   001ADA  0012               	return	
 10186   001ADC                     i2l609:
 10187                           
 10188                           ;7segment.c: 137: LATBbits.LATB4=0; LATCbits.LATC1=0;
 10189   001ADC  988A               	bcf	138,4,c	;volatile
 10190   001ADE  928B               	bcf	139,1,c	;volatile
 10191                           
 10192                           ;7segment.c: 138: LATAbits.LATA1=0; LATAbits.LATA5=0;
 10193   001AE0  9289               	bcf	137,1,c	;volatile
 10194   001AE2  9A89               	bcf	137,5,c	;volatile
 10195                           
 10196                           ;7segment.c: 139: LATCbits.LATC0=0; LATBbits.LATB5=0;
 10197   001AE4  908B               	bcf	139,0,c	;volatile
 10198   001AE6  9A8A               	bcf	138,5,c	;volatile
 10199                           
 10200                           ;7segment.c: 140: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
 10201   001AE8  9489               	bcf	137,2,c	;volatile
 10202   001AEA  8889               	bsf	137,4,c	;volatile
 10203                           
 10204                           ;7segment.c: 141: break;
 10205   001AEC  0012               	return	
 10206   001AEE                     i2l610:
 10207                           
 10208                           ;7segment.c: 144: LATBbits.LATB4=0; LATCbits.LATC1=0;
 10209   001AEE  988A               	bcf	138,4,c	;volatile
 10210   001AF0  928B               	bcf	139,1,c	;volatile
 10211                           
 10212                           ;7segment.c: 145: LATAbits.LATA1=0; LATAbits.LATA5=1;
 10213   001AF2  9289               	bcf	137,1,c	;volatile
 10214   001AF4  8A89               	bsf	137,5,c	;volatile
 10215                           
 10216                           ;7segment.c: 146: LATCbits.LATC0=1; LATBbits.LATB5=0;
 10217   001AF6  808B               	bsf	139,0,c	;volatile
 10218   001AF8  9A8A               	bcf	138,5,c	;volatile
 10219                           
 10220                           ;7segment.c: 147: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
 10221   001AFA  9489               	bcf	137,2,c	;volatile
 10222   001AFC  8889               	bsf	137,4,c	;volatile
 10223                           
 10224                           ;7segment.c: 148: break;
 10225   001AFE  0012               	return	
 10226   001B00                     i2l611:
 10227                           
 10228                           ;7segment.c: 151: LATBbits.LATB4=1; LATCbits.LATC1=1;
 10229   001B00  888A               	bsf	138,4,c	;volatile
 10230   001B02  828B               	bsf	139,1,c	;volatile
 10231                           
 10232                           ;7segment.c: 152: LATAbits.LATA1=1; LATAbits.LATA5=0;
 10233   001B04  8289               	bsf	137,1,c	;volatile
 10234   001B06  9A89               	bcf	137,5,c	;volatile
 10235                           
 10236                           ;7segment.c: 153: LATCbits.LATC0=0; LATBbits.LATB5=0;
 10237   001B08  908B               	bcf	139,0,c	;volatile
 10238   001B0A  9A8A               	bcf	138,5,c	;volatile
 10239                           
 10240                           ;7segment.c: 154: LATAbits.LATA2=1; LATAbits.LATA4 = 1;
 10241   001B0C  8489               	bsf	137,2,c	;volatile
 10242   001B0E  8889               	bsf	137,4,c	;volatile
 10243                           
 10244                           ;7segment.c: 155: break;
 10245   001B10  0012               	return	
 10246   001B12                     i2l612:
 10247                           
 10248                           ;7segment.c: 158: LATBbits.LATB4=0; LATCbits.LATC1=1;
 10249   001B12  988A               	bcf	138,4,c	;volatile
 10250   001B14  828B               	bsf	139,1,c	;volatile
 10251                           
 10252                           ;7segment.c: 159: LATAbits.LATA1=1; LATAbits.LATA5=0;
 10253   001B16  8289               	bsf	137,1,c	;volatile
 10254   001B18  9A89               	bcf	137,5,c	;volatile
 10255                           
 10256                           ;7segment.c: 160: LATCbits.LATC0=0; LATBbits.LATB5=0;
 10257   001B1A  908B               	bcf	139,0,c	;volatile
 10258   001B1C  9A8A               	bcf	138,5,c	;volatile
 10259                           
 10260                           ;7segment.c: 161: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
 10261   001B1E  9489               	bcf	137,2,c	;volatile
 10262   001B20  8889               	bsf	137,4,c	;volatile
 10263                           
 10264                           ;7segment.c: 162: break;
 10265   001B22  0012               	return	
 10266   001B24                     i2l613:
 10267                           
 10268                           ;7segment.c: 165: LATBbits.LATB4=1; LATCbits.LATC1=1;
 10269   001B24  888A               	bsf	138,4,c	;volatile
 10270   001B26  828B               	bsf	139,1,c	;volatile
 10271                           
 10272                           ;7segment.c: 166: LATAbits.LATA1=1; LATAbits.LATA5=1;
 10273   001B28  8289               	bsf	137,1,c	;volatile
 10274   001B2A  8A89               	bsf	137,5,c	;volatile
 10275                           
 10276                           ;7segment.c: 167: LATCbits.LATC0=1; LATBbits.LATB5=1;
 10277   001B2C  808B               	bsf	139,0,c	;volatile
 10278   001B2E  8A8A               	bsf	138,5,c	;volatile
 10279                           
 10280                           ;7segment.c: 168: LATAbits.LATA2=0; LATAbits.LATA4 = 1;
 10281   001B30  9489               	bcf	137,2,c	;volatile
 10282   001B32  8889               	bsf	137,4,c	;volatile
 10283                           
 10284                           ;7segment.c: 169: break;
 10285   001B34  0012               	return	
 10286   001B36                     i2l615:
 10287                           
 10288                           ;7segment.c: 173: LATBbits.LATB4=1; LATCbits.LATC1=1;
 10289   001B36  888A               	bsf	138,4,c	;volatile
 10290   001B38  828B               	bsf	139,1,c	;volatile
 10291                           
 10292                           ;7segment.c: 174: LATAbits.LATA1=1; LATAbits.LATA5=1;
 10293   001B3A  8289               	bsf	137,1,c	;volatile
 10294   001B3C  8A89               	bsf	137,5,c	;volatile
 10295                           
 10296                           ;7segment.c: 175: LATCbits.LATC0=1; LATBbits.LATB5=1;
 10297   001B3E  808B               	bsf	139,0,c	;volatile
 10298   001B40  8A8A               	bsf	138,5,c	;volatile
 10299                           
 10300                           ;7segment.c: 176: LATAbits.LATA2=1; LATAbits.LATA4 = 1;
 10301   001B42  8489               	bsf	137,2,c	;volatile
 10302   001B44  8889               	bsf	137,4,c	;volatile
 10303                           
 10304                           ;7segment.c: 177: break;
 10305   001B46  0012               	return	
 10306   001B48                     i2l616:
 10307                           
 10308                           ;7segment.c: 181: LATBbits.LATB4=1; LATCbits.LATC1=0;
 10309   001B48  888A               	bsf	138,4,c	;volatile
 10310   001B4A  928B               	bcf	139,1,c	;volatile
 10311                           
 10312                           ;7segment.c: 182: LATAbits.LATA1=0; LATAbits.LATA5=0;
 10313   001B4C  9289               	bcf	137,1,c	;volatile
 10314   001B4E  9A89               	bcf	137,5,c	;volatile
 10315                           
 10316                           ;7segment.c: 183: LATCbits.LATC0=0; LATBbits.LATB5=0;
 10317   001B50  908B               	bcf	139,0,c	;volatile
 10318   001B52  9A8A               	bcf	138,5,c	;volatile
 10319                           
 10320                           ;7segment.c: 184: LATAbits.LATA2=1; LATAbits.LATA4 = 1;
 10321   001B54  8489               	bsf	137,2,c	;volatile
 10322   001B56  8889               	bsf	137,4,c	;volatile
 10323                           
 10324                           ;7segment.c: 185: break;
 10325   001B58  0012               	return	
 10326   001B5A                     i2l617:
 10327                           
 10328                           ;7segment.c: 188: LATBbits.LATB4=0; LATCbits.LATC1=0;
 10329   001B5A  988A               	bcf	138,4,c	;volatile
 10330   001B5C  928B               	bcf	139,1,c	;volatile
 10331                           
 10332                           ;7segment.c: 189: LATAbits.LATA1=1; LATAbits.LATA5=0;
 10333   001B5E  8289               	bsf	137,1,c	;volatile
 10334   001B60  9A89               	bcf	137,5,c	;volatile
 10335                           
 10336                           ;7segment.c: 190: LATCbits.LATC0=0; LATBbits.LATB5=1;
 10337   001B62  908B               	bcf	139,0,c	;volatile
 10338   001B64  8A8A               	bsf	138,5,c	;volatile
 10339                           
 10340                           ;7segment.c: 191: LATAbits.LATA2=0; LATAbits.LATA4 = 0;
 10341   001B66  9489               	bcf	137,2,c	;volatile
 10342   001B68  9889               	bcf	137,4,c	;volatile
 10343                           
 10344                           ;7segment.c: 192: break;
 10345   001B6A  0012               	return	
 10346   001B6C                     i2l3580:
 10347   001B6C  C003  F005         	movff	i2displayno@number,??i2_displayno
 10348   001B70  C004  F006         	movff	i2displayno@number+1,??i2_displayno+1
 10349                           
 10350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10351                           ; Switch size 1, requested type "simple"
 10352                           ; Number of cases is 1, Range of values is 0 to 0
 10353                           ; switch strategies available:
 10354                           ; Name         Instructions Cycles
 10355                           ; simple_byte            4     3 (average)
 10356                           ;	Chosen strategy is simple_byte
 10357   001B74  5006               	movf	(??i2_displayno+1)^0,w,c
 10358   001B76  0A00               	xorlw	0	; case 0
 10359   001B78  A4D8               	btfss	status,2,c
 10360   001B7A  D7DD               	goto	i2l615
 10361                           
 10362                           ; Switch size 1, requested type "simple"
 10363                           ; Number of cases is 16, Range of values is 32 to 81
 10364                           ; switch strategies available:
 10365                           ; Name         Instructions Cycles
 10366                           ; simple_byte           49    25 (average)
 10367                           ;	Chosen strategy is simple_byte
 10368   001B7C  5005               	movf	??i2_displayno^0,w,c
 10369   001B7E  0A20               	xorlw	32	; case 32
 10370   001B80  B4D8               	btfsc	status,2,c
 10371   001B82  D7D9               	goto	i2l615
 10372   001B84  0A0D               	xorlw	13	; case 45
 10373   001B86  B4D8               	btfsc	status,2,c
 10374   001B88  D7CD               	goto	i2l613
 10375   001B8A  0A1D               	xorlw	29	; case 48
 10376   001B8C  B4D8               	btfsc	status,2,c
 10377   001B8E  D75E               	goto	i2l600
 10378   001B90  0A01               	xorlw	1	; case 49
 10379   001B92  B4D8               	btfsc	status,2,c
 10380   001B94  D764               	goto	i2l602
 10381   001B96  0A03               	xorlw	3	; case 50
 10382   001B98  B4D8               	btfsc	status,2,c
 10383   001B9A  D76A               	goto	i2l603
 10384   001B9C  0A01               	xorlw	1	; case 51
 10385   001B9E  B4D8               	btfsc	status,2,c
 10386   001BA0  D770               	goto	i2l604
 10387   001BA2  0A07               	xorlw	7	; case 52
 10388   001BA4  B4D8               	btfsc	status,2,c
 10389   001BA6  D776               	goto	i2l605
 10390   001BA8  0A01               	xorlw	1	; case 53
 10391   001BAA  B4D8               	btfsc	status,2,c
 10392   001BAC  D77C               	goto	i2l606
 10393   001BAE  0A03               	xorlw	3	; case 54
 10394   001BB0  B4D8               	btfsc	status,2,c
 10395   001BB2  D782               	goto	i2l607
 10396   001BB4  0A01               	xorlw	1	; case 55
 10397   001BB6  B4D8               	btfsc	status,2,c
 10398   001BB8  D788               	goto	i2l608
 10399   001BBA  0A0F               	xorlw	15	; case 56
 10400   001BBC  B4D8               	btfsc	status,2,c
 10401   001BBE  D78E               	goto	i2l609
 10402   001BC0  0A01               	xorlw	1	; case 57
 10403   001BC2  B4D8               	btfsc	status,2,c
 10404   001BC4  D794               	goto	i2l610
 10405   001BC6  0A7C               	xorlw	124	; case 69
 10406   001BC8  B4D8               	btfsc	status,2,c
 10407   001BCA  D7A3               	goto	i2l612
 10408   001BCC  0A09               	xorlw	9	; case 76
 10409   001BCE  B4D8               	btfsc	status,2,c
 10410   001BD0  D797               	goto	i2l611
 10411   001BD2  0A1C               	xorlw	28	; case 80
 10412   001BD4  B4D8               	btfsc	status,2,c
 10413   001BD6  D7B8               	goto	i2l616
 10414   001BD8  0A01               	xorlw	1	; case 81
 10415   001BDA  B4D8               	btfsc	status,2,c
 10416   001BDC  D7BE               	goto	i2l617
 10417   001BDE  D7AB               	goto	i2l615
 10418   001BE0                     __end_ofi2_displayno:
 10419                           	callstack 0
 10420   000000                     
 10421                           	psect	rparam
 10422   000000                     
 10423                           	psect	temp
 10424   000057                     btemp:
 10425                           	callstack 0
 10426   000057                     	ds	1
 10427   000000                     int$flags	set	btemp
 10428   000000                     wtemp8	set	btemp+1
 10429   000000                     ttemp5	set	btemp+1
 10430   000000                     ttemp6	set	btemp+4
 10431   000000                     ttemp7	set	btemp+8
 10432                           
 10433                           	psect	config
 10434                           
 10435                           ;Config register CONFIG1L @ 0x7FF8
 10436                           ;	Watchdog Timer Enable bit
 10437                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
 10438                           ;	PLL Prescaler Selection bits
 10439                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 10440                           ;	Stack Overflow/Underflow Reset Enable bit
 10441                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
 10442                           ;	Extended Instruction Set Enable bit
 10443                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10444                           ;	Background Debugger Enable bit
 10445                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
 10446   007FF8                     	org	32760
 10447   007FF8  AE                 	db	174
 10448                           
 10449                           ;Config register CONFIG1H @ 0x7FF9
 10450                           ;	CPU System Clock Postscaler
 10451                           ;	CPUDIV = OSC1, No CPU system clock divide
 10452                           ;	Code Protection bit
 10453                           ;	CP0 = OFF, Program memory is not code-protected
 10454   007FF9                     	org	32761
 10455   007FF9  F7                 	db	247
 10456                           
 10457                           ;Config register CONFIG2L @ 0x7FFA
 10458                           ;	Oscillator Selection bits
 10459                           ;	FOSC = INTOSCPLLO, INTOSC with PLL enabled, CLKO on RA6 and Port function on RA7
 10460                           ;	Fail-Safe Clock Monitor Enable bit
 10461                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10462                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
 10463                           ;	IESO = OFF, Two-Speed Start-up disabled
 10464   007FFA                     	org	32762
 10465   007FFA  03                 	db	3
 10466                           
 10467                           ;Config register CONFIG2H @ 0x7FFB
 10468                           ;	Watchdog Timer Postscaler Select bits
 10469                           ;	WDTPS = 2048, 1:2048
 10470   007FFB                     	org	32763
 10471   007FFB  FB                 	db	251
 10472                           
 10473                           ;Config register CONFIG3L @ 0x7FFC
 10474                           ;	unspecified, using default values
 10475   007FFC                     	org	32764
 10476   007FFC  F8                 	db	248
 10477                           
 10478                           ;Config register CONFIG3H @ 0x7FFD
 10479                           ;	ECCP2 MUX bit
 10480                           ;	CCP2MX = DEFAULT, ECCP2/P2A is multiplexed with RC1
 10481                           ;	MSSP Address Masking Mode Select bit
 10482                           ;	MSSPMSK = MSK5, 5-Bit Address Masking mode enable
 10483   007FFD                     	org	32765
 10484   007FFD  F1                 	db	241
 10485                           tosu	equ	0xFFF
 10486                           tosh	equ	0xFFE
 10487                           tosl	equ	0xFFD
 10488                           stkptr	equ	0xFFC
 10489                           pclatu	equ	0xFFB
 10490                           pclath	equ	0xFFA
 10491                           pcl	equ	0xFF9
 10492                           tblptru	equ	0xFF8
 10493                           tblptrh	equ	0xFF7
 10494                           tblptrl	equ	0xFF6
 10495                           tablat	equ	0xFF5
 10496                           prodh	equ	0xFF4
 10497                           prodl	equ	0xFF3
 10498                           indf0	equ	0xFEF
 10499                           postinc0	equ	0xFEE
 10500                           postdec0	equ	0xFED
 10501                           preinc0	equ	0xFEC
 10502                           plusw0	equ	0xFEB
 10503                           fsr0h	equ	0xFEA
 10504                           fsr0l	equ	0xFE9
 10505                           wreg	equ	0xFE8
 10506                           indf1	equ	0xFE7
 10507                           postinc1	equ	0xFE6
 10508                           postdec1	equ	0xFE5
 10509                           preinc1	equ	0xFE4
 10510                           plusw1	equ	0xFE3
 10511                           fsr1h	equ	0xFE2
 10512                           fsr1l	equ	0xFE1
 10513                           bsr	equ	0xFE0
 10514                           indf2	equ	0xFDF
 10515                           postinc2	equ	0xFDE
 10516                           postdec2	equ	0xFDD
 10517                           preinc2	equ	0xFDC
 10518                           plusw2	equ	0xFDB
 10519                           fsr2h	equ	0xFDA
 10520                           fsr2l	equ	0xFD9
 10521                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        47
    BSS         87
    Persistent  24
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      86
    BANK0           160     34     133
    BANK1           256     33      49
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_ISR_UpdateDisplay
    _ISR_UpdateDisplay->i2_read_i2c
    _ISR_UpdateDisplay->i2_write_i2c
    i2_write_i2c->i2___aldiv
    i2_read_i2c->i2___aldiv
    i2_i2c_Write->i2_i2c_Wait
    i2_i2c_Stop->i2_i2c_Wait
    i2_i2c_Start->i2_i2c_Wait
    i2_i2c_Restart->i2_i2c_Wait
    i2_i2c_Read->i2_i2c_Wait
    i2_i2c_Address->i2_i2c_Wait
    i2___aldiv->i2___almod
    _Display_Warning->i2_displayno
    _Display_Error->i2_displayno

Critical Paths under _main in BANK0

    _main->_read_i2c
    _main->_write_i2c
    _write_i2c->___aldiv
    _read_i2c->___aldiv
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _i2c_Restart->_i2c_Wait
    _i2c_Read->_i2c_Wait
    _i2c_Address->_i2c_Wait
    ___aldiv->___almod
    _Display_Version->_displayno

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0   22787
                                             30 BANK0      4     4      0
                                              0 BANK1     33    33      0
                     _DelayTime_10ms
                      _DelayTime_1ms
                    _Display_Version
                     _Feeder_Rotate1
                     _Feeder_Rotate2
                        _Feeder_Stop
                         _InitTimer0
                         _InitTimer1
                         _InitTimer2
                       _Lifter_Brake
                        _Lifter_Down
                        _Lifter_Init
                        _Lifter_Stop
                          _Lifter_Up
                        _Write1USART
                            ___aldiv
                            ___almod
                             ___lmul
                        _displayinit
                           _flushOut
                           _i2c_Init
                               _init
                          _initUSART
                           _read_i2c
                          _write_i2c
 ---------------------------------------------------------------------------------
 (1) _write_i2c                                            6     0      6    5128
                                             24 BANK0      6     0      6
                            ___aldiv
                        _i2c_Address
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _read_i2c                                             6     2      4    4491
                                             24 BANK0      6     2      4
                            ___aldiv
                        _i2c_Address
                           _i2c_Read
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      31
                                              1 BANK0      1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Read                                             4     2      2      65
                                              1 BANK0      4     2      2
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Address                                          3     2      1     369
                                              1 BANK0      3     2      1
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    2255
                                             10 BANK0     14     6      8
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flushOut                                             2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _displayinit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     456
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___almod                                             10     2      8    1303
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _Write1USART                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lifter_Up                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lifter_Init                                          0     0      0       0
                        _Lifter_Down
                        _Lifter_Stop
 ---------------------------------------------------------------------------------
 (1) _Lifter_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lifter_Down                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lifter_Brake                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Feeder_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Feeder_Rotate2                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Feeder_Rotate1                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_Version                                     10    10      0    4524
                                              6 BANK0     10    10      0
                      _DelayTime_1ms
                          _displayno
 ---------------------------------------------------------------------------------
 (2) _displayno                                            6     2      4    2282
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _DelayTime_1ms                                        3     1      2    1834
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _DelayTime_10ms                                       3     1      2     394
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                             5     5      0    5607
                                             38 COMRAM     5     5      0
                      _Display_Error
                    _Display_Warning
                  _ISR_UpdateDisplay
                         _Read1USART
                      i2_Feeder_Stop
                      i2_Lifter_Stop
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (5) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) i2_Lifter_Stop                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) i2_Feeder_Stop                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Read1USART                                           1     1      0      25
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ISR_UpdateDisplay                                    8     8      0    3756
                                             30 COMRAM     8     8      0
                          i2___aldiv
                          i2___almod
                        i2_displayno
                         i2_read_i2c
                        i2_write_i2c
 ---------------------------------------------------------------------------------
 (6) i2_write_i2c                                          6     0      6    1002
                                             24 COMRAM     6     0      6
                          i2___aldiv
                      i2_i2c_Address
                        i2_i2c_Start
                         i2_i2c_Stop
                        i2_i2c_Write
 ---------------------------------------------------------------------------------
 (6) i2_read_i2c                                           6     2      4     970
                                             24 COMRAM     6     2      4
                          i2___aldiv
                      i2_i2c_Address
                         i2_i2c_Read
                      i2_i2c_Restart
                        i2_i2c_Start
                         i2_i2c_Stop
                        i2_i2c_Write
 ---------------------------------------------------------------------------------
 (7) i2_i2c_Write                                          1     1      0      22
                                              1 COMRAM     1     1      0
                         i2_i2c_Wait
 ---------------------------------------------------------------------------------
 (7) i2_i2c_Stop                                           0     0      0       0
                         i2_i2c_Wait
 ---------------------------------------------------------------------------------
 (7) i2_i2c_Start                                          0     0      0       0
                         i2_i2c_Wait
 ---------------------------------------------------------------------------------
 (7) i2_i2c_Restart                                        0     0      0       0
                         i2_i2c_Wait
 ---------------------------------------------------------------------------------
 (7) i2_i2c_Read                                           4     2      2      45
                                              1 COMRAM     4     2      2
                         i2_i2c_Wait
 ---------------------------------------------------------------------------------
 (7) i2_i2c_Address                                        3     2      1     146
                                              1 COMRAM     3     2      1
                         i2_i2c_Wait
 ---------------------------------------------------------------------------------
 (8) i2_i2c_Wait                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2___aldiv                                           14     6      8     664
                                             10 COMRAM    14     6      8
                          i2___almod (ARG)
 ---------------------------------------------------------------------------------
 (6) i2___almod                                           10     2      8     452
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (5) _Display_Warning                                      4     2      2     766
                                              6 COMRAM     4     2      2
                        i2_displayno
 ---------------------------------------------------------------------------------
 (5) _Display_Error                                        4     2      2     766
                                              6 COMRAM     4     2      2
                        i2_displayno
 ---------------------------------------------------------------------------------
 (6) i2_displayno                                          6     2      4     668
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayTime_10ms
   _DelayTime_1ms
   _Display_Version
     _DelayTime_1ms
     _displayno
   _Feeder_Rotate1
   _Feeder_Rotate2
   _Feeder_Stop
   _InitTimer0
   _InitTimer1
   _InitTimer2
   _Lifter_Brake
   _Lifter_Down
   _Lifter_Init
     _Lifter_Down
     _Lifter_Stop
   _Lifter_Stop
   _Lifter_Up
   _Write1USART
   ___aldiv
     ___almod (ARG)
   ___almod
   ___lmul
   _displayinit
   _flushOut
   _i2c_Init
   _init
   _initUSART
   _read_i2c
     ___aldiv
     _i2c_Address
       _i2c_Wait
     _i2c_Read
       _i2c_Wait
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _write_i2c
     ___aldiv
     _i2c_Address
     _i2c_Start
     _i2c_Stop
     _i2c_Write

 _high_isr (ROOT)
   _Display_Error
     i2_displayno
   _Display_Warning
     i2_displayno
   _ISR_UpdateDisplay
     i2___aldiv
       i2___almod (ARG)
     i2___almod
     i2_displayno
     i2_read_i2c
       i2___aldiv
       i2_i2c_Address
         i2_i2c_Wait
       i2_i2c_Read
         i2_i2c_Wait
       i2_i2c_Restart
         i2_i2c_Wait
       i2_i2c_Start
         i2_i2c_Wait
       i2_i2c_Stop
         i2_i2c_Wait
       i2_i2c_Write
         i2_i2c_Wait
     i2_write_i2c
       i2___aldiv
       i2_i2c_Address
       i2_i2c_Start
       i2_i2c_Stop
       i2_i2c_Write
   _Read1USART
   i2_Feeder_Stop
   i2_Lifter_Stop
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      53        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      31       7       19.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     22      85       5       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      56       1       91.5%
BITBANK15           40      0       0      34        0.0%
BANK15              40      0       0      35        0.0%
BITBIGSFRllllll     2B      0       0      51        0.0%
BITBIGSFRlhh        1A      0       0      37        0.0%
BITBIGSFRllhhl      13      0       0      41        0.0%
BITBIGSFRh           D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      50        0.0%
BITBIGSFRllhhhl      7      0       0      40        0.0%
BITBIGSFRlhl         4      0       0      38        0.0%
BITBIGSFRlllhhh      3      0       0      44        0.0%
BITBIGSFRlllhhh      3      0       0      43        0.0%
BITBIGSFRlllhhh      3      0       0      45        0.0%
BITBIGSFRlllhl       3      0       0      47        0.0%
BITBIGSFRlllllh      2      0       0      49        0.0%
BITBIGSFRllhll       2      0       0      42        0.0%
BITBIGSFRllhhhh      1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      48        0.0%
BITBIGSFRlllhhl      1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10C      52        0.0%
DATA                 0      0     10C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jul 25 13:53:57 2024

            ??i2_i2c_Address 0003                ??_i2c_Address 008E                 ?_displayinit 0001  
            ?_DelayTime_10ms 008C                  i2c_Read@ack 008F                 main@FirstRun 010C  
                        l330 0CA6                          l411 14C0                          l332 0F96  
                        l405 1484                          l317 0BBE                          l309 0B56  
                        l261 089E                          l502 2424                          l263 08DC  
                        l600 1868                          l257 0826                          l610 190A  
                        l602 187A                          l266 0B1C                          l611 191C  
                        l603 188C                          l267 08FA                          l259 0862  
                        l508 244C                          l612 192E                          l604 189E  
                        l372 11AC                          l276 0966                          l613 1940  
                        l605 18B0                          l381 136E                          l606 18C2  
                        l615 1952                          l607 18D4                          l279 0978  
                        l616 1964                          l608 18E6                          l712 23D2  
                        l617 1976                          l609 18F8                          l713 23D4  
                        l298 0ADC                          l652 1C4C                          l388 13AE  
                        l397 1442                          l744 25C2                          l594 1818  
                        l596 181E                          l597 1826                          l598 1830  
                        _GIE 007F97                          _PR2 000FCB              ?_Feeder_Rotate1 0001  
            ?_Feeder_Rotate2 0001                          wreg 000FE8              ??i2_i2c_Restart 0002  
                 _TXSTA2bits 000FA8                ??_i2c_Restart 008D           i2___almod@dividend 0001  
                       l6002 0BFA                         l6102 0EC0                         l6014 0C26  
                       l6200 1026                         l6032 0C84                         l6008 0C10  
                       l6024 0C4A                         l5306 240A                         l5322 1988  
                       l5410 1DAA                         l5402 1D86                         l6130 0F2E  
                       l6114 0EEC                         l5500 1C04                         l6108 0ED6  
                       l6028 0C64                         l5318 183A                         l5502 1C18  
                       l5406 1D94                         l6126 0F12                         l6070 0DB6  
                       l6054 0D46                         l6038 0D10                         l5504 1C20  
                       l6160 0FAC                         l5522 1C70                         l6218 1060  
                       l6154 0F92                         l6090 0E9C                         l5508 1C36  
                       l5524 1C9C                         l5620 22AE                         l5604 2388  
                       l6412 13D8                         l6332 1274                         l6236 109A  
                       l6180 0FE4                         l6164 0FB6             _TMR0IF_triggered 0043  
                       l5518 1C66                         l5526 1CA8                         l5390 1D46  
                       l6254 10D4                         l6182 0FEC                         l5640 1ECC  
                       l5632 1EA6                         l5616 229A                         l5392 1D52  
                       l5384 1D24                         l6432 1420                         l6424 1404  
                       l6328 126C                         l6344 128C                         l5642 1ED8  
                       l5378 1D0C                         l6434 142A                         l6442 1460  
                       l6346 12B8                         l6098 0EB0                         l5722 05DE  
                       l5714 0592                         l5652 1F0E                         l5636 1EBA  
                       l6284 118C                         l6348 12C0                         l5820 0904  
                       l5494 1BFA                         l6294 11AE                         l5830 0926  
                       l5822 0908                         l5742 074E                         l5718 05B8  
                       l5592 2432                         l5656 1F24                         l5648 1F00  
                       l6456 1490                         l6288 1194                         l5808 08E2  
                       l5578 2470                         l6466 14B6                         l6394 1384  
                       l6298 11B4                         l5930 0AAE                         l5914 0A78  
                       l5826 0916                         l5842 0952                         l5916 0A82  
                       l5860 09A6                         l5844 0954                         l5836 093C  
                       l5950 0B0A                         l5926 0A9E                         l5936 0AC4  
                       l5872 09CA                         l5962 0B3E                         l5778 082C  
                       l5956 0B2C                         l5892 0A18                         l5868 09BA  
                       l5884 09F6                         l5788 0868                         l5982 0B88  
                       l5878 09E0                         l5798 08A6                         l5994 0BDC  
                       l5998 0BEA                         _LATA 000F89                         u5020 0B6A  
                       u5040 0B78                  main@counter 0102                         _PEN2 007B5A  
                       u4420 1D56                         u5070 0BA4                         u6007 2412  
                       u6017 243A                         u4530 23AE                         u5330 0F26  
                       u5250 0D9A                         u4460 1CBA                         u4620 056A  
                       u4470 1CCE                         u4630 05A8                         u4480 1CEC  
                       u5360 0F66                         u4640 05CE                         u4660 0764  
                       u4590 1EDC                         u4830 0A10                         u5640 1372  
                       u4850 0A4A                         _SEN2 007B58                         u5820 14A0  
                       u5977 0AE8                         u5987 0C3A                         u5997 0F02  
                       _TMR0 000FD6                         _TMR1 000FCE       i2i2c_Address@l_address 0004  
                       _Busy 008A                         _Temp 002C                         _Stop 0045  
                 i2_read_i2c 21C2                         _main 0380                         _init 222A  
         DelayTime_10ms@time 008C                         _tens 0034                         fsr2h 000FDA  
                       indf2 000FDF                         fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 0057          __end_ofi2_write_i2c 237E                         start 037C  
               ___param_bank 000000                 high_isr@Temp 0029              ??i2_Lifter_Stop 0001  
               _BAUDCON2bits 000F7C                ??_Lifter_Down 008C                ??_Lifter_Init 008C  
              ??_Lifter_Stop 008C              __end_of___aldiv 1DBC              __end_of___almod 1F36  
                      ?_main 0001                        ?_init 0001                  i2_displayno 19FC  
                      _T0CON 000FD5                        _T1CON 000FCD                        _T2CON 000FCA  
                      _RCEN2 007B5B                        i2l600 1A4C                        i2l610 1AEE  
                      i2l602 1A5E                        i2l611 1B00                        i2l603 1A70  
                      i2l612 1B12                        i2l604 1A82                        i2l613 1B24  
                      i2l605 1A94                        i2l453 0366                        i2l606 1AA6  
                      i2l615 1B36                        i2l607 1AB8                        i2l616 1B48  
                      i2l608 1ACA                        i2l712 23FC                        i2l617 1B5A  
                      i2l609 1ADC                        i2l713 23FE                        i2l449 0226  
                      i2l477 0370                        i2l750 24EA                        i2l744 25CE  
                      i2l594 19FE                        i2l596 1A04                        i2l597 1A0C  
                      i2l598 1A16                        _RSEN2 007B59                        _PORTA 000F80  
                      _ETemp 0038                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      _TRISF 000F97                        _TRISG 000F98          __end_of_i2c_Address 250A  
        ___lmul@multiplicand 0090                ?_Lifter_Brake 0001                        _digit 0053  
                      _error 0088                        main@i 011C                   _Read1USART 24D8  
                      _units 0036             _TMR1IF_triggered 0042                  ?i2_i2c_Read 0002  
                ?i2_i2c_Wait 0001                  _Feeder_Stop 2628                  ?i2_i2c_Stop 0001  
                      tablat 000FF5          __end_of_i2c_Restart 25F8                        ttemp5 0058  
                      ttemp6 005B                        ttemp7 005F                        status 000FD8  
                      wtemp8 0058                i2_Write1USART 25C8                   _LiftUpTime 00C2  
            __initialization 20DE                   _InitTimer0 2538                   _InitTimer1 250A  
                 _InitTimer2 2562                 __end_of_main 14FE                 __end_of_init 2288  
           __end_of_i2c_Init 2538             __end_of_i2c_Read 23DE             __end_of_i2c_Wait 2562  
           __end_of_i2c_Stop 25E8   main@lifter_stop_delay_time 010F                   _Lifter_Use 0086  
                 _Old_Number 004B                       ??_main 00AA                       ??_init 008C  
              __activetblptr 000002               ??_Lifter_Brake 008C          __end_of_Lifter_Down 2622  
        __end_of_Lifter_Init 247C          __end_of_Lifter_Stop 261C                       _ACKEN2 007B5C  
                     _ACKDT2 007B5D                  i2_write_i2c 2334         Display_Error@enumber 0007  
             i2___aldiv@sign 0014             _TMR2IF_triggered 0089                       i2l5002 032A  
                     i2l5020 0360                       i2l3430 1DD8                       i2l5008 033A  
                     i2l3610 1F66                       i2l3442 1E12                       i2l3444 1E1E  
                     i2l3436 1DF0                       i2l3630 1FD0                       i2l3622 1FAC  
                     i2l3614 1F78                       i2l3606 1F52                       i2l3462 1E76  
                     i2l3454 1E52                       i2l3616 1F84                       i2l3626 1FBA  
                     i2l3458 1E60                       i2l3580 1B6C                       i2l3910 1628  
                     i2l3902 1548                       i2l3576 1A20                       i2l3840 2076  
                     i2l3920 1774                       i2l3842 207C                       i2l3922 1788  
                     i2l3906 160E                       i2l3932 17BA                       i2l3924 178E  
                     i2l3916 1642                       i2l3854 20A8                       i2l3846 2092  
                     i2l3838 2062                       i2l3870 1FFE                       i2l3918 166A  
                     i2l3942 17EA                       i2l4910 01CC                       i2l4902 0188  
                     i2l3928 17A4                       i2l3960 24EE                       i2l4920 0200  
                     i2l4904 0198                       i2l3858 20B2                       i2l3882 202A  
                     i2l3874 2014                       i2l3866 1FE4                       i2l3938 17DC  
                     i2l4922 0208                       i2l4914 01E2                       i2l4850 0036  
                     i2l3868 1FF8                       i2l4940 024E                       i2l4916 01EA  
                     i2l4908 01BC                       i2l4860 0056                       i2l3886 2034  
                     i2l4934 023C                       i2l4926 021E                       i2l3896 151E  
                     i2l4960 0296                       i2l4880 00C8                       i2l4872 008C  
                     i2l4928 022A                       i2l4856 004E                       i2l4962 029C  
                     i2l4946 025A                       i2l4890 0120                       i2l4874 0094  
                     i2l4866 006E                       i2l4858 0052                       i2l4892 0130  
                     i2l4884 00EC                       i2l4868 0076                       i2l4982 02E8  
                     i2l4886 00FC                       i2l4878 00B8                       i2l4896 0154  
                     i2l4994 0308                       i2l4898 0164                       i2l4988 0304  
                     _RCREG2 000FAA                       _TMR0IF 007F92                       _SPBRG2 000FAB  
                     _TMR1IE 007CE8                       _TMR1IF 007CF0                       _TMR2IE 007CE9  
                     _TMR2IF 007CF1                  ?i2_read_i2c 0019                       _TRISD5 007CAD  
                     _TRISD6 007CAE               ?i2_Write1USART 0001                       _TXREG2 000FA9  
         i2write_i2c@address 0019               i2___almod@sign 000A                       _Edigit 002E  
            read_i2c@address 00A4                       _OpMode 0056             __end_of_high_isr 037C  
                     ___lmul 2288                    ??___aldiv 009E                    ??___almod 0094  
                     _edigit 003C             __end_of_flushOut 23B0             __end_of_read_i2c 21C2  
                     _lifter 0087                  _i2c_Address 24F2                       clear_0 2124  
                     clear_1 2130                       clear_2 213C                       isa$std 000001  
                     _number 00D5            _FeederRotate1Time 0051            _FeederRotate2Time 004F  
           Read1USART@result 0001                i2c_Write@data 008D            __end_ofi2___aldiv 1E88  
               __pdataCOMRAM 0047            __end_ofi2___almod 1FE2                 ?i2_i2c_Start 0001  
               ?i2_i2c_Write 0001                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                  _i2c_Restart 25F0              _Display_Warning 1FE2  
            _Display_Version 1BE0                _error1counter 00BE                  ?_Read1USART 0001  
              _error2counter 0047                _error3counter 00BA        __end_ofi2_Feeder_Stop 2646  
              _error4counter 00B6                _error5counter 00B2                   __accesstop 0060  
    __end_of__initialization 2142                _error6counter 00AE                ___rparam_used 000001  
           ??_DelayTime_10ms 008E               __pcstackCOMRAM 0001                  ?_InitTimer0 0001  
                ?_InitTimer1 0001                  ?_InitTimer2 0001                 __pidataBANK0 249E  
           ??_Feeder_Rotate1 008C             ??_Feeder_Rotate2 008C            __end_of_i2c_Start 25F0  
                _LifterFault 003E            __end_of_i2c_Write 25BA                  _Lifter_Down 261C  
                _Lifter_Init 2458                  _Lifter_Stop 2616            __end_of_Lifter_Up 2616  
 main@sol_activation_on_time 0113                    ?_i2c_Init 0001                    ?_i2c_Read 008D  
                 __pbssBANK0 0060                   __pbssBANK1 0121                    ?_i2c_Wait 0001  
            ??i2_Write1USART 0001                    ?_i2c_Stop 0001                ??_Write1USART 008C  
           i2displayno@digit 0001         __end_of_Lifter_Brake 2628        __end_of_Display_Error 20DE  
                    ?___lmul 008C               ___lmul@product 0094        __end_ofi2_i2c_Address 258A  
               ?i2_displayno 0001      __end_of_Display_Warning 2060           i2c_Address@address 008E  
    __end_of_Display_Version 1CEE                      _SPBRGH2 000F7D                      _SSP2ADD 000F6E  
      __end_ofi2_i2c_Restart 2610                      _SSP2BUF 000F6F                    ?_high_isr 0001  
     Display_Warning@enumber 0007                 ??i2_i2c_Read 0004                   ??_i2c_Init 008C  
                 ??_i2c_Read 008F                 ??i2_i2c_Wait 0001                 ?_Feeder_Stop 0001  
                 ??_i2c_Wait 008C                 ??i2_i2c_Stop 0002                   ??_i2c_Stop 008D  
          i2Write1USART@data 0001                    ?_flushOut 0001                    ?_read_i2c 00A4  
                _Serial_Flag 008B            i2___aldiv@divisor 000F            i2___aldiv@counter 0013  
                    __Hparam 0000                      __Lparam 0000              i2write_i2c@data 001D  
                    _TempNum 0084          __end_of_Write1USART 25C8                      ___aldiv 1CEE  
                    ___almod 1E88            __end_of_displayno 19FC                   _sw1counter 00C4  
                    __pcinit 20DE                      __ramtop 1000            __end_of_initUSART 249E  
                    __ptext0 0380                      __ptext1 22E0                      __ptext2 2150  
                    __ptext3 25AC                      __ptext4 25E0                      __ptext5 25E8  
                    __ptext6 25F0                      __ptext7 23B0                      __ptext8 24F2  
                    __ptext9 254E           __end_ofi2_i2c_Read 2408        __end_ofi2_Lifter_Stop 2640  
         __end_ofi2_i2c_Wait 259C           __end_ofi2_i2c_Stop 2600             ___aldiv@dividend 0096  
           main@counter_1244 0104             main@counter_1261 0106             main@counter_1262 0108  
           main@counter_1263 010A                      _warning 0041                 ?i2_write_i2c 0019  
                    _startup 00C8                    _EAdd_High 00E3                   ??_high_isr 0027  
       end_of_initialization 2142                _DelayTime_1ms 2408         i2c_Address@l_address 008F  
                 ??_flushOut 008C                _FeederRotate1 0040                _FeederRotate2 003F  
               ??i2_read_i2c 001D                   ??_read_i2c 00A8                __Lmediumconst 0000  
           ___aldiv@quotient 00A0                      postdec1 000FE5                      postinc0 000FEE  
               ?_i2c_Address 008D               displayno@digit 008C                    _PORTBbits 000F81  
                  _PORTDbits 000F83                    _PORTEbits 000F84                    _PORTFbits 000F85  
           ?_Display_Warning 0007             ?_Display_Version 0001            __end_of_write_i2c 2334  
         __end_ofi2_read_i2c 222A                 ?_i2c_Restart 0001                    i2___aldiv 1DBC  
                  i2___almod 1F36                 ??_Read1USART 0001               ?_DelayTime_1ms 008C  
          i2___almod@divisor 0005                  _Write1USART 25BA            i2___almod@counter 0009  
               ??_InitTimer0 008C                 ??_InitTimer1 008C                 ??_InitTimer2 008C  
        i2read_i2c@read_byte 001D                ??_displayinit 008C               __end_of___lmul 22E0  
              __pidataCOMRAM 259C                 ?_Lifter_Down 0001                 ?_Lifter_Init 0001  
         __end_of_Read1USART 24F2                 ?_Lifter_Stop 0001                _Serial_Buffer 0070  
            main@cap_success 0100                    _i2c_Start 25E8                    _i2c_Write 25AC  
        start_initialization 20DE                 _Lifter_Brake 2622                    _Lifter_Up 2610  
                 ?i2___aldiv 000B                   ?i2___almod 0001           __end_of_InitTimer0 254E  
         __end_of_InitTimer1 2522           __end_of_InitTimer2 2576            DelayTime_1ms@time 008C  
          i2i2c_Address@mode 0002                     ??___lmul 0094  main@sol_activation_off_time 0115  
                __pdataBANK0 00AE                    _TotalNumH 00CD                    _TotalNumL 00D1  
              i2i2c_Read@ack 0004                   ?_i2c_Start 0001                   ?_i2c_Write 0001  
                __pbssCOMRAM 002C          __end_of_displayinit 24D8                __pcstackBANK0 008C  
              __pcstackBANK1 0100              ??_DelayTime_1ms 008E                   ?_Lifter_Up 0001  
            i2i2c_Write@data 0002            i2displayno@number 0003        __end_ofi2_Write1USART 25D4  
                  __pnvBANK0 00CD                    __pintcode 0008                     ?___aldiv 0096  
                   ?___almod 008C                 _error_number 0055             ___almod@dividend 008C  
                  _displayno 1816                    _initUSART 247C                  ??i2___aldiv 0013  
                ??i2___almod 0009              Write1USART@data 008C              ___aldiv@divisor 009A  
              i2_Feeder_Stop 2640              ___aldiv@counter 009E                     _LATAbits 000F89  
                   _LATBbits 000F8A                     _EAdd_Low 00E1                     _LATCbits 000F8B  
                   _LATEbits 000F8D                     _LATFbits 000F8E                     _IPR1bits 000F9F  
                   _IPR3bits 000FA5                     _PIE3bits 000FA3                     i2u240_40 1F88  
                   i2u400_40 0142                     i2u401_40 0176                     i2u226_40 1E22  
                   i2u402_40 01AA                     i2u403_40 01DA                     i2u252_40 151C  
                   i2u420_40 0316                     i2u412_40 027A                     i2u404_40 01F8  
                   i2u253_40 15C6                     i2u421_40 0348                     i2u405_40 0216  
                   i2u418_40 02E4                     _PIR3bits 000FA4                     i2u396_40 0084  
                   i2u397_40 00A6                     i2u398_40 00DA                     i2u399_40 010E  
                   _RCONbits 000FD0                     _SSP2CON1 000F6C                     _SSP2CON2 000F6B  
      main@lift_up_hold_time 0120                     _SSP2STAT 000F6D                  _displayinit 24BE  
                  _thousands 0030                   _ADCON0bits 000FC2                   _ADCON1bits 000FC1  
                 ?_displayno 008C         i2i2c_Address@address 0003                ??i2_i2c_Start 0002  
                  high_isr@c 002A                    main@capin 0111                    high_isr@i 002B  
                ??_i2c_Start 008D                ??i2_i2c_Write 0002                  ??_i2c_Write 008D  
                 ?_initUSART 0001        i2i2c_Read@i2cReadData 0005                  ??_Lifter_Up 008C  
               _Serial_GData 0046                    _write_i2c 22E0            ___lmul@multiplier 008C  
                  copy_data0 20F2                    copy_data1 2112                 _Serial_Count 003A  
                   _i2c_Init 2522                     _i2c_Read 23B0                     _i2c_Wait 254E  
         i2___aldiv@dividend 000B                     _i2c_Stop 25E0               ?i2_Feeder_Stop 0001  
               ?_Write1USART 0001                    flushOut@i 008C                   _ANCON0bits 000FC1  
                   __Hrparam 0000                     __Lrparam 0000                _Display_Error 2060  
                   _TotalNum 0080                i2_i2c_Address 2576           i2___aldiv@quotient 0015  
          main@start_capping 0117                  _error_digit 00CA                     __ptext10 1CEE  
                   __ptext11 247C                     __ptext20 2458                     __ptext12 222A  
                   __ptext21 2616                     __ptext13 2522                     __ptext30 1BE0  
                   __ptext22 261C                     __ptext14 237E                     __ptext31 1816  
                   __ptext23 2622                     __ptext15 24BE                     __ptext40 2334  
                   __ptext32 2408                     __ptext24 2562                     __ptext16 2288  
                   __ptext41 21C2                     __ptext33 2430                     __ptext25 250A  
                   __ptext17 1E88                     __ptext50 1F36                     __ptext42 25D4  
                   __ptext26 2538                     __ptext18 25BA                     __ptext51 1FE2  
                   __ptext43 25F8                     __ptext35 25C8                     __ptext27 2628  
                   __ptext19 2610                     __ptext52 2060                     __ptext44 2600  
                   __ptext36 263A                     __ptext28 262E                     __ptext53 19FC  
                   __ptext45 2608                     __ptext37 2640                     __ptext29 2634  
                   __ptext46 23DE                     __ptext38 24D8                     __ptext47 2576  
                   __ptext39 14FE                     __ptext48 258A                     __ptext49 1DBC  
           main@sol_off_time 011E                   ?_write_i2c 00A4             write_i2c@address 00A4  
              i2_i2c_Restart 2608                     _high_isr 0008              ___almod@divisor 0090  
        __end_ofi2_i2c_Start 2608            read_i2c@read_byte 00A8          __end_ofi2_i2c_Write 25E0  
            ___almod@counter 0094                     _flushOut 237E                     _read_i2c 2150  
                   _hundreds 0032                     isa$xinst 000000               ?_Display_Error 0007  
          i2read_i2c@address 0019                     int$flags 0057                     main@num1 0118  
                   main@num2 0119                     main@num3 011A                     main@num4 011B  
             ?i2_i2c_Address 0002            _Serial_Buffer_Out 0060                ??i2_displayno 0005  
                ??_displayno 0090               _DelayTime_10ms 2430                i2_Lifter_Stop 263A  
             _TotalNum_HighH 00DF               _TotalNum_HighL 00DD                   _INTCONbits 000FF2  
                ??_initUSART 008C               _Feeder_Rotate1 2634               _Feeder_Rotate2 262E  
             ?i2_i2c_Restart 0001              ??i2_Feeder_Stop 0001                ??_Feeder_Stop 008C  
          _ISR_UpdateDisplay 14FE                     intlevel2 0000           ?_ISR_UpdateDisplay 0001  
     main@lifter_up_position 011F              i2c_Address@mode 008D        Display_Version@cdigit 009A  
            main@sol_on_time 011D               _warning_number 00CC                   _RCSTA1bits 000FAC  
                 _RCSTA2bits 000F9C        Display_Version@repeat 0098          ??_ISR_UpdateDisplay 001F  
     __end_of_DelayTime_10ms 2458                _TotalNum_LowH 00DB                _TotalNum_LowL 00D9  
          _LiftUpHoldCounter 00C6               ?i2_Lifter_Stop 0001       __end_of_Feeder_Rotate1 263A  
     __end_of_Feeder_Rotate2 2634           _Serial_Temp_Buffer 0121                  i2_i2c_Start 2600  
       Display_Version@delay 0094                  i2_i2c_Write 25D4                 ___aldiv@sign 009F  
  __end_of_ISR_UpdateDisplay 1816          __end_ofi2_displayno 1BE0                   _WDTCONbits 000FC0  
              ??i2_write_i2c 001F              displayno@number 008E                  ??_write_i2c 00AA  
        i2c_Read@i2cReadData 0090        __end_of_DelayTime_1ms 2430                   i2_i2c_Read 23DE  
                 i2_i2c_Wait 258A                write_i2c@data 00A8                   i2_i2c_Stop 25F8  
               ___almod@sign 0095          Display_Version@loop 0096            main@swcounterflag 010D  
          ??_Display_Warning 0009          __end_of_Feeder_Stop 262E                  _update_7seg 0044  
            ??_Display_Error 0009            ??_Display_Version 0092  
